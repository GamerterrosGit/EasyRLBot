// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';



export class Bool {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Bool {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

val():boolean {
  return !!this.bb!.readInt8(this.bb_pos);
}

static sizeOf():number {
  return 1;
}

static createBool(builder:flatbuffers.Builder, val: boolean):flatbuffers.Offset {
  builder.prep(1, 1);
  builder.writeInt8(+val);
  return builder.offset();
}


unpack(): BoolT {
  return new BoolT(
    this.val()
  );
}


unpackTo(_o: BoolT): void {
  _o.val = this.val();
}
}

export class BoolT {
constructor(
  public val: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return Bool.createBool(builder,
    this.val
  );
}
}
