// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Vector3, Vector3T } from '../../rlbot/flat/vector3';


export class BoostPad {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):BoostPad {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBoostPad(bb:flatbuffers.ByteBuffer, obj?:BoostPad):BoostPad {
  return (obj || new BoostPad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBoostPad(bb:flatbuffers.ByteBuffer, obj?:BoostPad):BoostPad {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new BoostPad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

location(obj?:Vector3):Vector3|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new Vector3()).__init(this.bb_pos + offset, this.bb!) : null;
}

isFullBoost():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

static startBoostPad(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, locationOffset, 0);
}

static addIsFullBoost(builder:flatbuffers.Builder, isFullBoost:boolean) {
  builder.addFieldInt8(1, +isFullBoost, +false);
}

static endBoostPad(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createBoostPad(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset, isFullBoost:boolean):flatbuffers.Offset {
  BoostPad.startBoostPad(builder);
  BoostPad.addLocation(builder, locationOffset);
  BoostPad.addIsFullBoost(builder, isFullBoost);
  return BoostPad.endBoostPad(builder);
}

unpack(): BoostPadT {
  return new BoostPadT(
    (this.location() !== null ? this.location()!.unpack() : null),
    this.isFullBoost()
  );
}


unpackTo(_o: BoostPadT): void {
  _o.location = (this.location() !== null ? this.location()!.unpack() : null);
  _o.isFullBoost = this.isFullBoost();
}
}

export class BoostPadT {
constructor(
  public location: Vector3T|null = null,
  public isFullBoost: boolean = false
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return BoostPad.createBoostPad(builder,
    (this.location !== null ? this.location!.pack(builder) : 0),
    this.isFullBoost
  );
}
}
