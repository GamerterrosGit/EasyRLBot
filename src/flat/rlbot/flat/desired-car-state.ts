// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { Bool, BoolT } from '../../rlbot/flat/bool';
import { DesiredPhysics, DesiredPhysicsT } from '../../rlbot/flat/desired-physics';
import { Float, FloatT } from '../../rlbot/flat/float';


export class DesiredCarState {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):DesiredCarState {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsDesiredCarState(bb:flatbuffers.ByteBuffer, obj?:DesiredCarState):DesiredCarState {
  return (obj || new DesiredCarState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsDesiredCarState(bb:flatbuffers.ByteBuffer, obj?:DesiredCarState):DesiredCarState {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new DesiredCarState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

physics(obj?:DesiredPhysics):DesiredPhysics|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new DesiredPhysics()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

boostAmount(obj?:Float):Float|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Float()).__init(this.bb_pos + offset, this.bb!) : null;
}

jumped(obj?:Bool):Bool|null {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? (obj || new Bool()).__init(this.bb_pos + offset, this.bb!) : null;
}

doubleJumped(obj?:Bool):Bool|null {
  const offset = this.bb!.__offset(this.bb_pos, 10);
  return offset ? (obj || new Bool()).__init(this.bb_pos + offset, this.bb!) : null;
}

static startDesiredCarState(builder:flatbuffers.Builder) {
  builder.startObject(4);
}

static addPhysics(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, physicsOffset, 0);
}

static addBoostAmount(builder:flatbuffers.Builder, boostAmountOffset:flatbuffers.Offset) {
  builder.addFieldStruct(1, boostAmountOffset, 0);
}

static addJumped(builder:flatbuffers.Builder, jumpedOffset:flatbuffers.Offset) {
  builder.addFieldStruct(2, jumpedOffset, 0);
}

static addDoubleJumped(builder:flatbuffers.Builder, doubleJumpedOffset:flatbuffers.Offset) {
  builder.addFieldStruct(3, doubleJumpedOffset, 0);
}

static endDesiredCarState(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}


unpack(): DesiredCarStateT {
  return new DesiredCarStateT(
    (this.physics() !== null ? this.physics()!.unpack() : null),
    (this.boostAmount() !== null ? this.boostAmount()!.unpack() : null),
    (this.jumped() !== null ? this.jumped()!.unpack() : null),
    (this.doubleJumped() !== null ? this.doubleJumped()!.unpack() : null)
  );
}


unpackTo(_o: DesiredCarStateT): void {
  _o.physics = (this.physics() !== null ? this.physics()!.unpack() : null);
  _o.boostAmount = (this.boostAmount() !== null ? this.boostAmount()!.unpack() : null);
  _o.jumped = (this.jumped() !== null ? this.jumped()!.unpack() : null);
  _o.doubleJumped = (this.doubleJumped() !== null ? this.doubleJumped()!.unpack() : null);
}
}

export class DesiredCarStateT {
constructor(
  public physics: DesiredPhysicsT|null = null,
  public boostAmount: FloatT|null = null,
  public jumped: BoolT|null = null,
  public doubleJumped: BoolT|null = null
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  const physics = (this.physics !== null ? this.physics!.pack(builder) : 0);

  DesiredCarState.startDesiredCarState(builder);
  DesiredCarState.addPhysics(builder, physics);
  DesiredCarState.addBoostAmount(builder, (this.boostAmount !== null ? this.boostAmount!.pack(builder) : 0));
  DesiredCarState.addJumped(builder, (this.jumped !== null ? this.jumped!.pack(builder) : 0));
  DesiredCarState.addDoubleJumped(builder, (this.doubleJumped !== null ? this.doubleJumped!.pack(builder) : 0));

  return DesiredCarState.endDesiredCarState(builder);
}
}
