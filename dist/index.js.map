{
  "version": 3,
  "sources": ["../node_modules/colors/lib/styles.js", "../node_modules/colors/lib/system/has-flag.js", "../node_modules/colors/lib/system/supports-colors.js", "../node_modules/colors/lib/custom/trap.js", "../node_modules/colors/lib/custom/zalgo.js", "../node_modules/colors/lib/maps/america.js", "../node_modules/colors/lib/maps/zebra.js", "../node_modules/colors/lib/maps/rainbow.js", "../node_modules/colors/lib/maps/random.js", "../node_modules/colors/lib/colors.js", "../node_modules/colors/lib/extendStringPrototype.js", "../node_modules/colors/lib/index.js", "../node_modules/flatbuffers/js/flatbuffers.js", "../src/index.ts", "../src/BotClient.ts", "../src/flat/rlbot_generated.ts", "../src/ControllerManager.ts", "../src/utils.ts", "../src/flat/flatstructs.ts", "../src/GameState.ts", "../src/RenderManager.ts", "../src/BotManager.ts", "../src/QuickChats.ts"],
  "sourcesContent": ["/*\nThe MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nvar styles = {};\nmodule['exports'] = styles;\n\nvar codes = {\n  reset: [0, 0],\n\n  bold: [1, 22],\n  dim: [2, 22],\n  italic: [3, 23],\n  underline: [4, 24],\n  inverse: [7, 27],\n  hidden: [8, 28],\n  strikethrough: [9, 29],\n\n  black: [30, 39],\n  red: [31, 39],\n  green: [32, 39],\n  yellow: [33, 39],\n  blue: [34, 39],\n  magenta: [35, 39],\n  cyan: [36, 39],\n  white: [37, 39],\n  gray: [90, 39],\n  grey: [90, 39],\n\n  brightRed: [91, 39],\n  brightGreen: [92, 39],\n  brightYellow: [93, 39],\n  brightBlue: [94, 39],\n  brightMagenta: [95, 39],\n  brightCyan: [96, 39],\n  brightWhite: [97, 39],\n\n  bgBlack: [40, 49],\n  bgRed: [41, 49],\n  bgGreen: [42, 49],\n  bgYellow: [43, 49],\n  bgBlue: [44, 49],\n  bgMagenta: [45, 49],\n  bgCyan: [46, 49],\n  bgWhite: [47, 49],\n  bgGray: [100, 49],\n  bgGrey: [100, 49],\n\n  bgBrightRed: [101, 49],\n  bgBrightGreen: [102, 49],\n  bgBrightYellow: [103, 49],\n  bgBrightBlue: [104, 49],\n  bgBrightMagenta: [105, 49],\n  bgBrightCyan: [106, 49],\n  bgBrightWhite: [107, 49],\n\n  // legacy styles for colors pre v1.0.0\n  blackBG: [40, 49],\n  redBG: [41, 49],\n  greenBG: [42, 49],\n  yellowBG: [43, 49],\n  blueBG: [44, 49],\n  magentaBG: [45, 49],\n  cyanBG: [46, 49],\n  whiteBG: [47, 49],\n\n};\n\nObject.keys(codes).forEach(function(key) {\n  var val = codes[key];\n  var style = styles[key] = [];\n  style.open = '\\u001b[' + val[0] + 'm';\n  style.close = '\\u001b[' + val[1] + 'm';\n});\n", "/*\nMIT License\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\n'use strict';\n\nmodule.exports = function(flag, argv) {\n  argv = argv || process.argv;\n\n  var terminatorPos = argv.indexOf('--');\n  var prefix = /^-{1,2}/.test(flag) ? '' : '--';\n  var pos = argv.indexOf(prefix + flag);\n\n  return pos !== -1 && (terminatorPos === -1 ? true : pos < terminatorPos);\n};\n", "/*\nThe MIT License (MIT)\n\nCopyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\n'use strict';\n\nvar os = require('os');\nvar hasFlag = require('./has-flag.js');\n\nvar env = process.env;\n\nvar forceColor = void 0;\nif (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false')) {\n  forceColor = false;\n} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true')\n           || hasFlag('color=always')) {\n  forceColor = true;\n}\nif ('FORCE_COLOR' in env) {\n  forceColor = env.FORCE_COLOR.length === 0\n    || parseInt(env.FORCE_COLOR, 10) !== 0;\n}\n\nfunction translateLevel(level) {\n  if (level === 0) {\n    return false;\n  }\n\n  return {\n    level: level,\n    hasBasic: true,\n    has256: level >= 2,\n    has16m: level >= 3,\n  };\n}\n\nfunction supportsColor(stream) {\n  if (forceColor === false) {\n    return 0;\n  }\n\n  if (hasFlag('color=16m') || hasFlag('color=full')\n      || hasFlag('color=truecolor')) {\n    return 3;\n  }\n\n  if (hasFlag('color=256')) {\n    return 2;\n  }\n\n  if (stream && !stream.isTTY && forceColor !== true) {\n    return 0;\n  }\n\n  var min = forceColor ? 1 : 0;\n\n  if (process.platform === 'win32') {\n    // Node.js 7.5.0 is the first version of Node.js to include a patch to\n    // libuv that enables 256 color output on Windows. Anything earlier and it\n    // won't work. However, here we target Node.js 8 at minimum as it is an LTS\n    // release, and Node.js 7 is not. Windows 10 build 10586 is the first\n    // Windows release that supports 256 colors. Windows 10 build 14931 is the\n    // first release that supports 16m/TrueColor.\n    var osRelease = os.release().split('.');\n    if (Number(process.versions.node.split('.')[0]) >= 8\n        && Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {\n      return Number(osRelease[2]) >= 14931 ? 3 : 2;\n    }\n\n    return 1;\n  }\n\n  if ('CI' in env) {\n    if (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI'].some(function(sign) {\n      return sign in env;\n    }) || env.CI_NAME === 'codeship') {\n      return 1;\n    }\n\n    return min;\n  }\n\n  if ('TEAMCITY_VERSION' in env) {\n    return (/^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0\n    );\n  }\n\n  if ('TERM_PROGRAM' in env) {\n    var version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n    switch (env.TERM_PROGRAM) {\n      case 'iTerm.app':\n        return version >= 3 ? 3 : 2;\n      case 'Hyper':\n        return 3;\n      case 'Apple_Terminal':\n        return 2;\n      // No default\n    }\n  }\n\n  if (/-256(color)?$/i.test(env.TERM)) {\n    return 2;\n  }\n\n  if (/^screen|^xterm|^vt100|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n    return 1;\n  }\n\n  if ('COLORTERM' in env) {\n    return 1;\n  }\n\n  if (env.TERM === 'dumb') {\n    return min;\n  }\n\n  return min;\n}\n\nfunction getSupportLevel(stream) {\n  var level = supportsColor(stream);\n  return translateLevel(level);\n}\n\nmodule.exports = {\n  supportsColor: getSupportLevel,\n  stdout: getSupportLevel(process.stdout),\n  stderr: getSupportLevel(process.stderr),\n};\n", "module['exports'] = function runTheTrap(text, options) {\n  var result = '';\n  text = text || 'Run the trap, drop the bass';\n  text = text.split('');\n  var trap = {\n    a: ['\\u0040', '\\u0104', '\\u023a', '\\u0245', '\\u0394', '\\u039b', '\\u0414'],\n    b: ['\\u00df', '\\u0181', '\\u0243', '\\u026e', '\\u03b2', '\\u0e3f'],\n    c: ['\\u00a9', '\\u023b', '\\u03fe'],\n    d: ['\\u00d0', '\\u018a', '\\u0500', '\\u0501', '\\u0502', '\\u0503'],\n    e: ['\\u00cb', '\\u0115', '\\u018e', '\\u0258', '\\u03a3', '\\u03be', '\\u04bc',\n      '\\u0a6c'],\n    f: ['\\u04fa'],\n    g: ['\\u0262'],\n    h: ['\\u0126', '\\u0195', '\\u04a2', '\\u04ba', '\\u04c7', '\\u050a'],\n    i: ['\\u0f0f'],\n    j: ['\\u0134'],\n    k: ['\\u0138', '\\u04a0', '\\u04c3', '\\u051e'],\n    l: ['\\u0139'],\n    m: ['\\u028d', '\\u04cd', '\\u04ce', '\\u0520', '\\u0521', '\\u0d69'],\n    n: ['\\u00d1', '\\u014b', '\\u019d', '\\u0376', '\\u03a0', '\\u048a'],\n    o: ['\\u00d8', '\\u00f5', '\\u00f8', '\\u01fe', '\\u0298', '\\u047a', '\\u05dd',\n      '\\u06dd', '\\u0e4f'],\n    p: ['\\u01f7', '\\u048e'],\n    q: ['\\u09cd'],\n    r: ['\\u00ae', '\\u01a6', '\\u0210', '\\u024c', '\\u0280', '\\u042f'],\n    s: ['\\u00a7', '\\u03de', '\\u03df', '\\u03e8'],\n    t: ['\\u0141', '\\u0166', '\\u0373'],\n    u: ['\\u01b1', '\\u054d'],\n    v: ['\\u05d8'],\n    w: ['\\u0428', '\\u0460', '\\u047c', '\\u0d70'],\n    x: ['\\u04b2', '\\u04fe', '\\u04fc', '\\u04fd'],\n    y: ['\\u00a5', '\\u04b0', '\\u04cb'],\n    z: ['\\u01b5', '\\u0240'],\n  };\n  text.forEach(function(c) {\n    c = c.toLowerCase();\n    var chars = trap[c] || [' '];\n    var rand = Math.floor(Math.random() * chars.length);\n    if (typeof trap[c] !== 'undefined') {\n      result += trap[c][rand];\n    } else {\n      result += c;\n    }\n  });\n  return result;\n};\n", "// please no\nmodule['exports'] = function zalgo(text, options) {\n  text = text || '   he is here   ';\n  var soul = {\n    'up': [\n      '\u030D', '\u030E', '\u0304', '\u0305',\n      '\u033F', '\u0311', '\u0306', '\u0310',\n      '\u0352', '\u0357', '\u0351', '\u0307',\n      '\u0308', '\u030A', '\u0342', '\u0313',\n      '\u0308', '\u034A', '\u034B', '\u034C',\n      '\u0303', '\u0302', '\u030C', '\u0350',\n      '\u0300', '\u0301', '\u030B', '\u030F',\n      '\u0312', '\u0313', '\u0314', '\u033D',\n      '\u0309', '\u0363', '\u0364', '\u0365',\n      '\u0366', '\u0367', '\u0368', '\u0369',\n      '\u036A', '\u036B', '\u036C', '\u036D',\n      '\u036E', '\u036F', '\u033E', '\u035B',\n      '\u0346', '\u031A',\n    ],\n    'down': [\n      '\u0316', '\u0317', '\u0318', '\u0319',\n      '\u031C', '\u031D', '\u031E', '\u031F',\n      '\u0320', '\u0324', '\u0325', '\u0326',\n      '\u0329', '\u032A', '\u032B', '\u032C',\n      '\u032D', '\u032E', '\u032F', '\u0330',\n      '\u0331', '\u0332', '\u0333', '\u0339',\n      '\u033A', '\u033B', '\u033C', '\u0345',\n      '\u0347', '\u0348', '\u0349', '\u034D',\n      '\u034E', '\u0353', '\u0354', '\u0355',\n      '\u0356', '\u0359', '\u035A', '\u0323',\n    ],\n    'mid': [\n      '\u0315', '\u031B', '\u0300', '\u0301',\n      '\u0358', '\u0321', '\u0322', '\u0327',\n      '\u0328', '\u0334', '\u0335', '\u0336',\n      '\u035C', '\u035D', '\u035E',\n      '\u035F', '\u0360', '\u0362', '\u0338',\n      '\u0337', '\u0361', ' \u0489',\n    ],\n  };\n  var all = [].concat(soul.up, soul.down, soul.mid);\n\n  function randomNumber(range) {\n    var r = Math.floor(Math.random() * range);\n    return r;\n  }\n\n  function isChar(character) {\n    var bool = false;\n    all.filter(function(i) {\n      bool = (i === character);\n    });\n    return bool;\n  }\n\n\n  function heComes(text, options) {\n    var result = '';\n    var counts;\n    var l;\n    options = options || {};\n    options['up'] =\n      typeof options['up'] !== 'undefined' ? options['up'] : true;\n    options['mid'] =\n      typeof options['mid'] !== 'undefined' ? options['mid'] : true;\n    options['down'] =\n      typeof options['down'] !== 'undefined' ? options['down'] : true;\n    options['size'] =\n      typeof options['size'] !== 'undefined' ? options['size'] : 'maxi';\n    text = text.split('');\n    for (l in text) {\n      if (isChar(l)) {\n        continue;\n      }\n      result = result + text[l];\n      counts = {'up': 0, 'down': 0, 'mid': 0};\n      switch (options.size) {\n        case 'mini':\n          counts.up = randomNumber(8);\n          counts.mid = randomNumber(2);\n          counts.down = randomNumber(8);\n          break;\n        case 'maxi':\n          counts.up = randomNumber(16) + 3;\n          counts.mid = randomNumber(4) + 1;\n          counts.down = randomNumber(64) + 3;\n          break;\n        default:\n          counts.up = randomNumber(8) + 1;\n          counts.mid = randomNumber(6) / 2;\n          counts.down = randomNumber(8) + 1;\n          break;\n      }\n\n      var arr = ['up', 'mid', 'down'];\n      for (var d in arr) {\n        var index = arr[d];\n        for (var i = 0; i <= counts[index]; i++) {\n          if (options[index]) {\n            result = result + soul[index][randomNumber(soul[index].length)];\n          }\n        }\n      }\n    }\n    return result;\n  }\n  // don't summon him\n  return heComes(text, options);\n};\n\n", "module['exports'] = function(colors) {\n  return function(letter, i, exploded) {\n    if (letter === ' ') return letter;\n    switch (i%3) {\n      case 0: return colors.red(letter);\n      case 1: return colors.white(letter);\n      case 2: return colors.blue(letter);\n    }\n  };\n};\n", "module['exports'] = function(colors) {\n  return function(letter, i, exploded) {\n    return i % 2 === 0 ? letter : colors.inverse(letter);\n  };\n};\n", "module['exports'] = function(colors) {\n  // RoY G BiV\n  var rainbowColors = ['red', 'yellow', 'green', 'blue', 'magenta'];\n  return function(letter, i, exploded) {\n    if (letter === ' ') {\n      return letter;\n    } else {\n      return colors[rainbowColors[i++ % rainbowColors.length]](letter);\n    }\n  };\n};\n\n", "module['exports'] = function(colors) {\n  var available = ['underline', 'inverse', 'grey', 'yellow', 'red', 'green',\n    'blue', 'white', 'cyan', 'magenta', 'brightYellow', 'brightRed',\n    'brightGreen', 'brightBlue', 'brightWhite', 'brightCyan', 'brightMagenta'];\n  return function(letter, i, exploded) {\n    return letter === ' ' ? letter :\n      colors[\n          available[Math.round(Math.random() * (available.length - 2))]\n      ](letter);\n  };\n};\n", "/*\n\nThe MIT License (MIT)\n\nOriginal Library\n  - Copyright (c) Marak Squires\n\nAdditional functionality\n - Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n\nvar colors = {};\nmodule['exports'] = colors;\n\ncolors.themes = {};\n\nvar util = require('util');\nvar ansiStyles = colors.styles = require('./styles');\nvar defineProps = Object.defineProperties;\nvar newLineRegex = new RegExp(/[\\r\\n]+/g);\n\ncolors.supportsColor = require('./system/supports-colors').supportsColor;\n\nif (typeof colors.enabled === 'undefined') {\n  colors.enabled = colors.supportsColor() !== false;\n}\n\ncolors.enable = function() {\n  colors.enabled = true;\n};\n\ncolors.disable = function() {\n  colors.enabled = false;\n};\n\ncolors.stripColors = colors.strip = function(str) {\n  return ('' + str).replace(/\\x1B\\[\\d+m/g, '');\n};\n\n// eslint-disable-next-line no-unused-vars\nvar stylize = colors.stylize = function stylize(str, style) {\n  if (!colors.enabled) {\n    return str+'';\n  }\n\n  var styleMap = ansiStyles[style];\n\n  // Stylize should work for non-ANSI styles, too\n  if(!styleMap && style in colors){\n    // Style maps like trap operate as functions on strings;\n    // they don't have properties like open or close.\n    return colors[style](str);\n  }\n\n  return styleMap.open + str + styleMap.close;\n};\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\nvar escapeStringRegexp = function(str) {\n  if (typeof str !== 'string') {\n    throw new TypeError('Expected a string');\n  }\n  return str.replace(matchOperatorsRe, '\\\\$&');\n};\n\nfunction build(_styles) {\n  var builder = function builder() {\n    return applyStyle.apply(builder, arguments);\n  };\n  builder._styles = _styles;\n  // __proto__ is used because we must return a function, but there is\n  // no way to create a function with a different prototype.\n  builder.__proto__ = proto;\n  return builder;\n}\n\nvar styles = (function() {\n  var ret = {};\n  ansiStyles.grey = ansiStyles.gray;\n  Object.keys(ansiStyles).forEach(function(key) {\n    ansiStyles[key].closeRe =\n      new RegExp(escapeStringRegexp(ansiStyles[key].close), 'g');\n    ret[key] = {\n      get: function() {\n        return build(this._styles.concat(key));\n      },\n    };\n  });\n  return ret;\n})();\n\nvar proto = defineProps(function colors() {}, styles);\n\nfunction applyStyle() {\n  var args = Array.prototype.slice.call(arguments);\n\n  var str = args.map(function(arg) {\n    // Use weak equality check so we can colorize null/undefined in safe mode\n    if (arg != null && arg.constructor === String) {\n      return arg;\n    } else {\n      return util.inspect(arg);\n    }\n  }).join(' ');\n\n  if (!colors.enabled || !str) {\n    return str;\n  }\n\n  var newLinesPresent = str.indexOf('\\n') != -1;\n\n  var nestedStyles = this._styles;\n\n  var i = nestedStyles.length;\n  while (i--) {\n    var code = ansiStyles[nestedStyles[i]];\n    str = code.open + str.replace(code.closeRe, code.open) + code.close;\n    if (newLinesPresent) {\n      str = str.replace(newLineRegex, function(match) {\n        return code.close + match + code.open;\n      });\n    }\n  }\n\n  return str;\n}\n\ncolors.setTheme = function(theme) {\n  if (typeof theme === 'string') {\n    console.log('colors.setTheme now only accepts an object, not a string.  ' +\n      'If you are trying to set a theme from a file, it is now your (the ' +\n      'caller\\'s) responsibility to require the file.  The old syntax ' +\n      'looked like colors.setTheme(__dirname + ' +\n      '\\'/../themes/generic-logging.js\\'); The new syntax looks like '+\n      'colors.setTheme(require(__dirname + ' +\n      '\\'/../themes/generic-logging.js\\'));');\n    return;\n  }\n  for (var style in theme) {\n    (function(style) {\n      colors[style] = function(str) {\n        if (typeof theme[style] === 'object') {\n          var out = str;\n          for (var i in theme[style]) {\n            out = colors[theme[style][i]](out);\n          }\n          return out;\n        }\n        return colors[theme[style]](str);\n      };\n    })(style);\n  }\n};\n\nfunction init() {\n  var ret = {};\n  Object.keys(styles).forEach(function(name) {\n    ret[name] = {\n      get: function() {\n        return build([name]);\n      },\n    };\n  });\n  return ret;\n}\n\nvar sequencer = function sequencer(map, str) {\n  var exploded = str.split('');\n  exploded = exploded.map(map);\n  return exploded.join('');\n};\n\n// custom formatter methods\ncolors.trap = require('./custom/trap');\ncolors.zalgo = require('./custom/zalgo');\n\n// maps\ncolors.maps = {};\ncolors.maps.america = require('./maps/america')(colors);\ncolors.maps.zebra = require('./maps/zebra')(colors);\ncolors.maps.rainbow = require('./maps/rainbow')(colors);\ncolors.maps.random = require('./maps/random')(colors);\n\nfor (var map in colors.maps) {\n  (function(map) {\n    colors[map] = function(str) {\n      return sequencer(colors.maps[map], str);\n    };\n  })(map);\n}\n\ndefineProps(colors, init());\n", "var colors = require('./colors');\n\nmodule['exports'] = function() {\n  //\n  // Extends prototype of native string object to allow for \"foo\".red syntax\n  //\n  var addProperty = function(color, func) {\n    String.prototype.__defineGetter__(color, func);\n  };\n\n  addProperty('strip', function() {\n    return colors.strip(this);\n  });\n\n  addProperty('stripColors', function() {\n    return colors.strip(this);\n  });\n\n  addProperty('trap', function() {\n    return colors.trap(this);\n  });\n\n  addProperty('zalgo', function() {\n    return colors.zalgo(this);\n  });\n\n  addProperty('zebra', function() {\n    return colors.zebra(this);\n  });\n\n  addProperty('rainbow', function() {\n    return colors.rainbow(this);\n  });\n\n  addProperty('random', function() {\n    return colors.random(this);\n  });\n\n  addProperty('america', function() {\n    return colors.america(this);\n  });\n\n  //\n  // Iterate through all default styles and colors\n  //\n  var x = Object.keys(colors.styles);\n  x.forEach(function(style) {\n    addProperty(style, function() {\n      return colors.stylize(this, style);\n    });\n  });\n\n  function applyTheme(theme) {\n    //\n    // Remark: This is a list of methods that exist\n    // on String that you should not overwrite.\n    //\n    var stringPrototypeBlacklist = [\n      '__defineGetter__', '__defineSetter__', '__lookupGetter__',\n      '__lookupSetter__', 'charAt', 'constructor', 'hasOwnProperty',\n      'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString',\n      'valueOf', 'charCodeAt', 'indexOf', 'lastIndexOf', 'length',\n      'localeCompare', 'match', 'repeat', 'replace', 'search', 'slice',\n      'split', 'substring', 'toLocaleLowerCase', 'toLocaleUpperCase',\n      'toLowerCase', 'toUpperCase', 'trim', 'trimLeft', 'trimRight',\n    ];\n\n    Object.keys(theme).forEach(function(prop) {\n      if (stringPrototypeBlacklist.indexOf(prop) !== -1) {\n        console.log('warn: '.red + ('String.prototype' + prop).magenta +\n          ' is probably something you don\\'t want to override.  ' +\n          'Ignoring style name');\n      } else {\n        if (typeof(theme[prop]) === 'string') {\n          colors[prop] = colors[theme[prop]];\n          addProperty(prop, function() {\n            return colors[prop](this);\n          });\n        } else {\n          var themePropApplicator = function(str) {\n            var ret = str || this;\n            for (var t = 0; t < theme[prop].length; t++) {\n              ret = colors[theme[prop][t]](ret);\n            }\n            return ret;\n          };\n          addProperty(prop, themePropApplicator);\n          colors[prop] = function(str) {\n            return themePropApplicator(str);\n          };\n        }\n      }\n    });\n  }\n\n  colors.setTheme = function(theme) {\n    if (typeof theme === 'string') {\n      console.log('colors.setTheme now only accepts an object, not a string. ' +\n        'If you are trying to set a theme from a file, it is now your (the ' +\n        'caller\\'s) responsibility to require the file.  The old syntax ' +\n        'looked like colors.setTheme(__dirname + ' +\n        '\\'/../themes/generic-logging.js\\'); The new syntax looks like '+\n        'colors.setTheme(require(__dirname + ' +\n        '\\'/../themes/generic-logging.js\\'));');\n      return;\n    } else {\n      applyTheme(theme);\n    }\n  };\n};\n", "var colors = require('./colors');\nmodule['exports'] = colors;\n\n// Remark: By default, colors will add style properties to String.prototype.\n//\n// If you don't wish to extend String.prototype, you can do this instead and\n// native String will not be touched:\n//\n//   var colors = require('colors/safe);\n//   colors.red(\"foo\")\n//\n//\nrequire('./extendStringPrototype')();\n", "/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nthis.flatbuffers = flatbuffers;\n\n/// @endcond\n/// @}\n", "import { BotClient as Client } from \"./BotClient\";\r\nimport { BotManager as Manager } from \"./BotManager\";\r\nimport quickChats from \"./QuickChats\";\r\n\r\nexport { Client, Manager, quickChats };\r\nexport * from \"./flat/flatstructs\";\r\nexport * from \"./ControllerManager\";\r\nexport * from \"./RenderManager\";\r\nexport * from \"./GameState\";\r\n", "import \"colors\";\r\nimport * as Net from \"net\";\r\nimport { flatbuffers } from \"flatbuffers\";\r\n\r\nimport { rlbot } from \"./flat/rlbot_generated\";\r\n\r\nimport { Controller, ControllerManager } from \"./ControllerManager\";\r\nimport { GameState } from \"./GameState\";\r\nimport { RenderManager } from \"./RenderManager\";\r\nimport * as utils from \"./utils\";\r\n\r\nclass BotClient {\r\n  ws: Net.Socket | null;\r\n  standalone: boolean;\r\n  readyMessageAccepted: boolean;\r\n\r\n  latestFieldInfo: utils.flatstructs.FieldInfo | null;\r\n  latestBallPrediction: utils.flatstructs.BallPrediction | null;\r\n  latestMatchSettings: utils.flatstructs.MatchSettings | null;\r\n\r\n  botIndex: number;\r\n\r\n  logger: utils.Logger;\r\n\r\n  renderer: RenderManager = new RenderManager(this);\r\n  controller: ControllerManager = new ControllerManager(this);\r\n\r\n  GameTickPacketRate: number = 0;\r\n\r\n  private internalName: string;\r\n\r\n  constructor(botIndex: number, ws: Net.Socket | null = null) {\r\n    if (botIndex == null) throw new Error(\"Give bot index\");\r\n    this.botIndex = botIndex;\r\n    this.internalName = `BOT-${this.botIndex}`;\r\n    this.logger = new utils.Logger(this.internalName);\r\n\r\n    this.standalone = ws == null;\r\n    if (this.standalone) {\r\n      const port = 23234;\r\n      const host = \"localhost\";\r\n\r\n      this.ws = new Net.Socket();\r\n      this.logger.log(\"Socket\", \"Connecting...\".yellow);\r\n      this.ws.connect({ port, host }, () => {\r\n        this.start();\r\n      });\r\n    } else {\r\n      this.ws = ws || new Net.Socket();\r\n      this.start();\r\n    }\r\n    this.readyMessageAccepted = false;\r\n\r\n    this.latestFieldInfo = null;\r\n    this.latestBallPrediction = null;\r\n    this.latestMatchSettings = null;\r\n\r\n    this.ws.on(\"data\", (f) => {\r\n      let chunks = utils.chunkSplitter(f);\r\n      for (let chunk of chunks) {\r\n        this.messageHandler(chunk);\r\n      }\r\n    });\r\n  }\r\n\r\n  onReady() {}\r\n\r\n  getOutput(\r\n    gameTickPacket: utils.flatstructs.GameTickPacket,\r\n    fieldInfo: utils.flatstructs.FieldInfo | null,\r\n    ballPrediction: utils.flatstructs.BallPrediction | null,\r\n    matchSettings: utils.flatstructs.MatchSettings | null\r\n  ) {}\r\n\r\n  onGameTickPacket(gameTickPacket: utils.flatstructs.GameTickPacket) {}\r\n\r\n  onFieldInfo(fieldInfo: utils.flatstructs.FieldInfo) {}\r\n\r\n  onMatchSettings(matchSettings: utils.flatstructs.MatchSettings) {}\r\n\r\n  onQuickChat(quickChat: utils.flatstructs.QuickChat) {}\r\n\r\n  onBallPrediction(ballPrediction: utils.flatstructs.BallPrediction) {}\r\n\r\n  private messageHandler(raw: Uint8Array) {\r\n    if (!this.readyMessageAccepted) {\r\n      this.readyMessageAccepted = true;\r\n      this.logger.log(\r\n        \"Socket\",\r\n        \"Server accepted ready message and is now sending GameTickPackets\".green\r\n      );\r\n      this.onReady();\r\n    }\r\n    if (this.ws === null) return;\r\n    let parsedLoad;\r\n    try {\r\n      parsedLoad = utils.decodeFlat(raw);\r\n    } catch {\r\n      return this.logger.log(\r\n        \"Socket\",\r\n        \"Recived incorrect data, socket is unstable.\"\r\n      );\r\n    }\r\n    let cleanLoad;\r\n    switch (parsedLoad.type) {\r\n      case 1:\r\n        this.GameTickPacketRate++;\r\n        setTimeout(\r\n          (() => {\r\n            this.GameTickPacketRate--;\r\n          }).bind(this),\r\n          1000\r\n        );\r\n        cleanLoad = new utils.flatstructs.GameTickPacket(parsedLoad.root);\r\n        this.onGameTickPacket(cleanLoad);\r\n        this.getOutput(\r\n          cleanLoad,\r\n          this.latestFieldInfo,\r\n          this.latestBallPrediction,\r\n          this.latestMatchSettings\r\n        );\r\n        break;\r\n      case 2:\r\n        cleanLoad = new utils.flatstructs.FieldInfo(parsedLoad.root);\r\n        this.onFieldInfo(cleanLoad);\r\n        this.latestFieldInfo = cleanLoad;\r\n        break;\r\n      case 3:\r\n        cleanLoad = new utils.flatstructs.MatchSettings(parsedLoad.root);\r\n        this.onMatchSettings(cleanLoad);\r\n        this.latestMatchSettings = cleanLoad;\r\n        break;\r\n      case 9:\r\n        cleanLoad = new utils.flatstructs.QuickChat(parsedLoad.root);\r\n        this.onQuickChat(cleanLoad);\r\n        break;\r\n      case 10:\r\n        cleanLoad = new utils.flatstructs.BallPrediction(parsedLoad.root);\r\n        this.onBallPrediction(cleanLoad);\r\n        this.latestBallPrediction = cleanLoad;\r\n        break;\r\n    }\r\n  }\r\n\r\n  setGameState(newGameState: GameState) {\r\n    let builder = new flatbuffers.Builder(1024);\r\n    let finishedGameState = newGameState.convertToFlat(builder);\r\n    builder.finish(finishedGameState);\r\n\r\n    let buf = builder.asUint8Array();\r\n\r\n    if (this.ws == null) return;\r\n    this.ws.write(utils.encodeFlat(7, buf));\r\n  }\r\n  setMatchSettings(newMatchSettings: utils.flatstructs.MatchSettings) {\r\n    this.logger.log(\r\n      \"MatchSettings\",\r\n      \"This feature is not supported yet. Support is comming when json support is comming to RLBot.\"\r\n    );\r\n  }\r\n  sendQuickChat(QuickChatSelection: number, teamOnly: boolean = false) {\r\n    let quickChat = rlbot.flat.QuickChat;\r\n\r\n    let builder = new flatbuffers.Builder(1024);\r\n\r\n    quickChat.startQuickChat(builder);\r\n    quickChat.addQuickChatSelection(builder, QuickChatSelection);\r\n    quickChat.addPlayerIndex(builder, this.botIndex);\r\n    quickChat.addTeamOnly(builder, teamOnly);\r\n    let quickchatOffset = quickChat.endQuickChat(builder);\r\n\r\n    builder.finish(quickchatOffset);\r\n\r\n    let buf = builder.asUint8Array();\r\n\r\n    if (this.ws == null) return;\r\n    this.ws.write(utils.encodeFlat(9, buf));\r\n  }\r\n\r\n  kill() {\r\n    this.ws = null;\r\n  }\r\n\r\n  private async start() {\r\n    if (this.standalone) this.logger.log(\"Socket\", \"Connected\".green);\r\n    let builder = new flatbuffers.Builder(1024);\r\n\r\n    rlbot.flat.ReadyMessage.startReadyMessage(builder);\r\n    rlbot.flat.ReadyMessage.addWantsBallPredictions(builder, true);\r\n    rlbot.flat.ReadyMessage.addWantsGameMessages(builder, true);\r\n    rlbot.flat.ReadyMessage.addWantsQuickChat(builder, true);\r\n\r\n    let readyMessage = rlbot.flat.ReadyMessage.endReadyMessage(builder);\r\n    builder.finish(readyMessage);\r\n\r\n    let readyMsgBuf = builder.asUint8Array();\r\n    if (this.ws == null) return;\r\n    this.ws.write(utils.encodeFlat(11, readyMsgBuf));\r\n  }\r\n}\r\n\r\nexport { BotClient };\r\n", "// automatically generated by the FlatBuffers compiler, do not modify\r\n\r\nimport { flatbuffers } from \"flatbuffers\"\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum CollisionShape{\r\n  NONE= 0,\r\n  BoxShape= 1,\r\n  SphereShape= 2,\r\n  CylinderShape= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum TileState{\r\n  Unknown= 0,\r\n\r\n  /**\r\n   * The default state of the tiles.\r\n   */\r\n  Filled= 1,\r\n\r\n  /**\r\n   * The state when a tile has been damaged.\r\n   */\r\n  Damaged= 2,\r\n\r\n  /**\r\n   * The state of a tile when it is open and a goal can be scored.\r\n   */\r\n  Open= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum RenderType{\r\n  DrawLine2D= 1,\r\n  DrawLine3D= 2,\r\n  DrawLine2D_3D= 3,\r\n  DrawRect2D= 4,\r\n  DrawRect3D= 5,\r\n  DrawString2D= 6,\r\n  DrawString3D= 7,\r\n  DrawCenteredRect3D= 8\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum QuickChatSelection{\r\n  Information_IGotIt= 0,\r\n  Information_NeedBoost= 1,\r\n  Information_TakeTheShot= 2,\r\n  Information_Defending= 3,\r\n  Information_GoForIt= 4,\r\n  Information_Centering= 5,\r\n  Information_AllYours= 6,\r\n  Information_InPosition= 7,\r\n  Information_Incoming= 8,\r\n  Compliments_NiceShot= 9,\r\n  Compliments_GreatPass= 10,\r\n  Compliments_Thanks= 11,\r\n  Compliments_WhatASave= 12,\r\n  Compliments_NiceOne= 13,\r\n  Compliments_WhatAPlay= 14,\r\n  Compliments_GreatClear= 15,\r\n  Compliments_NiceBlock= 16,\r\n  Reactions_OMG= 17,\r\n  Reactions_Noooo= 18,\r\n  Reactions_Wow= 19,\r\n  Reactions_CloseOne= 20,\r\n  Reactions_NoWay= 21,\r\n  Reactions_HolyCow= 22,\r\n  Reactions_Whew= 23,\r\n  Reactions_Siiiick= 24,\r\n  Reactions_Calculated= 25,\r\n  Reactions_Savage= 26,\r\n  Reactions_Okay= 27,\r\n  Apologies_Cursing= 28,\r\n  Apologies_NoProblem= 29,\r\n  Apologies_Whoops= 30,\r\n  Apologies_Sorry= 31,\r\n  Apologies_MyBad= 32,\r\n  Apologies_Oops= 33,\r\n  Apologies_MyFault= 34,\r\n  PostGame_Gg= 35,\r\n  PostGame_WellPlayed= 36,\r\n  PostGame_ThatWasFun= 37,\r\n  PostGame_Rematch= 38,\r\n  PostGame_OneMoreGame= 39,\r\n  PostGame_WhatAGame= 40,\r\n  PostGame_NiceMoves= 41,\r\n  PostGame_EverybodyDance= 42,\r\n\r\n  /**\r\n   * Custom text chats made by bot makers\r\n   */\r\n  MaxPysonixQuickChatPresets= 43,\r\n\r\n  /**\r\n   * Waste of CPU cycles\r\n   */\r\n  Custom_Toxic_WasteCPU= 44,\r\n\r\n  /**\r\n   * Git gud*\r\n   */\r\n  Custom_Toxic_GitGut= 45,\r\n\r\n  /**\r\n   * De-Allocate Yourself\r\n   */\r\n  Custom_Toxic_DeAlloc= 46,\r\n\r\n  /**\r\n   * 404: Your skill not found\r\n   */\r\n  Custom_Toxic_404NoSkill= 47,\r\n\r\n  /**\r\n   * Get a virus\r\n   */\r\n  Custom_Toxic_CatchVirus= 48,\r\n\r\n  /**\r\n   * Passing!\r\n   */\r\n  Custom_Useful_Passing= 49,\r\n\r\n  /**\r\n   * Faking!\r\n   */\r\n  Custom_Useful_Faking= 50,\r\n\r\n  /**\r\n   * Demoing!\r\n   */\r\n  Custom_Useful_Demoing= 51,\r\n\r\n  /**\r\n   * BOOPING\r\n   */\r\n  Custom_Useful_Bumping= 52,\r\n\r\n  /**\r\n   * The chances of that was 47525 to 1*\r\n   */\r\n  Custom_Compliments_TinyChances= 53,\r\n\r\n  /**\r\n   * Who upped your skill level?\r\n   */\r\n  Custom_Compliments_SkillLevel= 54,\r\n\r\n  /**\r\n   * Your programmer should be proud\r\n   */\r\n  Custom_Compliments_proud= 55,\r\n\r\n  /**\r\n   * You're the GC of Bots\r\n   */\r\n  Custom_Compliments_GC= 56,\r\n\r\n  /**\r\n   * Are you <Insert Pro>Bot? *\r\n   */\r\n  Custom_Compliments_Pro= 57,\r\n\r\n  /**\r\n   * Lag\r\n   */\r\n  Custom_Excuses_Lag= 58,\r\n\r\n  /**\r\n   * Ghost inputs\r\n   */\r\n  Custom_Excuses_GhostInputs= 59,\r\n\r\n  /**\r\n   * RIGGED\r\n   */\r\n  Custom_Excuses_Rigged= 60,\r\n\r\n  /**\r\n   * Mafia plays!\r\n   */\r\n  Custom_Toxic_MafiaPlays= 61,\r\n\r\n  /**\r\n   * Yeet!\r\n   */\r\n  Custom_Exclamation_Yeet= 62\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum PlayerClass{\r\n  NONE= 0,\r\n  RLBotPlayer= 1,\r\n  HumanPlayer= 2,\r\n  PsyonixBotPlayer= 3,\r\n  PartyMemberBotPlayer= 4\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum GameMode{\r\n  Soccer= 0,\r\n  Hoops= 1,\r\n  Dropshot= 2,\r\n  Hockey= 3,\r\n  Rumble= 4,\r\n  Heatseeker= 5\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum GameMap{\r\n  DFHStadium= 0,\r\n  Mannfield= 1,\r\n  ChampionsField= 2,\r\n  UrbanCentral= 3,\r\n  BeckwithPark= 4,\r\n  UtopiaColiseum= 5,\r\n  Wasteland= 6,\r\n  NeoTokyo= 7,\r\n  AquaDome= 8,\r\n  StarbaseArc= 9,\r\n  Farmstead= 10,\r\n  SaltyShores= 11,\r\n  DFHStadium_Stormy= 12,\r\n  DFHStadium_Day= 13,\r\n  Mannfield_Stormy= 14,\r\n  Mannfield_Night= 15,\r\n  ChampionsField_Day= 16,\r\n  BeckwithPark_Stormy= 17,\r\n  BeckwithPark_Midnight= 18,\r\n  UrbanCentral_Night= 19,\r\n  UrbanCentral_Dawn= 20,\r\n  UtopiaColiseum_Dusk= 21,\r\n  DFHStadium_Snowy= 22,\r\n  Mannfield_Snowy= 23,\r\n  UtopiaColiseum_Snowy= 24,\r\n  Badlands= 25,\r\n  Badlands_Night= 26,\r\n  TokyoUnderpass= 27,\r\n  Arctagon= 28,\r\n  Pillars= 29,\r\n  Cosmic= 30,\r\n  DoubleGoal= 31,\r\n  Octagon= 32,\r\n  Underpass= 33,\r\n  UtopiaRetro= 34,\r\n  Hoops_DunkHouse= 35,\r\n  DropShot_Core707= 36,\r\n  ThrowbackStadium= 37,\r\n  ForbiddenTemple= 38,\r\n  RivalsArena= 39,\r\n  Farmstead_Night= 40,\r\n  SaltyShores_Night= 41\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum MatchLength{\r\n  Five_Minutes= 0,\r\n  Ten_Minutes= 1,\r\n  Twenty_Minutes= 2,\r\n  Unlimited= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum MaxScore{\r\n  Unlimited= 0,\r\n  One_Goal= 1,\r\n  Three_Goals= 2,\r\n  Five_Goals= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum OvertimeOption{\r\n  Unlimited= 0,\r\n  Five_Max_First_Score= 1,\r\n  Five_Max_Random_Team= 2\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum SeriesLengthOption{\r\n  Unlimited= 0,\r\n  Three_Games= 1,\r\n  Five_Games= 2,\r\n  Seven_Games= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum GameSpeedOption{\r\n  Default= 0,\r\n  Slo_Mo= 1,\r\n  Time_Warp= 2\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum BallMaxSpeedOption{\r\n  Default= 0,\r\n  Slow= 1,\r\n  Fast= 2,\r\n  Super_Fast= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum BallTypeOption{\r\n  Default= 0,\r\n  Cube= 1,\r\n  Puck= 2,\r\n  Basketball= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum BallWeightOption{\r\n  Default= 0,\r\n  Light= 1,\r\n  Heavy= 2,\r\n  Super_Light= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum BallSizeOption{\r\n  Default= 0,\r\n  Small= 1,\r\n  Large= 2,\r\n  Gigantic= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum BallBouncinessOption{\r\n  Default= 0,\r\n  Low= 1,\r\n  High= 2,\r\n  Super_High= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum BoostOption{\r\n  Normal_Boost= 0,\r\n  Unlimited_Boost= 1,\r\n  Slow_Recharge= 2,\r\n  Rapid_Recharge= 3,\r\n  No_Boost= 4\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum RumbleOption{\r\n  No_Rumble= 0,\r\n  Default= 1,\r\n  Slow= 2,\r\n  Civilized= 3,\r\n  Destruction_Derby= 4,\r\n  Spring_Loaded= 5,\r\n  Spikes_Only= 6,\r\n  Spike_Rush= 7\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum BoostStrengthOption{\r\n  One= 0,\r\n  OneAndAHalf= 1,\r\n  Two= 2,\r\n  Ten= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum GravityOption{\r\n  Default= 0,\r\n  Low= 1,\r\n  High= 2,\r\n  Super_High= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum DemolishOption{\r\n  Default= 0,\r\n  Disabled= 1,\r\n  Friendly_Fire= 2,\r\n  On_Contact= 3,\r\n  On_Contact_FF= 4\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum RespawnTimeOption{\r\n  Three_Seconds= 0,\r\n  Two_Seconds= 1,\r\n  One_Seconds= 2,\r\n  Disable_Goal_Reset= 3\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum ExistingMatchBehavior{\r\n  /**\r\n   * Restart the match if any match settings differ. This is the default because old RLBot always worked this way.\r\n   */\r\n  Restart_If_Different= 0,\r\n\r\n  /**\r\n   * Always restart the match, even if config is identical\r\n   */\r\n  Restart= 1,\r\n\r\n  /**\r\n   * Never restart an existing match, just try to remove or spawn cars to match the configuration.\r\n   * If we are not in the middle of a match, a match will be started. Handy for LAN matches.\r\n   */\r\n  Continue_And_Spawn= 2\r\n}};\r\n\r\n/**\r\n * @enum {number}\r\n */\r\nexport namespace rlbot.flat{\r\nexport enum GameMessage{\r\n  NONE= 0,\r\n  PlayerStatEvent= 1,\r\n  PlayerSpectate= 2,\r\n  PlayerInputChange= 3\r\n}};\r\n\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class ControllerState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns ControllerState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):ControllerState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ControllerState= obj\r\n * @returns ControllerState\r\n */\r\nstatic getRootAsControllerState(bb:flatbuffers.ByteBuffer, obj?:ControllerState):ControllerState {\r\n  return (obj || new ControllerState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ControllerState= obj\r\n * @returns ControllerState\r\n */\r\nstatic getSizePrefixedRootAsControllerState(bb:flatbuffers.ByteBuffer, obj?:ControllerState):ControllerState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new ControllerState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * -1 for full reverse, 1 for full forward\r\n *\r\n * @returns number\r\n */\r\nthrottle():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * -1 for full left, 1 for full right\r\n *\r\n * @returns number\r\n */\r\nsteer():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * -1 for nose down, 1 for nose up\r\n *\r\n * @returns number\r\n */\r\npitch():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * -1 for full left, 1 for full right\r\n *\r\n * @returns number\r\n */\r\nyaw():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * -1 for roll left, 1 for roll right\r\n *\r\n * @returns number\r\n */\r\nroll():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * true if you want to press the jump button\r\n *\r\n * @returns boolean\r\n */\r\njump():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * true if you want to press the boost button\r\n *\r\n * @returns boolean\r\n */\r\nboost():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * true if you want to press the handbrake button\r\n *\r\n * @returns boolean\r\n */\r\nhandbrake():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * true if you want to press the 'use item' button, used in rumble etc.\r\n *\r\n * @returns boolean\r\n */\r\nuseItem():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startControllerState(builder:flatbuffers.Builder) {\r\n  builder.startObject(9);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number throttle\r\n */\r\nstatic addThrottle(builder:flatbuffers.Builder, throttle:number) {\r\n  builder.addFieldFloat32(0, throttle, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number steer\r\n */\r\nstatic addSteer(builder:flatbuffers.Builder, steer:number) {\r\n  builder.addFieldFloat32(1, steer, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number pitch\r\n */\r\nstatic addPitch(builder:flatbuffers.Builder, pitch:number) {\r\n  builder.addFieldFloat32(2, pitch, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number yaw\r\n */\r\nstatic addYaw(builder:flatbuffers.Builder, yaw:number) {\r\n  builder.addFieldFloat32(3, yaw, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number roll\r\n */\r\nstatic addRoll(builder:flatbuffers.Builder, roll:number) {\r\n  builder.addFieldFloat32(4, roll, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean jump\r\n */\r\nstatic addJump(builder:flatbuffers.Builder, jump:boolean) {\r\n  builder.addFieldInt8(5, +jump, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean boost\r\n */\r\nstatic addBoost(builder:flatbuffers.Builder, boost:boolean) {\r\n  builder.addFieldInt8(6, +boost, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean handbrake\r\n */\r\nstatic addHandbrake(builder:flatbuffers.Builder, handbrake:boolean) {\r\n  builder.addFieldInt8(7, +handbrake, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean useItem\r\n */\r\nstatic addUseItem(builder:flatbuffers.Builder, useItem:boolean) {\r\n  builder.addFieldInt8(8, +useItem, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endControllerState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createControllerState(builder:flatbuffers.Builder, throttle:number, steer:number, pitch:number, yaw:number, roll:number, jump:boolean, boost:boolean, handbrake:boolean, useItem:boolean):flatbuffers.Offset {\r\n  ControllerState.startControllerState(builder);\r\n  ControllerState.addThrottle(builder, throttle);\r\n  ControllerState.addSteer(builder, steer);\r\n  ControllerState.addPitch(builder, pitch);\r\n  ControllerState.addYaw(builder, yaw);\r\n  ControllerState.addRoll(builder, roll);\r\n  ControllerState.addJump(builder, jump);\r\n  ControllerState.addBoost(builder, boost);\r\n  ControllerState.addHandbrake(builder, handbrake);\r\n  ControllerState.addUseItem(builder, useItem);\r\n  return ControllerState.endControllerState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PlayerInput {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PlayerInput\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PlayerInput {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerInput= obj\r\n * @returns PlayerInput\r\n */\r\nstatic getRootAsPlayerInput(bb:flatbuffers.ByteBuffer, obj?:PlayerInput):PlayerInput {\r\n  return (obj || new PlayerInput()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerInput= obj\r\n * @returns PlayerInput\r\n */\r\nstatic getSizePrefixedRootAsPlayerInput(bb:flatbuffers.ByteBuffer, obj?:PlayerInput):PlayerInput {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PlayerInput()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nplayerIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.ControllerState= obj\r\n * @returns rlbot.flat.ControllerState|null\r\n */\r\ncontrollerState(obj?:rlbot.flat.ControllerState):rlbot.flat.ControllerState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.ControllerState()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPlayerInput(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number playerIndex\r\n */\r\nstatic addPlayerIndex(builder:flatbuffers.Builder, playerIndex:number) {\r\n  builder.addFieldInt32(0, playerIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset controllerStateOffset\r\n */\r\nstatic addControllerState(builder:flatbuffers.Builder, controllerStateOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, controllerStateOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPlayerInput(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPlayerInput(builder:flatbuffers.Builder, playerIndex:number, controllerStateOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  PlayerInput.startPlayerInput(builder);\r\n  PlayerInput.addPlayerIndex(builder, playerIndex);\r\n  PlayerInput.addControllerState(builder, controllerStateOffset);\r\n  return PlayerInput.endPlayerInput(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Vector3 {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Vector3\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Vector3 {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nx():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ny():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nz():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number x\r\n * @param number y\r\n * @param number z\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createVector3(builder:flatbuffers.Builder, x: number, y: number, z: number):flatbuffers.Offset {\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(z);\r\n  builder.writeFloat32(y);\r\n  builder.writeFloat32(x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * Expresses the rotation state of an object in Euler angles, with values in radians.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Rotator {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Rotator\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Rotator {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npitch():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nyaw():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nroll():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number pitch\r\n * @param number yaw\r\n * @param number roll\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createRotator(builder:flatbuffers.Builder, pitch: number, yaw: number, roll: number):flatbuffers.Offset {\r\n  builder.prep(4, 12);\r\n  builder.writeFloat32(roll);\r\n  builder.writeFloat32(yaw);\r\n  builder.writeFloat32(pitch);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * Expresses the rotation state of an object.\r\n * Learn about quaternions here: https://en.wikipedia.org/wiki/Quaternions_and_spatial_rotation\r\n * You can tinker with them here to build an intuition: https://quaternions.online/\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Quaternion {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Quaternion\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Quaternion {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nx():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ny():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 4);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nz():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 8);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nw():number {\r\n  return this.bb!.readFloat32(this.bb_pos + 12);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number x\r\n * @param number y\r\n * @param number z\r\n * @param number w\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createQuaternion(builder:flatbuffers.Builder, x: number, y: number, z: number, w: number):flatbuffers.Offset {\r\n  builder.prep(4, 16);\r\n  builder.writeFloat32(w);\r\n  builder.writeFloat32(z);\r\n  builder.writeFloat32(y);\r\n  builder.writeFloat32(x);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class BoxShape {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BoxShape\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BoxShape {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BoxShape= obj\r\n * @returns BoxShape\r\n */\r\nstatic getRootAsBoxShape(bb:flatbuffers.ByteBuffer, obj?:BoxShape):BoxShape {\r\n  return (obj || new BoxShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BoxShape= obj\r\n * @returns BoxShape\r\n */\r\nstatic getSizePrefixedRootAsBoxShape(bb:flatbuffers.ByteBuffer, obj?:BoxShape):BoxShape {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BoxShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nlength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nwidth():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nheight():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBoxShape(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number length\r\n */\r\nstatic addLength(builder:flatbuffers.Builder, length:number) {\r\n  builder.addFieldFloat32(0, length, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number width\r\n */\r\nstatic addWidth(builder:flatbuffers.Builder, width:number) {\r\n  builder.addFieldFloat32(1, width, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number height\r\n */\r\nstatic addHeight(builder:flatbuffers.Builder, height:number) {\r\n  builder.addFieldFloat32(2, height, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBoxShape(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createBoxShape(builder:flatbuffers.Builder, length:number, width:number, height:number):flatbuffers.Offset {\r\n  BoxShape.startBoxShape(builder);\r\n  BoxShape.addLength(builder, length);\r\n  BoxShape.addWidth(builder, width);\r\n  BoxShape.addHeight(builder, height);\r\n  return BoxShape.endBoxShape(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class SphereShape {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns SphereShape\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):SphereShape {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param SphereShape= obj\r\n * @returns SphereShape\r\n */\r\nstatic getRootAsSphereShape(bb:flatbuffers.ByteBuffer, obj?:SphereShape):SphereShape {\r\n  return (obj || new SphereShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param SphereShape= obj\r\n * @returns SphereShape\r\n */\r\nstatic getSizePrefixedRootAsSphereShape(bb:flatbuffers.ByteBuffer, obj?:SphereShape):SphereShape {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new SphereShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndiameter():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startSphereShape(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number diameter\r\n */\r\nstatic addDiameter(builder:flatbuffers.Builder, diameter:number) {\r\n  builder.addFieldFloat32(0, diameter, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endSphereShape(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createSphereShape(builder:flatbuffers.Builder, diameter:number):flatbuffers.Offset {\r\n  SphereShape.startSphereShape(builder);\r\n  SphereShape.addDiameter(builder, diameter);\r\n  return SphereShape.endSphereShape(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class CylinderShape {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns CylinderShape\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):CylinderShape {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param CylinderShape= obj\r\n * @returns CylinderShape\r\n */\r\nstatic getRootAsCylinderShape(bb:flatbuffers.ByteBuffer, obj?:CylinderShape):CylinderShape {\r\n  return (obj || new CylinderShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param CylinderShape= obj\r\n * @returns CylinderShape\r\n */\r\nstatic getSizePrefixedRootAsCylinderShape(bb:flatbuffers.ByteBuffer, obj?:CylinderShape):CylinderShape {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new CylinderShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndiameter():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nheight():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startCylinderShape(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number diameter\r\n */\r\nstatic addDiameter(builder:flatbuffers.Builder, diameter:number) {\r\n  builder.addFieldFloat32(0, diameter, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number height\r\n */\r\nstatic addHeight(builder:flatbuffers.Builder, height:number) {\r\n  builder.addFieldFloat32(1, height, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endCylinderShape(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createCylinderShape(builder:flatbuffers.Builder, diameter:number, height:number):flatbuffers.Offset {\r\n  CylinderShape.startCylinderShape(builder);\r\n  CylinderShape.addDiameter(builder, diameter);\r\n  CylinderShape.addHeight(builder, height);\r\n  return CylinderShape.endCylinderShape(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Touch {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Touch\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Touch {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Touch= obj\r\n * @returns Touch\r\n */\r\nstatic getRootAsTouch(bb:flatbuffers.ByteBuffer, obj?:Touch):Touch {\r\n  return (obj || new Touch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Touch= obj\r\n * @returns Touch\r\n */\r\nstatic getSizePrefixedRootAsTouch(bb:flatbuffers.ByteBuffer, obj?:Touch):Touch {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Touch()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * The name of the player involved with the touch.\r\n *\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nplayerName():string|null\r\nplayerName(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nplayerName(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * Seconds that had elapsed in the game when the touch occurred.\r\n *\r\n * @returns number\r\n */\r\ngameSeconds():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * The point of contact for the touch.\r\n *\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nlocation(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * The direction of the touch.\r\n *\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nnormal(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * The Team which the touch belongs to, 0 for blue 1 for orange.\r\n *\r\n * @returns number\r\n */\r\nteam():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * The index of the player involved with the touch.\r\n *\r\n * @returns number\r\n */\r\nplayerIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTouch(builder:flatbuffers.Builder) {\r\n  builder.startObject(6);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset playerNameOffset\r\n */\r\nstatic addPlayerName(builder:flatbuffers.Builder, playerNameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, playerNameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number gameSeconds\r\n */\r\nstatic addGameSeconds(builder:flatbuffers.Builder, gameSeconds:number) {\r\n  builder.addFieldFloat32(1, gameSeconds, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset locationOffset\r\n */\r\nstatic addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, locationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset normalOffset\r\n */\r\nstatic addNormal(builder:flatbuffers.Builder, normalOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(3, normalOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number team\r\n */\r\nstatic addTeam(builder:flatbuffers.Builder, team:number) {\r\n  builder.addFieldInt32(4, team, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number playerIndex\r\n */\r\nstatic addPlayerIndex(builder:flatbuffers.Builder, playerIndex:number) {\r\n  builder.addFieldInt32(5, playerIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTouch(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createTouch(builder:flatbuffers.Builder, playerNameOffset:flatbuffers.Offset, gameSeconds:number, locationOffset:flatbuffers.Offset, normalOffset:flatbuffers.Offset, team:number, playerIndex:number):flatbuffers.Offset {\r\n  Touch.startTouch(builder);\r\n  Touch.addPlayerName(builder, playerNameOffset);\r\n  Touch.addGameSeconds(builder, gameSeconds);\r\n  Touch.addLocation(builder, locationOffset);\r\n  Touch.addNormal(builder, normalOffset);\r\n  Touch.addTeam(builder, team);\r\n  Touch.addPlayerIndex(builder, playerIndex);\r\n  return Touch.endTouch(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class ScoreInfo {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns ScoreInfo\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):ScoreInfo {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ScoreInfo= obj\r\n * @returns ScoreInfo\r\n */\r\nstatic getRootAsScoreInfo(bb:flatbuffers.ByteBuffer, obj?:ScoreInfo):ScoreInfo {\r\n  return (obj || new ScoreInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ScoreInfo= obj\r\n * @returns ScoreInfo\r\n */\r\nstatic getSizePrefixedRootAsScoreInfo(bb:flatbuffers.ByteBuffer, obj?:ScoreInfo):ScoreInfo {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new ScoreInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nscore():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngoals():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nownGoals():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nassists():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsaves():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nshots():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndemolitions():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startScoreInfo(builder:flatbuffers.Builder) {\r\n  builder.startObject(7);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number score\r\n */\r\nstatic addScore(builder:flatbuffers.Builder, score:number) {\r\n  builder.addFieldInt32(0, score, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number goals\r\n */\r\nstatic addGoals(builder:flatbuffers.Builder, goals:number) {\r\n  builder.addFieldInt32(1, goals, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number ownGoals\r\n */\r\nstatic addOwnGoals(builder:flatbuffers.Builder, ownGoals:number) {\r\n  builder.addFieldInt32(2, ownGoals, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number assists\r\n */\r\nstatic addAssists(builder:flatbuffers.Builder, assists:number) {\r\n  builder.addFieldInt32(3, assists, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number saves\r\n */\r\nstatic addSaves(builder:flatbuffers.Builder, saves:number) {\r\n  builder.addFieldInt32(4, saves, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number shots\r\n */\r\nstatic addShots(builder:flatbuffers.Builder, shots:number) {\r\n  builder.addFieldInt32(5, shots, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number demolitions\r\n */\r\nstatic addDemolitions(builder:flatbuffers.Builder, demolitions:number) {\r\n  builder.addFieldInt32(6, demolitions, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endScoreInfo(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createScoreInfo(builder:flatbuffers.Builder, score:number, goals:number, ownGoals:number, assists:number, saves:number, shots:number, demolitions:number):flatbuffers.Offset {\r\n  ScoreInfo.startScoreInfo(builder);\r\n  ScoreInfo.addScore(builder, score);\r\n  ScoreInfo.addGoals(builder, goals);\r\n  ScoreInfo.addOwnGoals(builder, ownGoals);\r\n  ScoreInfo.addAssists(builder, assists);\r\n  ScoreInfo.addSaves(builder, saves);\r\n  ScoreInfo.addShots(builder, shots);\r\n  ScoreInfo.addDemolitions(builder, demolitions);\r\n  return ScoreInfo.endScoreInfo(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Physics {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Physics\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Physics {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Physics= obj\r\n * @returns Physics\r\n */\r\nstatic getRootAsPhysics(bb:flatbuffers.ByteBuffer, obj?:Physics):Physics {\r\n  return (obj || new Physics()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Physics= obj\r\n * @returns Physics\r\n */\r\nstatic getSizePrefixedRootAsPhysics(bb:flatbuffers.ByteBuffer, obj?:Physics):Physics {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Physics()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nlocation(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Rotator= obj\r\n * @returns rlbot.flat.Rotator|null\r\n */\r\nrotation(obj?:rlbot.flat.Rotator):rlbot.flat.Rotator|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Rotator()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nvelocity(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nangularVelocity(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPhysics(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset locationOffset\r\n */\r\nstatic addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, locationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset rotationOffset\r\n */\r\nstatic addRotation(builder:flatbuffers.Builder, rotationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, rotationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset velocityOffset\r\n */\r\nstatic addVelocity(builder:flatbuffers.Builder, velocityOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, velocityOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset angularVelocityOffset\r\n */\r\nstatic addAngularVelocity(builder:flatbuffers.Builder, angularVelocityOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(3, angularVelocityOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPhysics(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPhysics(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset, rotationOffset:flatbuffers.Offset, velocityOffset:flatbuffers.Offset, angularVelocityOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Physics.startPhysics(builder);\r\n  Physics.addLocation(builder, locationOffset);\r\n  Physics.addRotation(builder, rotationOffset);\r\n  Physics.addVelocity(builder, velocityOffset);\r\n  Physics.addAngularVelocity(builder, angularVelocityOffset);\r\n  return Physics.endPhysics(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PlayerInfo {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PlayerInfo\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PlayerInfo {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerInfo= obj\r\n * @returns PlayerInfo\r\n */\r\nstatic getRootAsPlayerInfo(bb:flatbuffers.ByteBuffer, obj?:PlayerInfo):PlayerInfo {\r\n  return (obj || new PlayerInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerInfo= obj\r\n * @returns PlayerInfo\r\n */\r\nstatic getSizePrefixedRootAsPlayerInfo(bb:flatbuffers.ByteBuffer, obj?:PlayerInfo):PlayerInfo {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PlayerInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Physics= obj\r\n * @returns rlbot.flat.Physics|null\r\n */\r\nphysics(obj?:rlbot.flat.Physics):rlbot.flat.Physics|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Physics()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.ScoreInfo= obj\r\n * @returns rlbot.flat.ScoreInfo|null\r\n */\r\nscoreInfo(obj?:rlbot.flat.ScoreInfo):rlbot.flat.ScoreInfo|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.ScoreInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisDemolished():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * True if your wheels are on the ground, the wall, or the ceiling. False if you're midair or turtling.\r\n *\r\n * @returns boolean\r\n */\r\nhasWheelContact():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisSupersonic():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisBot():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * True if the player has jumped. Falling off the ceiling / driving off the goal post does not count.\r\n *\r\n * @returns boolean\r\n */\r\njumped():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n *  True if player has double jumped. False does not mean you have a jump remaining, because the\r\n *  aerial timer can run out, and that doesn't affect this flag.\r\n *\r\n * @returns boolean\r\n */\r\ndoubleJumped():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nname():string|null\r\nname(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nname(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nteam():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nboost():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.BoxShape= obj\r\n * @returns rlbot.flat.BoxShape|null\r\n */\r\nhitbox(obj?:rlbot.flat.BoxShape):rlbot.flat.BoxShape|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? (obj || new rlbot.flat.BoxShape()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nhitboxOffset(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * In the case where the requested player index is not available, spawnId will help\r\n * the framework figure out what index was actually assigned to this player instead.\r\n *\r\n * @returns number\r\n */\r\nspawnId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPlayerInfo(builder:flatbuffers.Builder) {\r\n  builder.startObject(14);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset physicsOffset\r\n */\r\nstatic addPhysics(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, physicsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset scoreInfoOffset\r\n */\r\nstatic addScoreInfo(builder:flatbuffers.Builder, scoreInfoOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, scoreInfoOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isDemolished\r\n */\r\nstatic addIsDemolished(builder:flatbuffers.Builder, isDemolished:boolean) {\r\n  builder.addFieldInt8(2, +isDemolished, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean hasWheelContact\r\n */\r\nstatic addHasWheelContact(builder:flatbuffers.Builder, hasWheelContact:boolean) {\r\n  builder.addFieldInt8(3, +hasWheelContact, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isSupersonic\r\n */\r\nstatic addIsSupersonic(builder:flatbuffers.Builder, isSupersonic:boolean) {\r\n  builder.addFieldInt8(4, +isSupersonic, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isBot\r\n */\r\nstatic addIsBot(builder:flatbuffers.Builder, isBot:boolean) {\r\n  builder.addFieldInt8(5, +isBot, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean jumped\r\n */\r\nstatic addJumped(builder:flatbuffers.Builder, jumped:boolean) {\r\n  builder.addFieldInt8(6, +jumped, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean doubleJumped\r\n */\r\nstatic addDoubleJumped(builder:flatbuffers.Builder, doubleJumped:boolean) {\r\n  builder.addFieldInt8(7, +doubleJumped, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset nameOffset\r\n */\r\nstatic addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(8, nameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number team\r\n */\r\nstatic addTeam(builder:flatbuffers.Builder, team:number) {\r\n  builder.addFieldInt32(9, team, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number boost\r\n */\r\nstatic addBoost(builder:flatbuffers.Builder, boost:number) {\r\n  builder.addFieldInt32(10, boost, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset hitboxOffset\r\n */\r\nstatic addHitbox(builder:flatbuffers.Builder, hitboxOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(11, hitboxOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset hitboxOffsetOffset\r\n */\r\nstatic addHitboxOffset(builder:flatbuffers.Builder, hitboxOffsetOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(12, hitboxOffsetOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number spawnId\r\n */\r\nstatic addSpawnId(builder:flatbuffers.Builder, spawnId:number) {\r\n  builder.addFieldInt32(13, spawnId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPlayerInfo(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPlayerInfo(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset, scoreInfoOffset:flatbuffers.Offset, isDemolished:boolean, hasWheelContact:boolean, isSupersonic:boolean, isBot:boolean, jumped:boolean, doubleJumped:boolean, nameOffset:flatbuffers.Offset, team:number, boost:number, hitboxOffset:flatbuffers.Offset, hitboxOffsetOffset:flatbuffers.Offset, spawnId:number):flatbuffers.Offset {\r\n  PlayerInfo.startPlayerInfo(builder);\r\n  PlayerInfo.addPhysics(builder, physicsOffset);\r\n  PlayerInfo.addScoreInfo(builder, scoreInfoOffset);\r\n  PlayerInfo.addIsDemolished(builder, isDemolished);\r\n  PlayerInfo.addHasWheelContact(builder, hasWheelContact);\r\n  PlayerInfo.addIsSupersonic(builder, isSupersonic);\r\n  PlayerInfo.addIsBot(builder, isBot);\r\n  PlayerInfo.addJumped(builder, jumped);\r\n  PlayerInfo.addDoubleJumped(builder, doubleJumped);\r\n  PlayerInfo.addName(builder, nameOffset);\r\n  PlayerInfo.addTeam(builder, team);\r\n  PlayerInfo.addBoost(builder, boost);\r\n  PlayerInfo.addHitbox(builder, hitboxOffset);\r\n  PlayerInfo.addHitboxOffset(builder, hitboxOffsetOffset);\r\n  PlayerInfo.addSpawnId(builder, spawnId);\r\n  return PlayerInfo.endPlayerInfo(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class DropShotBallInfo {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns DropShotBallInfo\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):DropShotBallInfo {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DropShotBallInfo= obj\r\n * @returns DropShotBallInfo\r\n */\r\nstatic getRootAsDropShotBallInfo(bb:flatbuffers.ByteBuffer, obj?:DropShotBallInfo):DropShotBallInfo {\r\n  return (obj || new DropShotBallInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DropShotBallInfo= obj\r\n * @returns DropShotBallInfo\r\n */\r\nstatic getSizePrefixedRootAsDropShotBallInfo(bb:flatbuffers.ByteBuffer, obj?:DropShotBallInfo):DropShotBallInfo {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new DropShotBallInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nabsorbedForce():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndamageIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nforceAccumRecent():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDropShotBallInfo(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number absorbedForce\r\n */\r\nstatic addAbsorbedForce(builder:flatbuffers.Builder, absorbedForce:number) {\r\n  builder.addFieldFloat32(0, absorbedForce, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number damageIndex\r\n */\r\nstatic addDamageIndex(builder:flatbuffers.Builder, damageIndex:number) {\r\n  builder.addFieldInt32(1, damageIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number forceAccumRecent\r\n */\r\nstatic addForceAccumRecent(builder:flatbuffers.Builder, forceAccumRecent:number) {\r\n  builder.addFieldFloat32(2, forceAccumRecent, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDropShotBallInfo(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createDropShotBallInfo(builder:flatbuffers.Builder, absorbedForce:number, damageIndex:number, forceAccumRecent:number):flatbuffers.Offset {\r\n  DropShotBallInfo.startDropShotBallInfo(builder);\r\n  DropShotBallInfo.addAbsorbedForce(builder, absorbedForce);\r\n  DropShotBallInfo.addDamageIndex(builder, damageIndex);\r\n  DropShotBallInfo.addForceAccumRecent(builder, forceAccumRecent);\r\n  return DropShotBallInfo.endDropShotBallInfo(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class BallInfo {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BallInfo\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BallInfo {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BallInfo= obj\r\n * @returns BallInfo\r\n */\r\nstatic getRootAsBallInfo(bb:flatbuffers.ByteBuffer, obj?:BallInfo):BallInfo {\r\n  return (obj || new BallInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BallInfo= obj\r\n * @returns BallInfo\r\n */\r\nstatic getSizePrefixedRootAsBallInfo(bb:flatbuffers.ByteBuffer, obj?:BallInfo):BallInfo {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BallInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Physics= obj\r\n * @returns rlbot.flat.Physics|null\r\n */\r\nphysics(obj?:rlbot.flat.Physics):rlbot.flat.Physics|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Physics()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Touch= obj\r\n * @returns rlbot.flat.Touch|null\r\n */\r\nlatestTouch(obj?:rlbot.flat.Touch):rlbot.flat.Touch|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Touch()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.DropShotBallInfo= obj\r\n * @returns rlbot.flat.DropShotBallInfo|null\r\n */\r\ndropShotInfo(obj?:rlbot.flat.DropShotBallInfo):rlbot.flat.DropShotBallInfo|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.DropShotBallInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.CollisionShape\r\n */\r\nshapeType():rlbot.flat.CollisionShape {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : rlbot.flat.CollisionShape.NONE;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Table obj\r\n * @returns ?flatbuffers.Table\r\n */\r\nshape<T extends flatbuffers.Table>(obj:T):T|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBallInfo(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset physicsOffset\r\n */\r\nstatic addPhysics(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, physicsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset latestTouchOffset\r\n */\r\nstatic addLatestTouch(builder:flatbuffers.Builder, latestTouchOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, latestTouchOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset dropShotInfoOffset\r\n */\r\nstatic addDropShotInfo(builder:flatbuffers.Builder, dropShotInfoOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, dropShotInfoOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.CollisionShape shapeType\r\n */\r\nstatic addShapeType(builder:flatbuffers.Builder, shapeType:rlbot.flat.CollisionShape) {\r\n  builder.addFieldInt8(3, shapeType, rlbot.flat.CollisionShape.NONE);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset shapeOffset\r\n */\r\nstatic addShape(builder:flatbuffers.Builder, shapeOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, shapeOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBallInfo(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createBallInfo(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset, latestTouchOffset:flatbuffers.Offset, dropShotInfoOffset:flatbuffers.Offset, shapeType:rlbot.flat.CollisionShape, shapeOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  BallInfo.startBallInfo(builder);\r\n  BallInfo.addPhysics(builder, physicsOffset);\r\n  BallInfo.addLatestTouch(builder, latestTouchOffset);\r\n  BallInfo.addDropShotInfo(builder, dropShotInfoOffset);\r\n  BallInfo.addShapeType(builder, shapeType);\r\n  BallInfo.addShape(builder, shapeOffset);\r\n  return BallInfo.endBallInfo(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class BoostPadState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BoostPadState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BoostPadState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BoostPadState= obj\r\n * @returns BoostPadState\r\n */\r\nstatic getRootAsBoostPadState(bb:flatbuffers.ByteBuffer, obj?:BoostPadState):BoostPadState {\r\n  return (obj || new BoostPadState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BoostPadState= obj\r\n * @returns BoostPadState\r\n */\r\nstatic getSizePrefixedRootAsBoostPadState(bb:flatbuffers.ByteBuffer, obj?:BoostPadState):BoostPadState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BoostPadState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * True if the boost can be picked up\r\n *\r\n * @returns boolean\r\n */\r\nisActive():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * The number of seconds since the boost has been picked up, or 0.0 if the boost is active.\r\n *\r\n * @returns number\r\n */\r\ntimer():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBoostPadState(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isActive\r\n */\r\nstatic addIsActive(builder:flatbuffers.Builder, isActive:boolean) {\r\n  builder.addFieldInt8(0, +isActive, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number timer\r\n */\r\nstatic addTimer(builder:flatbuffers.Builder, timer:number) {\r\n  builder.addFieldFloat32(1, timer, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBoostPadState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createBoostPadState(builder:flatbuffers.Builder, isActive:boolean, timer:number):flatbuffers.Offset {\r\n  BoostPadState.startBoostPadState(builder);\r\n  BoostPadState.addIsActive(builder, isActive);\r\n  BoostPadState.addTimer(builder, timer);\r\n  return BoostPadState.endBoostPadState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class DropshotTile {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns DropshotTile\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):DropshotTile {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DropshotTile= obj\r\n * @returns DropshotTile\r\n */\r\nstatic getRootAsDropshotTile(bb:flatbuffers.ByteBuffer, obj?:DropshotTile):DropshotTile {\r\n  return (obj || new DropshotTile()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DropshotTile= obj\r\n * @returns DropshotTile\r\n */\r\nstatic getSizePrefixedRootAsDropshotTile(bb:flatbuffers.ByteBuffer, obj?:DropshotTile):DropshotTile {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new DropshotTile()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * The amount of damage the tile has sustained.\r\n *\r\n * @returns rlbot.flat.TileState\r\n */\r\ntileState():rlbot.flat.TileState {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.TileState.Unknown;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDropshotTile(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.TileState tileState\r\n */\r\nstatic addTileState(builder:flatbuffers.Builder, tileState:rlbot.flat.TileState) {\r\n  builder.addFieldInt8(0, tileState, rlbot.flat.TileState.Unknown);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDropshotTile(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createDropshotTile(builder:flatbuffers.Builder, tileState:rlbot.flat.TileState):flatbuffers.Offset {\r\n  DropshotTile.startDropshotTile(builder);\r\n  DropshotTile.addTileState(builder, tileState);\r\n  return DropshotTile.endDropshotTile(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class GameInfo {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GameInfo\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GameInfo {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GameInfo= obj\r\n * @returns GameInfo\r\n */\r\nstatic getRootAsGameInfo(bb:flatbuffers.ByteBuffer, obj?:GameInfo):GameInfo {\r\n  return (obj || new GameInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GameInfo= obj\r\n * @returns GameInfo\r\n */\r\nstatic getSizePrefixedRootAsGameInfo(bb:flatbuffers.ByteBuffer, obj?:GameInfo):GameInfo {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new GameInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nsecondsElapsed():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngameTimeRemaining():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisOvertime():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisUnlimitedTime():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * True when cars are allowed to move, and during the pause menu. False during replays.\r\n *\r\n * @returns boolean\r\n */\r\nisRoundActive():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * True when the clock is paused due to kickoff, but false during kickoff countdown. In other words, it is true\r\n * while cars can move during kickoff. Note that if both players sit still, game clock start and this will become false.\r\n *\r\n * @returns boolean\r\n */\r\nisKickoffPause():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * Turns true after final replay, the moment the 'winner' screen appears. Remains true during next match\r\n * countdown. Turns false again the moment the 'choose team' screen appears.\r\n *\r\n * @returns boolean\r\n */\r\nisMatchEnded():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nworldGravityZ():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * Game speed multiplier, 1.0 is regular game speed.\r\n *\r\n * @returns number\r\n */\r\ngameSpeed():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * Tracks the number of physics frames the game has computed.\r\n * May increase by more than one across consecutive packets.\r\n * Data type will roll over after 207 days at 120Hz.\r\n *\r\n * @returns number\r\n */\r\nframeNum():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startGameInfo(builder:flatbuffers.Builder) {\r\n  builder.startObject(10);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number secondsElapsed\r\n */\r\nstatic addSecondsElapsed(builder:flatbuffers.Builder, secondsElapsed:number) {\r\n  builder.addFieldFloat32(0, secondsElapsed, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number gameTimeRemaining\r\n */\r\nstatic addGameTimeRemaining(builder:flatbuffers.Builder, gameTimeRemaining:number) {\r\n  builder.addFieldFloat32(1, gameTimeRemaining, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isOvertime\r\n */\r\nstatic addIsOvertime(builder:flatbuffers.Builder, isOvertime:boolean) {\r\n  builder.addFieldInt8(2, +isOvertime, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isUnlimitedTime\r\n */\r\nstatic addIsUnlimitedTime(builder:flatbuffers.Builder, isUnlimitedTime:boolean) {\r\n  builder.addFieldInt8(3, +isUnlimitedTime, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isRoundActive\r\n */\r\nstatic addIsRoundActive(builder:flatbuffers.Builder, isRoundActive:boolean) {\r\n  builder.addFieldInt8(4, +isRoundActive, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isKickoffPause\r\n */\r\nstatic addIsKickoffPause(builder:flatbuffers.Builder, isKickoffPause:boolean) {\r\n  builder.addFieldInt8(5, +isKickoffPause, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isMatchEnded\r\n */\r\nstatic addIsMatchEnded(builder:flatbuffers.Builder, isMatchEnded:boolean) {\r\n  builder.addFieldInt8(6, +isMatchEnded, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number worldGravityZ\r\n */\r\nstatic addWorldGravityZ(builder:flatbuffers.Builder, worldGravityZ:number) {\r\n  builder.addFieldFloat32(7, worldGravityZ, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number gameSpeed\r\n */\r\nstatic addGameSpeed(builder:flatbuffers.Builder, gameSpeed:number) {\r\n  builder.addFieldFloat32(8, gameSpeed, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number frameNum\r\n */\r\nstatic addFrameNum(builder:flatbuffers.Builder, frameNum:number) {\r\n  builder.addFieldInt32(9, frameNum, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endGameInfo(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createGameInfo(builder:flatbuffers.Builder, secondsElapsed:number, gameTimeRemaining:number, isOvertime:boolean, isUnlimitedTime:boolean, isRoundActive:boolean, isKickoffPause:boolean, isMatchEnded:boolean, worldGravityZ:number, gameSpeed:number, frameNum:number):flatbuffers.Offset {\r\n  GameInfo.startGameInfo(builder);\r\n  GameInfo.addSecondsElapsed(builder, secondsElapsed);\r\n  GameInfo.addGameTimeRemaining(builder, gameTimeRemaining);\r\n  GameInfo.addIsOvertime(builder, isOvertime);\r\n  GameInfo.addIsUnlimitedTime(builder, isUnlimitedTime);\r\n  GameInfo.addIsRoundActive(builder, isRoundActive);\r\n  GameInfo.addIsKickoffPause(builder, isKickoffPause);\r\n  GameInfo.addIsMatchEnded(builder, isMatchEnded);\r\n  GameInfo.addWorldGravityZ(builder, worldGravityZ);\r\n  GameInfo.addGameSpeed(builder, gameSpeed);\r\n  GameInfo.addFrameNum(builder, frameNum);\r\n  return GameInfo.endGameInfo(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class TeamInfo {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TeamInfo\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TeamInfo {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TeamInfo= obj\r\n * @returns TeamInfo\r\n */\r\nstatic getRootAsTeamInfo(bb:flatbuffers.ByteBuffer, obj?:TeamInfo):TeamInfo {\r\n  return (obj || new TeamInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TeamInfo= obj\r\n * @returns TeamInfo\r\n */\r\nstatic getSizePrefixedRootAsTeamInfo(bb:flatbuffers.ByteBuffer, obj?:TeamInfo):TeamInfo {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TeamInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nteamIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * number of goals scored.\r\n *\r\n * @returns number\r\n */\r\nscore():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTeamInfo(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number teamIndex\r\n */\r\nstatic addTeamIndex(builder:flatbuffers.Builder, teamIndex:number) {\r\n  builder.addFieldInt32(0, teamIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number score\r\n */\r\nstatic addScore(builder:flatbuffers.Builder, score:number) {\r\n  builder.addFieldInt32(1, score, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTeamInfo(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createTeamInfo(builder:flatbuffers.Builder, teamIndex:number, score:number):flatbuffers.Offset {\r\n  TeamInfo.startTeamInfo(builder);\r\n  TeamInfo.addTeamIndex(builder, teamIndex);\r\n  TeamInfo.addScore(builder, score);\r\n  return TeamInfo.endTeamInfo(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class GameTickPacket {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GameTickPacket\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GameTickPacket {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GameTickPacket= obj\r\n * @returns GameTickPacket\r\n */\r\nstatic getRootAsGameTickPacket(bb:flatbuffers.ByteBuffer, obj?:GameTickPacket):GameTickPacket {\r\n  return (obj || new GameTickPacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GameTickPacket= obj\r\n * @returns GameTickPacket\r\n */\r\nstatic getSizePrefixedRootAsGameTickPacket(bb:flatbuffers.ByteBuffer, obj?:GameTickPacket):GameTickPacket {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new GameTickPacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.PlayerInfo= obj\r\n * @returns rlbot.flat.PlayerInfo\r\n */\r\nplayers(index: number, obj?:rlbot.flat.PlayerInfo):rlbot.flat.PlayerInfo|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.PlayerInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nplayersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.BoostPadState= obj\r\n * @returns rlbot.flat.BoostPadState\r\n */\r\nboostPadStates(index: number, obj?:rlbot.flat.BoostPadState):rlbot.flat.BoostPadState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.BoostPadState()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nboostPadStatesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.BallInfo= obj\r\n * @returns rlbot.flat.BallInfo|null\r\n */\r\nball(obj?:rlbot.flat.BallInfo):rlbot.flat.BallInfo|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.BallInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.GameInfo= obj\r\n * @returns rlbot.flat.GameInfo|null\r\n */\r\ngameInfo(obj?:rlbot.flat.GameInfo):rlbot.flat.GameInfo|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.GameInfo()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.DropshotTile= obj\r\n * @returns rlbot.flat.DropshotTile\r\n */\r\ntileInformation(index: number, obj?:rlbot.flat.DropshotTile):rlbot.flat.DropshotTile|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new rlbot.flat.DropshotTile()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntileInformationLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.TeamInfo= obj\r\n * @returns rlbot.flat.TeamInfo\r\n */\r\nteams(index: number, obj?:rlbot.flat.TeamInfo):rlbot.flat.TeamInfo|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? (obj || new rlbot.flat.TeamInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nteamsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startGameTickPacket(builder:flatbuffers.Builder) {\r\n  builder.startObject(6);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset playersOffset\r\n */\r\nstatic addPlayers(builder:flatbuffers.Builder, playersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, playersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPlayersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPlayersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset boostPadStatesOffset\r\n */\r\nstatic addBoostPadStates(builder:flatbuffers.Builder, boostPadStatesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, boostPadStatesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBoostPadStatesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBoostPadStatesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset ballOffset\r\n */\r\nstatic addBall(builder:flatbuffers.Builder, ballOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, ballOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset gameInfoOffset\r\n */\r\nstatic addGameInfo(builder:flatbuffers.Builder, gameInfoOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, gameInfoOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset tileInformationOffset\r\n */\r\nstatic addTileInformation(builder:flatbuffers.Builder, tileInformationOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, tileInformationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTileInformationVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTileInformationVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset teamsOffset\r\n */\r\nstatic addTeams(builder:flatbuffers.Builder, teamsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(5, teamsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createTeamsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startTeamsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endGameTickPacket(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createGameTickPacket(builder:flatbuffers.Builder, playersOffset:flatbuffers.Offset, boostPadStatesOffset:flatbuffers.Offset, ballOffset:flatbuffers.Offset, gameInfoOffset:flatbuffers.Offset, tileInformationOffset:flatbuffers.Offset, teamsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  GameTickPacket.startGameTickPacket(builder);\r\n  GameTickPacket.addPlayers(builder, playersOffset);\r\n  GameTickPacket.addBoostPadStates(builder, boostPadStatesOffset);\r\n  GameTickPacket.addBall(builder, ballOffset);\r\n  GameTickPacket.addGameInfo(builder, gameInfoOffset);\r\n  GameTickPacket.addTileInformation(builder, tileInformationOffset);\r\n  GameTickPacket.addTeams(builder, teamsOffset);\r\n  return GameTickPacket.endGameTickPacket(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * The state of a rigid body in Rocket League's physics engine.\r\n * This gets updated in time with the physics tick, not the rendering framerate.\r\n * The frame field will be incremented every time the physics engine ticks.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class RigidBodyState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns RigidBodyState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):RigidBodyState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RigidBodyState= obj\r\n * @returns RigidBodyState\r\n */\r\nstatic getRootAsRigidBodyState(bb:flatbuffers.ByteBuffer, obj?:RigidBodyState):RigidBodyState {\r\n  return (obj || new RigidBodyState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RigidBodyState= obj\r\n * @returns RigidBodyState\r\n */\r\nstatic getSizePrefixedRootAsRigidBodyState(bb:flatbuffers.ByteBuffer, obj?:RigidBodyState):RigidBodyState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new RigidBodyState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nframe():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nlocation(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Quaternion= obj\r\n * @returns rlbot.flat.Quaternion|null\r\n */\r\nrotation(obj?:rlbot.flat.Quaternion):rlbot.flat.Quaternion|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Quaternion()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nvelocity(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nangularVelocity(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startRigidBodyState(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number frame\r\n */\r\nstatic addFrame(builder:flatbuffers.Builder, frame:number) {\r\n  builder.addFieldInt32(0, frame, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset locationOffset\r\n */\r\nstatic addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, locationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset rotationOffset\r\n */\r\nstatic addRotation(builder:flatbuffers.Builder, rotationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, rotationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset velocityOffset\r\n */\r\nstatic addVelocity(builder:flatbuffers.Builder, velocityOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(3, velocityOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset angularVelocityOffset\r\n */\r\nstatic addAngularVelocity(builder:flatbuffers.Builder, angularVelocityOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(4, angularVelocityOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endRigidBodyState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createRigidBodyState(builder:flatbuffers.Builder, frame:number, locationOffset:flatbuffers.Offset, rotationOffset:flatbuffers.Offset, velocityOffset:flatbuffers.Offset, angularVelocityOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  RigidBodyState.startRigidBodyState(builder);\r\n  RigidBodyState.addFrame(builder, frame);\r\n  RigidBodyState.addLocation(builder, locationOffset);\r\n  RigidBodyState.addRotation(builder, rotationOffset);\r\n  RigidBodyState.addVelocity(builder, velocityOffset);\r\n  RigidBodyState.addAngularVelocity(builder, angularVelocityOffset);\r\n  return RigidBodyState.endRigidBodyState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * Rigid body state for a player / car in the game. Includes the latest\r\n * controller input, which is otherwise difficult to correlate with consequences.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PlayerRigidBodyState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PlayerRigidBodyState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PlayerRigidBodyState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerRigidBodyState= obj\r\n * @returns PlayerRigidBodyState\r\n */\r\nstatic getRootAsPlayerRigidBodyState(bb:flatbuffers.ByteBuffer, obj?:PlayerRigidBodyState):PlayerRigidBodyState {\r\n  return (obj || new PlayerRigidBodyState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerRigidBodyState= obj\r\n * @returns PlayerRigidBodyState\r\n */\r\nstatic getSizePrefixedRootAsPlayerRigidBodyState(bb:flatbuffers.ByteBuffer, obj?:PlayerRigidBodyState):PlayerRigidBodyState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PlayerRigidBodyState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.RigidBodyState= obj\r\n * @returns rlbot.flat.RigidBodyState|null\r\n */\r\nstate(obj?:rlbot.flat.RigidBodyState):rlbot.flat.RigidBodyState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.RigidBodyState()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.ControllerState= obj\r\n * @returns rlbot.flat.ControllerState|null\r\n */\r\ninput(obj?:rlbot.flat.ControllerState):rlbot.flat.ControllerState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.ControllerState()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPlayerRigidBodyState(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset stateOffset\r\n */\r\nstatic addState(builder:flatbuffers.Builder, stateOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, stateOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset inputOffset\r\n */\r\nstatic addInput(builder:flatbuffers.Builder, inputOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, inputOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPlayerRigidBodyState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPlayerRigidBodyState(builder:flatbuffers.Builder, stateOffset:flatbuffers.Offset, inputOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  PlayerRigidBodyState.startPlayerRigidBodyState(builder);\r\n  PlayerRigidBodyState.addState(builder, stateOffset);\r\n  PlayerRigidBodyState.addInput(builder, inputOffset);\r\n  return PlayerRigidBodyState.endPlayerRigidBodyState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * Rigid body state for the ball.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class BallRigidBodyState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BallRigidBodyState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BallRigidBodyState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BallRigidBodyState= obj\r\n * @returns BallRigidBodyState\r\n */\r\nstatic getRootAsBallRigidBodyState(bb:flatbuffers.ByteBuffer, obj?:BallRigidBodyState):BallRigidBodyState {\r\n  return (obj || new BallRigidBodyState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BallRigidBodyState= obj\r\n * @returns BallRigidBodyState\r\n */\r\nstatic getSizePrefixedRootAsBallRigidBodyState(bb:flatbuffers.ByteBuffer, obj?:BallRigidBodyState):BallRigidBodyState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BallRigidBodyState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.RigidBodyState= obj\r\n * @returns rlbot.flat.RigidBodyState|null\r\n */\r\nstate(obj?:rlbot.flat.RigidBodyState):rlbot.flat.RigidBodyState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.RigidBodyState()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBallRigidBodyState(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset stateOffset\r\n */\r\nstatic addState(builder:flatbuffers.Builder, stateOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, stateOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBallRigidBodyState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createBallRigidBodyState(builder:flatbuffers.Builder, stateOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  BallRigidBodyState.startBallRigidBodyState(builder);\r\n  BallRigidBodyState.addState(builder, stateOffset);\r\n  return BallRigidBodyState.endBallRigidBodyState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * Contains all rigid body state information.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class RigidBodyTick {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns RigidBodyTick\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):RigidBodyTick {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RigidBodyTick= obj\r\n * @returns RigidBodyTick\r\n */\r\nstatic getRootAsRigidBodyTick(bb:flatbuffers.ByteBuffer, obj?:RigidBodyTick):RigidBodyTick {\r\n  return (obj || new RigidBodyTick()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RigidBodyTick= obj\r\n * @returns RigidBodyTick\r\n */\r\nstatic getSizePrefixedRootAsRigidBodyTick(bb:flatbuffers.ByteBuffer, obj?:RigidBodyTick):RigidBodyTick {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new RigidBodyTick()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.BallRigidBodyState= obj\r\n * @returns rlbot.flat.BallRigidBodyState|null\r\n */\r\nball(obj?:rlbot.flat.BallRigidBodyState):rlbot.flat.BallRigidBodyState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.BallRigidBodyState()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.PlayerRigidBodyState= obj\r\n * @returns rlbot.flat.PlayerRigidBodyState\r\n */\r\nplayers(index: number, obj?:rlbot.flat.PlayerRigidBodyState):rlbot.flat.PlayerRigidBodyState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.PlayerRigidBodyState()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nplayersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startRigidBodyTick(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset ballOffset\r\n */\r\nstatic addBall(builder:flatbuffers.Builder, ballOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, ballOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset playersOffset\r\n */\r\nstatic addPlayers(builder:flatbuffers.Builder, playersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, playersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPlayersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPlayersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endRigidBodyTick(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createRigidBodyTick(builder:flatbuffers.Builder, ballOffset:flatbuffers.Offset, playersOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  RigidBodyTick.startRigidBodyTick(builder);\r\n  RigidBodyTick.addBall(builder, ballOffset);\r\n  RigidBodyTick.addPlayers(builder, playersOffset);\r\n  return RigidBodyTick.endRigidBodyTick(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class GoalInfo {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GoalInfo\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GoalInfo {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GoalInfo= obj\r\n * @returns GoalInfo\r\n */\r\nstatic getRootAsGoalInfo(bb:flatbuffers.ByteBuffer, obj?:GoalInfo):GoalInfo {\r\n  return (obj || new GoalInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GoalInfo= obj\r\n * @returns GoalInfo\r\n */\r\nstatic getSizePrefixedRootAsGoalInfo(bb:flatbuffers.ByteBuffer, obj?:GoalInfo):GoalInfo {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new GoalInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nteamNum():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nlocation(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\ndirection(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nwidth():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nheight():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startGoalInfo(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number teamNum\r\n */\r\nstatic addTeamNum(builder:flatbuffers.Builder, teamNum:number) {\r\n  builder.addFieldInt32(0, teamNum, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset locationOffset\r\n */\r\nstatic addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, locationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset directionOffset\r\n */\r\nstatic addDirection(builder:flatbuffers.Builder, directionOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, directionOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number width\r\n */\r\nstatic addWidth(builder:flatbuffers.Builder, width:number) {\r\n  builder.addFieldFloat32(3, width, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number height\r\n */\r\nstatic addHeight(builder:flatbuffers.Builder, height:number) {\r\n  builder.addFieldFloat32(4, height, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endGoalInfo(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createGoalInfo(builder:flatbuffers.Builder, teamNum:number, locationOffset:flatbuffers.Offset, directionOffset:flatbuffers.Offset, width:number, height:number):flatbuffers.Offset {\r\n  GoalInfo.startGoalInfo(builder);\r\n  GoalInfo.addTeamNum(builder, teamNum);\r\n  GoalInfo.addLocation(builder, locationOffset);\r\n  GoalInfo.addDirection(builder, directionOffset);\r\n  GoalInfo.addWidth(builder, width);\r\n  GoalInfo.addHeight(builder, height);\r\n  return GoalInfo.endGoalInfo(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class BoostPad {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BoostPad\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BoostPad {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BoostPad= obj\r\n * @returns BoostPad\r\n */\r\nstatic getRootAsBoostPad(bb:flatbuffers.ByteBuffer, obj?:BoostPad):BoostPad {\r\n  return (obj || new BoostPad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BoostPad= obj\r\n * @returns BoostPad\r\n */\r\nstatic getSizePrefixedRootAsBoostPad(bb:flatbuffers.ByteBuffer, obj?:BoostPad):BoostPad {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BoostPad()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nlocation(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisFullBoost():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBoostPad(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset locationOffset\r\n */\r\nstatic addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, locationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isFullBoost\r\n */\r\nstatic addIsFullBoost(builder:flatbuffers.Builder, isFullBoost:boolean) {\r\n  builder.addFieldInt8(1, +isFullBoost, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBoostPad(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createBoostPad(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset, isFullBoost:boolean):flatbuffers.Offset {\r\n  BoostPad.startBoostPad(builder);\r\n  BoostPad.addLocation(builder, locationOffset);\r\n  BoostPad.addIsFullBoost(builder, isFullBoost);\r\n  return BoostPad.endBoostPad(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class FieldInfo {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns FieldInfo\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):FieldInfo {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param FieldInfo= obj\r\n * @returns FieldInfo\r\n */\r\nstatic getRootAsFieldInfo(bb:flatbuffers.ByteBuffer, obj?:FieldInfo):FieldInfo {\r\n  return (obj || new FieldInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param FieldInfo= obj\r\n * @returns FieldInfo\r\n */\r\nstatic getSizePrefixedRootAsFieldInfo(bb:flatbuffers.ByteBuffer, obj?:FieldInfo):FieldInfo {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new FieldInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.BoostPad= obj\r\n * @returns rlbot.flat.BoostPad\r\n */\r\nboostPads(index: number, obj?:rlbot.flat.BoostPad):rlbot.flat.BoostPad|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.BoostPad()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nboostPadsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.GoalInfo= obj\r\n * @returns rlbot.flat.GoalInfo\r\n */\r\ngoals(index: number, obj?:rlbot.flat.GoalInfo):rlbot.flat.GoalInfo|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.GoalInfo()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngoalsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startFieldInfo(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset boostPadsOffset\r\n */\r\nstatic addBoostPads(builder:flatbuffers.Builder, boostPadsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, boostPadsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBoostPadsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBoostPadsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset goalsOffset\r\n */\r\nstatic addGoals(builder:flatbuffers.Builder, goalsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, goalsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createGoalsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startGoalsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endFieldInfo(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createFieldInfo(builder:flatbuffers.Builder, boostPadsOffset:flatbuffers.Offset, goalsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  FieldInfo.startFieldInfo(builder);\r\n  FieldInfo.addBoostPads(builder, boostPadsOffset);\r\n  FieldInfo.addGoals(builder, goalsOffset);\r\n  return FieldInfo.endFieldInfo(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Float {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Float\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Float {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nval():number {\r\n  return this.bb!.readFloat32(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number val\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createFloat(builder:flatbuffers.Builder, val: number):flatbuffers.Offset {\r\n  builder.prep(4, 4);\r\n  builder.writeFloat32(val);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Bool {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Bool\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Bool {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nval():boolean {\r\n  return !!this.bb!.readInt8(this.bb_pos);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean val\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBool(builder:flatbuffers.Builder, val: boolean):flatbuffers.Offset {\r\n  builder.prep(1, 1);\r\n  builder.writeInt8(+val);\r\n  return builder.offset();\r\n};\r\n\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Vector3Partial {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Vector3Partial\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Vector3Partial {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Vector3Partial= obj\r\n * @returns Vector3Partial\r\n */\r\nstatic getRootAsVector3Partial(bb:flatbuffers.ByteBuffer, obj?:Vector3Partial):Vector3Partial {\r\n  return (obj || new Vector3Partial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Vector3Partial= obj\r\n * @returns Vector3Partial\r\n */\r\nstatic getSizePrefixedRootAsVector3Partial(bb:flatbuffers.ByteBuffer, obj?:Vector3Partial):Vector3Partial {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Vector3Partial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\nx(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\ny(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\nz(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startVector3Partial(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset xOffset\r\n */\r\nstatic addX(builder:flatbuffers.Builder, xOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, xOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset yOffset\r\n */\r\nstatic addY(builder:flatbuffers.Builder, yOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, yOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset zOffset\r\n */\r\nstatic addZ(builder:flatbuffers.Builder, zOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, zOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endVector3Partial(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createVector3Partial(builder:flatbuffers.Builder, xOffset:flatbuffers.Offset, yOffset:flatbuffers.Offset, zOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  Vector3Partial.startVector3Partial(builder);\r\n  Vector3Partial.addX(builder, xOffset);\r\n  Vector3Partial.addY(builder, yOffset);\r\n  Vector3Partial.addZ(builder, zOffset);\r\n  return Vector3Partial.endVector3Partial(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class RotatorPartial {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns RotatorPartial\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):RotatorPartial {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RotatorPartial= obj\r\n * @returns RotatorPartial\r\n */\r\nstatic getRootAsRotatorPartial(bb:flatbuffers.ByteBuffer, obj?:RotatorPartial):RotatorPartial {\r\n  return (obj || new RotatorPartial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RotatorPartial= obj\r\n * @returns RotatorPartial\r\n */\r\nstatic getSizePrefixedRootAsRotatorPartial(bb:flatbuffers.ByteBuffer, obj?:RotatorPartial):RotatorPartial {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new RotatorPartial()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\npitch(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\nyaw(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\nroll(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startRotatorPartial(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset pitchOffset\r\n */\r\nstatic addPitch(builder:flatbuffers.Builder, pitchOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, pitchOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset yawOffset\r\n */\r\nstatic addYaw(builder:flatbuffers.Builder, yawOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, yawOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset rollOffset\r\n */\r\nstatic addRoll(builder:flatbuffers.Builder, rollOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, rollOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endRotatorPartial(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createRotatorPartial(builder:flatbuffers.Builder, pitchOffset:flatbuffers.Offset, yawOffset:flatbuffers.Offset, rollOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  RotatorPartial.startRotatorPartial(builder);\r\n  RotatorPartial.addPitch(builder, pitchOffset);\r\n  RotatorPartial.addYaw(builder, yawOffset);\r\n  RotatorPartial.addRoll(builder, rollOffset);\r\n  return RotatorPartial.endRotatorPartial(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class DesiredPhysics {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns DesiredPhysics\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):DesiredPhysics {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredPhysics= obj\r\n * @returns DesiredPhysics\r\n */\r\nstatic getRootAsDesiredPhysics(bb:flatbuffers.ByteBuffer, obj?:DesiredPhysics):DesiredPhysics {\r\n  return (obj || new DesiredPhysics()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredPhysics= obj\r\n * @returns DesiredPhysics\r\n */\r\nstatic getSizePrefixedRootAsDesiredPhysics(bb:flatbuffers.ByteBuffer, obj?:DesiredPhysics):DesiredPhysics {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new DesiredPhysics()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3Partial= obj\r\n * @returns rlbot.flat.Vector3Partial|null\r\n */\r\nlocation(obj?:rlbot.flat.Vector3Partial):rlbot.flat.Vector3Partial|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Vector3Partial()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.RotatorPartial= obj\r\n * @returns rlbot.flat.RotatorPartial|null\r\n */\r\nrotation(obj?:rlbot.flat.RotatorPartial):rlbot.flat.RotatorPartial|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.RotatorPartial()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3Partial= obj\r\n * @returns rlbot.flat.Vector3Partial|null\r\n */\r\nvelocity(obj?:rlbot.flat.Vector3Partial):rlbot.flat.Vector3Partial|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Vector3Partial()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3Partial= obj\r\n * @returns rlbot.flat.Vector3Partial|null\r\n */\r\nangularVelocity(obj?:rlbot.flat.Vector3Partial):rlbot.flat.Vector3Partial|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.Vector3Partial()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDesiredPhysics(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset locationOffset\r\n */\r\nstatic addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, locationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset rotationOffset\r\n */\r\nstatic addRotation(builder:flatbuffers.Builder, rotationOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, rotationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset velocityOffset\r\n */\r\nstatic addVelocity(builder:flatbuffers.Builder, velocityOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, velocityOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset angularVelocityOffset\r\n */\r\nstatic addAngularVelocity(builder:flatbuffers.Builder, angularVelocityOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, angularVelocityOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDesiredPhysics(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createDesiredPhysics(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset, rotationOffset:flatbuffers.Offset, velocityOffset:flatbuffers.Offset, angularVelocityOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  DesiredPhysics.startDesiredPhysics(builder);\r\n  DesiredPhysics.addLocation(builder, locationOffset);\r\n  DesiredPhysics.addRotation(builder, rotationOffset);\r\n  DesiredPhysics.addVelocity(builder, velocityOffset);\r\n  DesiredPhysics.addAngularVelocity(builder, angularVelocityOffset);\r\n  return DesiredPhysics.endDesiredPhysics(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class DesiredBallState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns DesiredBallState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):DesiredBallState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredBallState= obj\r\n * @returns DesiredBallState\r\n */\r\nstatic getRootAsDesiredBallState(bb:flatbuffers.ByteBuffer, obj?:DesiredBallState):DesiredBallState {\r\n  return (obj || new DesiredBallState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredBallState= obj\r\n * @returns DesiredBallState\r\n */\r\nstatic getSizePrefixedRootAsDesiredBallState(bb:flatbuffers.ByteBuffer, obj?:DesiredBallState):DesiredBallState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new DesiredBallState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.DesiredPhysics= obj\r\n * @returns rlbot.flat.DesiredPhysics|null\r\n */\r\nphysics(obj?:rlbot.flat.DesiredPhysics):rlbot.flat.DesiredPhysics|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.DesiredPhysics()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDesiredBallState(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset physicsOffset\r\n */\r\nstatic addPhysics(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, physicsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDesiredBallState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createDesiredBallState(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  DesiredBallState.startDesiredBallState(builder);\r\n  DesiredBallState.addPhysics(builder, physicsOffset);\r\n  return DesiredBallState.endDesiredBallState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class DesiredCarState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns DesiredCarState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):DesiredCarState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredCarState= obj\r\n * @returns DesiredCarState\r\n */\r\nstatic getRootAsDesiredCarState(bb:flatbuffers.ByteBuffer, obj?:DesiredCarState):DesiredCarState {\r\n  return (obj || new DesiredCarState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredCarState= obj\r\n * @returns DesiredCarState\r\n */\r\nstatic getSizePrefixedRootAsDesiredCarState(bb:flatbuffers.ByteBuffer, obj?:DesiredCarState):DesiredCarState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new DesiredCarState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.DesiredPhysics= obj\r\n * @returns rlbot.flat.DesiredPhysics|null\r\n */\r\nphysics(obj?:rlbot.flat.DesiredPhysics):rlbot.flat.DesiredPhysics|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.DesiredPhysics()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\nboostAmount(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Bool= obj\r\n * @returns rlbot.flat.Bool|null\r\n */\r\njumped(obj?:rlbot.flat.Bool):rlbot.flat.Bool|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Bool()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Bool= obj\r\n * @returns rlbot.flat.Bool|null\r\n */\r\ndoubleJumped(obj?:rlbot.flat.Bool):rlbot.flat.Bool|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.Bool()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDesiredCarState(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset physicsOffset\r\n */\r\nstatic addPhysics(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, physicsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset boostAmountOffset\r\n */\r\nstatic addBoostAmount(builder:flatbuffers.Builder, boostAmountOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, boostAmountOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset jumpedOffset\r\n */\r\nstatic addJumped(builder:flatbuffers.Builder, jumpedOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, jumpedOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset doubleJumpedOffset\r\n */\r\nstatic addDoubleJumped(builder:flatbuffers.Builder, doubleJumpedOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(3, doubleJumpedOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDesiredCarState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createDesiredCarState(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset, boostAmountOffset:flatbuffers.Offset, jumpedOffset:flatbuffers.Offset, doubleJumpedOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  DesiredCarState.startDesiredCarState(builder);\r\n  DesiredCarState.addPhysics(builder, physicsOffset);\r\n  DesiredCarState.addBoostAmount(builder, boostAmountOffset);\r\n  DesiredCarState.addJumped(builder, jumpedOffset);\r\n  DesiredCarState.addDoubleJumped(builder, doubleJumpedOffset);\r\n  return DesiredCarState.endDesiredCarState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class DesiredBoostState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns DesiredBoostState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):DesiredBoostState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredBoostState= obj\r\n * @returns DesiredBoostState\r\n */\r\nstatic getRootAsDesiredBoostState(bb:flatbuffers.ByteBuffer, obj?:DesiredBoostState):DesiredBoostState {\r\n  return (obj || new DesiredBoostState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredBoostState= obj\r\n * @returns DesiredBoostState\r\n */\r\nstatic getSizePrefixedRootAsDesiredBoostState(bb:flatbuffers.ByteBuffer, obj?:DesiredBoostState):DesiredBoostState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new DesiredBoostState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\nrespawnTime(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDesiredBoostState(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset respawnTimeOffset\r\n */\r\nstatic addRespawnTime(builder:flatbuffers.Builder, respawnTimeOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, respawnTimeOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDesiredBoostState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createDesiredBoostState(builder:flatbuffers.Builder, respawnTimeOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  DesiredBoostState.startDesiredBoostState(builder);\r\n  DesiredBoostState.addRespawnTime(builder, respawnTimeOffset);\r\n  return DesiredBoostState.endDesiredBoostState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class DesiredGameInfoState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns DesiredGameInfoState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):DesiredGameInfoState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredGameInfoState= obj\r\n * @returns DesiredGameInfoState\r\n */\r\nstatic getRootAsDesiredGameInfoState(bb:flatbuffers.ByteBuffer, obj?:DesiredGameInfoState):DesiredGameInfoState {\r\n  return (obj || new DesiredGameInfoState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredGameInfoState= obj\r\n * @returns DesiredGameInfoState\r\n */\r\nstatic getSizePrefixedRootAsDesiredGameInfoState(bb:flatbuffers.ByteBuffer, obj?:DesiredGameInfoState):DesiredGameInfoState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new DesiredGameInfoState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\nworldGravityZ(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Float= obj\r\n * @returns rlbot.flat.Float|null\r\n */\r\ngameSpeed(obj?:rlbot.flat.Float):rlbot.flat.Float|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Float()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Bool= obj\r\n * @returns rlbot.flat.Bool|null\r\n */\r\npaused(obj?:rlbot.flat.Bool):rlbot.flat.Bool|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Bool()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Bool= obj\r\n * @returns rlbot.flat.Bool|null\r\n */\r\nendMatch(obj?:rlbot.flat.Bool):rlbot.flat.Bool|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.Bool()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDesiredGameInfoState(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset worldGravityZOffset\r\n */\r\nstatic addWorldGravityZ(builder:flatbuffers.Builder, worldGravityZOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, worldGravityZOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset gameSpeedOffset\r\n */\r\nstatic addGameSpeed(builder:flatbuffers.Builder, gameSpeedOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, gameSpeedOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset pausedOffset\r\n */\r\nstatic addPaused(builder:flatbuffers.Builder, pausedOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, pausedOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endMatchOffset\r\n */\r\nstatic addEndMatch(builder:flatbuffers.Builder, endMatchOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(3, endMatchOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDesiredGameInfoState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createDesiredGameInfoState(builder:flatbuffers.Builder, worldGravityZOffset:flatbuffers.Offset, gameSpeedOffset:flatbuffers.Offset, pausedOffset:flatbuffers.Offset, endMatchOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  DesiredGameInfoState.startDesiredGameInfoState(builder);\r\n  DesiredGameInfoState.addWorldGravityZ(builder, worldGravityZOffset);\r\n  DesiredGameInfoState.addGameSpeed(builder, gameSpeedOffset);\r\n  DesiredGameInfoState.addPaused(builder, pausedOffset);\r\n  DesiredGameInfoState.addEndMatch(builder, endMatchOffset);\r\n  return DesiredGameInfoState.endDesiredGameInfoState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * A console command which we will try to execute inside Rocket League.\r\n * See https://github.com/RLBot/RLBot/wiki/Console-Commands for a list of known commands.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class ConsoleCommand {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns ConsoleCommand\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):ConsoleCommand {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ConsoleCommand= obj\r\n * @returns ConsoleCommand\r\n */\r\nstatic getRootAsConsoleCommand(bb:flatbuffers.ByteBuffer, obj?:ConsoleCommand):ConsoleCommand {\r\n  return (obj || new ConsoleCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ConsoleCommand= obj\r\n * @returns ConsoleCommand\r\n */\r\nstatic getSizePrefixedRootAsConsoleCommand(bb:flatbuffers.ByteBuffer, obj?:ConsoleCommand):ConsoleCommand {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new ConsoleCommand()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\ncommand():string|null\r\ncommand(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\ncommand(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startConsoleCommand(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset commandOffset\r\n */\r\nstatic addCommand(builder:flatbuffers.Builder, commandOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, commandOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endConsoleCommand(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createConsoleCommand(builder:flatbuffers.Builder, commandOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  ConsoleCommand.startConsoleCommand(builder);\r\n  ConsoleCommand.addCommand(builder, commandOffset);\r\n  return ConsoleCommand.endConsoleCommand(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class DesiredGameState {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns DesiredGameState\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):DesiredGameState {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredGameState= obj\r\n * @returns DesiredGameState\r\n */\r\nstatic getRootAsDesiredGameState(bb:flatbuffers.ByteBuffer, obj?:DesiredGameState):DesiredGameState {\r\n  return (obj || new DesiredGameState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param DesiredGameState= obj\r\n * @returns DesiredGameState\r\n */\r\nstatic getSizePrefixedRootAsDesiredGameState(bb:flatbuffers.ByteBuffer, obj?:DesiredGameState):DesiredGameState {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new DesiredGameState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.DesiredBallState= obj\r\n * @returns rlbot.flat.DesiredBallState|null\r\n */\r\nballState(obj?:rlbot.flat.DesiredBallState):rlbot.flat.DesiredBallState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.DesiredBallState()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.DesiredCarState= obj\r\n * @returns rlbot.flat.DesiredCarState\r\n */\r\ncarStates(index: number, obj?:rlbot.flat.DesiredCarState):rlbot.flat.DesiredCarState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.DesiredCarState()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ncarStatesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.DesiredBoostState= obj\r\n * @returns rlbot.flat.DesiredBoostState\r\n */\r\nboostStates(index: number, obj?:rlbot.flat.DesiredBoostState):rlbot.flat.DesiredBoostState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.DesiredBoostState()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nboostStatesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.DesiredGameInfoState= obj\r\n * @returns rlbot.flat.DesiredGameInfoState|null\r\n */\r\ngameInfoState(obj?:rlbot.flat.DesiredGameInfoState):rlbot.flat.DesiredGameInfoState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.DesiredGameInfoState()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.ConsoleCommand= obj\r\n * @returns rlbot.flat.ConsoleCommand\r\n */\r\nconsoleCommands(index: number, obj?:rlbot.flat.ConsoleCommand):rlbot.flat.ConsoleCommand|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new rlbot.flat.ConsoleCommand()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nconsoleCommandsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startDesiredGameState(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset ballStateOffset\r\n */\r\nstatic addBallState(builder:flatbuffers.Builder, ballStateOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, ballStateOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset carStatesOffset\r\n */\r\nstatic addCarStates(builder:flatbuffers.Builder, carStatesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, carStatesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createCarStatesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startCarStatesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset boostStatesOffset\r\n */\r\nstatic addBoostStates(builder:flatbuffers.Builder, boostStatesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, boostStatesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createBoostStatesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startBoostStatesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset gameInfoStateOffset\r\n */\r\nstatic addGameInfoState(builder:flatbuffers.Builder, gameInfoStateOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(3, gameInfoStateOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset consoleCommandsOffset\r\n */\r\nstatic addConsoleCommands(builder:flatbuffers.Builder, consoleCommandsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, consoleCommandsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createConsoleCommandsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startConsoleCommandsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endDesiredGameState(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createDesiredGameState(builder:flatbuffers.Builder, ballStateOffset:flatbuffers.Offset, carStatesOffset:flatbuffers.Offset, boostStatesOffset:flatbuffers.Offset, gameInfoStateOffset:flatbuffers.Offset, consoleCommandsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  DesiredGameState.startDesiredGameState(builder);\r\n  DesiredGameState.addBallState(builder, ballStateOffset);\r\n  DesiredGameState.addCarStates(builder, carStatesOffset);\r\n  DesiredGameState.addBoostStates(builder, boostStatesOffset);\r\n  DesiredGameState.addGameInfoState(builder, gameInfoStateOffset);\r\n  DesiredGameState.addConsoleCommands(builder, consoleCommandsOffset);\r\n  return DesiredGameState.endDesiredGameState(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class Color {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns Color\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):Color {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Color= obj\r\n * @returns Color\r\n */\r\nstatic getRootAsColor(bb:flatbuffers.ByteBuffer, obj?:Color):Color {\r\n  return (obj || new Color()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param Color= obj\r\n * @returns Color\r\n */\r\nstatic getSizePrefixedRootAsColor(bb:flatbuffers.ByteBuffer, obj?:Color):Color {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new Color()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\na():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nr():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ng():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nb():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readUint8(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startColor(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number a\r\n */\r\nstatic addA(builder:flatbuffers.Builder, a:number) {\r\n  builder.addFieldInt8(0, a, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number r\r\n */\r\nstatic addR(builder:flatbuffers.Builder, r:number) {\r\n  builder.addFieldInt8(1, r, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number g\r\n */\r\nstatic addG(builder:flatbuffers.Builder, g:number) {\r\n  builder.addFieldInt8(2, g, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number b\r\n */\r\nstatic addB(builder:flatbuffers.Builder, b:number) {\r\n  builder.addFieldInt8(3, b, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endColor(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createColor(builder:flatbuffers.Builder, a:number, r:number, g:number, b:number):flatbuffers.Offset {\r\n  Color.startColor(builder);\r\n  Color.addA(builder, a);\r\n  Color.addR(builder, r);\r\n  Color.addG(builder, g);\r\n  Color.addB(builder, b);\r\n  return Color.endColor(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class RenderMessage {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns RenderMessage\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):RenderMessage {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RenderMessage= obj\r\n * @returns RenderMessage\r\n */\r\nstatic getRootAsRenderMessage(bb:flatbuffers.ByteBuffer, obj?:RenderMessage):RenderMessage {\r\n  return (obj || new RenderMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RenderMessage= obj\r\n * @returns RenderMessage\r\n */\r\nstatic getSizePrefixedRootAsRenderMessage(bb:flatbuffers.ByteBuffer, obj?:RenderMessage):RenderMessage {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new RenderMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.RenderType\r\n */\r\nrenderType():rlbot.flat.RenderType {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.RenderType.DrawLine2D;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Color= obj\r\n * @returns rlbot.flat.Color|null\r\n */\r\ncolor(obj?:rlbot.flat.Color):rlbot.flat.Color|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Color()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * For 2d renders this only grabs x and y\r\n *\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nstart(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * For 2d renders this only grabs x and y\r\n *\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nend(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * Scales the x size of the text/rectangle, is used for rectangles assuming an initial value of 1\r\n *\r\n * @returns number\r\n */\r\nscaleX():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 1;\r\n};\r\n\r\n/**\r\n * Scales the y size of the text/rectangle, is used for rectangles assuming an initial value of 1\r\n *\r\n * @returns number\r\n */\r\nscaleY():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 1;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\ntext():string|null\r\ntext(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\ntext(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * Rectangles can be filled or just outlines.\r\n *\r\n * @returns boolean\r\n */\r\nisFilled():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startRenderMessage(builder:flatbuffers.Builder) {\r\n  builder.startObject(8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.RenderType renderType\r\n */\r\nstatic addRenderType(builder:flatbuffers.Builder, renderType:rlbot.flat.RenderType) {\r\n  builder.addFieldInt8(0, renderType, rlbot.flat.RenderType.DrawLine2D);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset colorOffset\r\n */\r\nstatic addColor(builder:flatbuffers.Builder, colorOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, colorOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset startOffset\r\n */\r\nstatic addStart(builder:flatbuffers.Builder, startOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, startOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset endOffset\r\n */\r\nstatic addEnd(builder:flatbuffers.Builder, endOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(3, endOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number scaleX\r\n */\r\nstatic addScaleX(builder:flatbuffers.Builder, scaleX:number) {\r\n  builder.addFieldInt32(4, scaleX, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number scaleY\r\n */\r\nstatic addScaleY(builder:flatbuffers.Builder, scaleY:number) {\r\n  builder.addFieldInt32(5, scaleY, 1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset textOffset\r\n */\r\nstatic addText(builder:flatbuffers.Builder, textOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(6, textOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isFilled\r\n */\r\nstatic addIsFilled(builder:flatbuffers.Builder, isFilled:boolean) {\r\n  builder.addFieldInt8(7, +isFilled, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endRenderMessage(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createRenderMessage(builder:flatbuffers.Builder, renderType:rlbot.flat.RenderType, colorOffset:flatbuffers.Offset, startOffset:flatbuffers.Offset, endOffset:flatbuffers.Offset, scaleX:number, scaleY:number, textOffset:flatbuffers.Offset, isFilled:boolean):flatbuffers.Offset {\r\n  RenderMessage.startRenderMessage(builder);\r\n  RenderMessage.addRenderType(builder, renderType);\r\n  RenderMessage.addColor(builder, colorOffset);\r\n  RenderMessage.addStart(builder, startOffset);\r\n  RenderMessage.addEnd(builder, endOffset);\r\n  RenderMessage.addScaleX(builder, scaleX);\r\n  RenderMessage.addScaleY(builder, scaleY);\r\n  RenderMessage.addText(builder, textOffset);\r\n  RenderMessage.addIsFilled(builder, isFilled);\r\n  return RenderMessage.endRenderMessage(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class RenderGroup {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns RenderGroup\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):RenderGroup {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RenderGroup= obj\r\n * @returns RenderGroup\r\n */\r\nstatic getRootAsRenderGroup(bb:flatbuffers.ByteBuffer, obj?:RenderGroup):RenderGroup {\r\n  return (obj || new RenderGroup()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RenderGroup= obj\r\n * @returns RenderGroup\r\n */\r\nstatic getSizePrefixedRootAsRenderGroup(bb:flatbuffers.ByteBuffer, obj?:RenderGroup):RenderGroup {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new RenderGroup()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.RenderMessage= obj\r\n * @returns rlbot.flat.RenderMessage\r\n */\r\nrenderMessages(index: number, obj?:rlbot.flat.RenderMessage):rlbot.flat.RenderMessage|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.RenderMessage()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nrenderMessagesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * The id of the render group\r\n *\r\n * @returns number\r\n */\r\nid():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startRenderGroup(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset renderMessagesOffset\r\n */\r\nstatic addRenderMessages(builder:flatbuffers.Builder, renderMessagesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, renderMessagesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createRenderMessagesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startRenderMessagesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number id\r\n */\r\nstatic addId(builder:flatbuffers.Builder, id:number) {\r\n  builder.addFieldInt32(1, id, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endRenderGroup(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createRenderGroup(builder:flatbuffers.Builder, renderMessagesOffset:flatbuffers.Offset, id:number):flatbuffers.Offset {\r\n  RenderGroup.startRenderGroup(builder);\r\n  RenderGroup.addRenderMessages(builder, renderMessagesOffset);\r\n  RenderGroup.addId(builder, id);\r\n  return RenderGroup.endRenderGroup(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class QuickChat {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns QuickChat\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):QuickChat {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param QuickChat= obj\r\n * @returns QuickChat\r\n */\r\nstatic getRootAsQuickChat(bb:flatbuffers.ByteBuffer, obj?:QuickChat):QuickChat {\r\n  return (obj || new QuickChat()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param QuickChat= obj\r\n * @returns QuickChat\r\n */\r\nstatic getSizePrefixedRootAsQuickChat(bb:flatbuffers.ByteBuffer, obj?:QuickChat):QuickChat {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new QuickChat()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.QuickChatSelection\r\n */\r\nquickChatSelection():rlbot.flat.QuickChatSelection {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.QuickChatSelection.Information_IGotIt;\r\n};\r\n\r\n/**\r\n * The index of the player that sent the quick chat\r\n *\r\n * @returns number\r\n */\r\nplayerIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * True if the chat is team only false if everyone can see it.\r\n *\r\n * @returns boolean\r\n */\r\nteamOnly():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nmessageIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntimeStamp():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startQuickChat(builder:flatbuffers.Builder) {\r\n  builder.startObject(5);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.QuickChatSelection quickChatSelection\r\n */\r\nstatic addQuickChatSelection(builder:flatbuffers.Builder, quickChatSelection:rlbot.flat.QuickChatSelection) {\r\n  builder.addFieldInt8(0, quickChatSelection, rlbot.flat.QuickChatSelection.Information_IGotIt);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number playerIndex\r\n */\r\nstatic addPlayerIndex(builder:flatbuffers.Builder, playerIndex:number) {\r\n  builder.addFieldInt32(1, playerIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean teamOnly\r\n */\r\nstatic addTeamOnly(builder:flatbuffers.Builder, teamOnly:boolean) {\r\n  builder.addFieldInt8(2, +teamOnly, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number messageIndex\r\n */\r\nstatic addMessageIndex(builder:flatbuffers.Builder, messageIndex:number) {\r\n  builder.addFieldInt32(3, messageIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number timeStamp\r\n */\r\nstatic addTimeStamp(builder:flatbuffers.Builder, timeStamp:number) {\r\n  builder.addFieldFloat32(4, timeStamp, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endQuickChat(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset offset\r\n */\r\nstatic finishQuickChatBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset offset\r\n */\r\nstatic finishSizePrefixedQuickChatBuffer(builder:flatbuffers.Builder, offset:flatbuffers.Offset) {\r\n  builder.finish(offset, undefined, true);\r\n};\r\n\r\nstatic createQuickChat(builder:flatbuffers.Builder, quickChatSelection:rlbot.flat.QuickChatSelection, playerIndex:number, teamOnly:boolean, messageIndex:number, timeStamp:number):flatbuffers.Offset {\r\n  QuickChat.startQuickChat(builder);\r\n  QuickChat.addQuickChatSelection(builder, quickChatSelection);\r\n  QuickChat.addPlayerIndex(builder, playerIndex);\r\n  QuickChat.addTeamOnly(builder, teamOnly);\r\n  QuickChat.addMessageIndex(builder, messageIndex);\r\n  QuickChat.addTimeStamp(builder, timeStamp);\r\n  return QuickChat.endQuickChat(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * A minimal version of player data, useful when bandwidth needs to be conserved.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class TinyPlayer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TinyPlayer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TinyPlayer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TinyPlayer= obj\r\n * @returns TinyPlayer\r\n */\r\nstatic getRootAsTinyPlayer(bb:flatbuffers.ByteBuffer, obj?:TinyPlayer):TinyPlayer {\r\n  return (obj || new TinyPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TinyPlayer= obj\r\n * @returns TinyPlayer\r\n */\r\nstatic getSizePrefixedRootAsTinyPlayer(bb:flatbuffers.ByteBuffer, obj?:TinyPlayer):TinyPlayer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TinyPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nlocation(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Rotator= obj\r\n * @returns rlbot.flat.Rotator|null\r\n */\r\nrotation(obj?:rlbot.flat.Rotator):rlbot.flat.Rotator|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Rotator()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nvelocity(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nhasWheelContact():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nisSupersonic():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nteam():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nboost():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTinyPlayer(builder:flatbuffers.Builder) {\r\n  builder.startObject(7);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset locationOffset\r\n */\r\nstatic addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, locationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset rotationOffset\r\n */\r\nstatic addRotation(builder:flatbuffers.Builder, rotationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, rotationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset velocityOffset\r\n */\r\nstatic addVelocity(builder:flatbuffers.Builder, velocityOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(2, velocityOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean hasWheelContact\r\n */\r\nstatic addHasWheelContact(builder:flatbuffers.Builder, hasWheelContact:boolean) {\r\n  builder.addFieldInt8(3, +hasWheelContact, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean isSupersonic\r\n */\r\nstatic addIsSupersonic(builder:flatbuffers.Builder, isSupersonic:boolean) {\r\n  builder.addFieldInt8(4, +isSupersonic, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number team\r\n */\r\nstatic addTeam(builder:flatbuffers.Builder, team:number) {\r\n  builder.addFieldInt32(5, team, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number boost\r\n */\r\nstatic addBoost(builder:flatbuffers.Builder, boost:number) {\r\n  builder.addFieldInt32(6, boost, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTinyPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createTinyPlayer(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset, rotationOffset:flatbuffers.Offset, velocityOffset:flatbuffers.Offset, hasWheelContact:boolean, isSupersonic:boolean, team:number, boost:number):flatbuffers.Offset {\r\n  TinyPlayer.startTinyPlayer(builder);\r\n  TinyPlayer.addLocation(builder, locationOffset);\r\n  TinyPlayer.addRotation(builder, rotationOffset);\r\n  TinyPlayer.addVelocity(builder, velocityOffset);\r\n  TinyPlayer.addHasWheelContact(builder, hasWheelContact);\r\n  TinyPlayer.addIsSupersonic(builder, isSupersonic);\r\n  TinyPlayer.addTeam(builder, team);\r\n  TinyPlayer.addBoost(builder, boost);\r\n  return TinyPlayer.endTinyPlayer(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * A minimal version of the ball, useful when bandwidth needs to be conserved.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class TinyBall {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TinyBall\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TinyBall {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TinyBall= obj\r\n * @returns TinyBall\r\n */\r\nstatic getRootAsTinyBall(bb:flatbuffers.ByteBuffer, obj?:TinyBall):TinyBall {\r\n  return (obj || new TinyBall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TinyBall= obj\r\n * @returns TinyBall\r\n */\r\nstatic getSizePrefixedRootAsTinyBall(bb:flatbuffers.ByteBuffer, obj?:TinyBall):TinyBall {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TinyBall()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nlocation(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.Vector3= obj\r\n * @returns rlbot.flat.Vector3|null\r\n */\r\nvelocity(obj?:rlbot.flat.Vector3):rlbot.flat.Vector3|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Vector3()).__init(this.bb_pos + offset, this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTinyBall(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset locationOffset\r\n */\r\nstatic addLocation(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(0, locationOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset velocityOffset\r\n */\r\nstatic addVelocity(builder:flatbuffers.Builder, velocityOffset:flatbuffers.Offset) {\r\n  builder.addFieldStruct(1, velocityOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTinyBall(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createTinyBall(builder:flatbuffers.Builder, locationOffset:flatbuffers.Offset, velocityOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  TinyBall.startTinyBall(builder);\r\n  TinyBall.addLocation(builder, locationOffset);\r\n  TinyBall.addVelocity(builder, velocityOffset);\r\n  return TinyBall.endTinyBall(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * A minimal version of the game tick packet, useful when bandwidth needs to be conserved.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class TinyPacket {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns TinyPacket\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):TinyPacket {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TinyPacket= obj\r\n * @returns TinyPacket\r\n */\r\nstatic getRootAsTinyPacket(bb:flatbuffers.ByteBuffer, obj?:TinyPacket):TinyPacket {\r\n  return (obj || new TinyPacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param TinyPacket= obj\r\n * @returns TinyPacket\r\n */\r\nstatic getSizePrefixedRootAsTinyPacket(bb:flatbuffers.ByteBuffer, obj?:TinyPacket):TinyPacket {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new TinyPacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.TinyPlayer= obj\r\n * @returns rlbot.flat.TinyPlayer\r\n */\r\nplayers(index: number, obj?:rlbot.flat.TinyPlayer):rlbot.flat.TinyPlayer|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.TinyPlayer()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nplayersLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.TinyBall= obj\r\n * @returns rlbot.flat.TinyBall|null\r\n */\r\nball(obj?:rlbot.flat.TinyBall):rlbot.flat.TinyBall|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.TinyBall()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startTinyPacket(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset playersOffset\r\n */\r\nstatic addPlayers(builder:flatbuffers.Builder, playersOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, playersOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPlayersVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPlayersVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset ballOffset\r\n */\r\nstatic addBall(builder:flatbuffers.Builder, ballOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, ballOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endTinyPacket(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createTinyPacket(builder:flatbuffers.Builder, playersOffset:flatbuffers.Offset, ballOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  TinyPacket.startTinyPacket(builder);\r\n  TinyPacket.addPlayers(builder, playersOffset);\r\n  TinyPacket.addBall(builder, ballOffset);\r\n  return TinyPacket.endTinyPacket(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PredictionSlice {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PredictionSlice\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PredictionSlice {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PredictionSlice= obj\r\n * @returns PredictionSlice\r\n */\r\nstatic getRootAsPredictionSlice(bb:flatbuffers.ByteBuffer, obj?:PredictionSlice):PredictionSlice {\r\n  return (obj || new PredictionSlice()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PredictionSlice= obj\r\n * @returns PredictionSlice\r\n */\r\nstatic getSizePrefixedRootAsPredictionSlice(bb:flatbuffers.ByteBuffer, obj?:PredictionSlice):PredictionSlice {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PredictionSlice()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * The moment in game time that this prediction corresponds to.\r\n * This corresponds to 'secondsElapsed' in the GameInfo table.\r\n *\r\n * @returns number\r\n */\r\ngameSeconds():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * The predicted location and motion of the object.\r\n *\r\n * @param rlbot.flat.Physics= obj\r\n * @returns rlbot.flat.Physics|null\r\n */\r\nphysics(obj?:rlbot.flat.Physics):rlbot.flat.Physics|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.Physics()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPredictionSlice(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number gameSeconds\r\n */\r\nstatic addGameSeconds(builder:flatbuffers.Builder, gameSeconds:number) {\r\n  builder.addFieldFloat32(0, gameSeconds, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset physicsOffset\r\n */\r\nstatic addPhysics(builder:flatbuffers.Builder, physicsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, physicsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPredictionSlice(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPredictionSlice(builder:flatbuffers.Builder, gameSeconds:number, physicsOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  PredictionSlice.startPredictionSlice(builder);\r\n  PredictionSlice.addGameSeconds(builder, gameSeconds);\r\n  PredictionSlice.addPhysics(builder, physicsOffset);\r\n  return PredictionSlice.endPredictionSlice(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class BallPrediction {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns BallPrediction\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):BallPrediction {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BallPrediction= obj\r\n * @returns BallPrediction\r\n */\r\nstatic getRootAsBallPrediction(bb:flatbuffers.ByteBuffer, obj?:BallPrediction):BallPrediction {\r\n  return (obj || new BallPrediction()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param BallPrediction= obj\r\n * @returns BallPrediction\r\n */\r\nstatic getSizePrefixedRootAsBallPrediction(bb:flatbuffers.ByteBuffer, obj?:BallPrediction):BallPrediction {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new BallPrediction()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * A list of places the ball will be at specific times in the future.\r\n * It is guaranteed to sorted so that time increases with each slice.\r\n * It is NOT guaranteed to have a consistent amount of time between slices.\r\n *\r\n * @param number index\r\n * @param rlbot.flat.PredictionSlice= obj\r\n * @returns rlbot.flat.PredictionSlice\r\n */\r\nslices(index: number, obj?:rlbot.flat.PredictionSlice):rlbot.flat.PredictionSlice|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.PredictionSlice()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nslicesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startBallPrediction(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset slicesOffset\r\n */\r\nstatic addSlices(builder:flatbuffers.Builder, slicesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, slicesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createSlicesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startSlicesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endBallPrediction(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createBallPrediction(builder:flatbuffers.Builder, slicesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  BallPrediction.startBallPrediction(builder);\r\n  BallPrediction.addSlices(builder, slicesOffset);\r\n  return BallPrediction.endBallPrediction(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * A bot controlled by the RLBot framework\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class RLBotPlayer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns RLBotPlayer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):RLBotPlayer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RLBotPlayer= obj\r\n * @returns RLBotPlayer\r\n */\r\nstatic getRootAsRLBotPlayer(bb:flatbuffers.ByteBuffer, obj?:RLBotPlayer):RLBotPlayer {\r\n  return (obj || new RLBotPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param RLBotPlayer= obj\r\n * @returns RLBotPlayer\r\n */\r\nstatic getSizePrefixedRootAsRLBotPlayer(bb:flatbuffers.ByteBuffer, obj?:RLBotPlayer):RLBotPlayer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new RLBotPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startRLBotPlayer(builder:flatbuffers.Builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endRLBotPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createRLBotPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  RLBotPlayer.startRLBotPlayer(builder);\r\n  return RLBotPlayer.endRLBotPlayer(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * A normal human player\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class HumanPlayer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns HumanPlayer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):HumanPlayer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HumanPlayer= obj\r\n * @returns HumanPlayer\r\n */\r\nstatic getRootAsHumanPlayer(bb:flatbuffers.ByteBuffer, obj?:HumanPlayer):HumanPlayer {\r\n  return (obj || new HumanPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param HumanPlayer= obj\r\n * @returns HumanPlayer\r\n */\r\nstatic getSizePrefixedRootAsHumanPlayer(bb:flatbuffers.ByteBuffer, obj?:HumanPlayer):HumanPlayer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new HumanPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startHumanPlayer(builder:flatbuffers.Builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endHumanPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createHumanPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  HumanPlayer.startHumanPlayer(builder);\r\n  return HumanPlayer.endHumanPlayer(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * A psyonix bot, e.g. All Star bot\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PsyonixBotPlayer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PsyonixBotPlayer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PsyonixBotPlayer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PsyonixBotPlayer= obj\r\n * @returns PsyonixBotPlayer\r\n */\r\nstatic getRootAsPsyonixBotPlayer(bb:flatbuffers.ByteBuffer, obj?:PsyonixBotPlayer):PsyonixBotPlayer {\r\n  return (obj || new PsyonixBotPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PsyonixBotPlayer= obj\r\n * @returns PsyonixBotPlayer\r\n */\r\nstatic getSizePrefixedRootAsPsyonixBotPlayer(bb:flatbuffers.ByteBuffer, obj?:PsyonixBotPlayer):PsyonixBotPlayer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PsyonixBotPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nbotSkill():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPsyonixBotPlayer(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number botSkill\r\n */\r\nstatic addBotSkill(builder:flatbuffers.Builder, botSkill:number) {\r\n  builder.addFieldFloat32(0, botSkill, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPsyonixBotPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPsyonixBotPlayer(builder:flatbuffers.Builder, botSkill:number):flatbuffers.Offset {\r\n  PsyonixBotPlayer.startPsyonixBotPlayer(builder);\r\n  PsyonixBotPlayer.addBotSkill(builder, botSkill);\r\n  return PsyonixBotPlayer.endPsyonixBotPlayer(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * A player that Rocket League treats as human, e.g. has a dedicated camera and can do training mode,\r\n * but is actually controlled by a bot.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PartyMemberBotPlayer {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PartyMemberBotPlayer\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PartyMemberBotPlayer {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PartyMemberBotPlayer= obj\r\n * @returns PartyMemberBotPlayer\r\n */\r\nstatic getRootAsPartyMemberBotPlayer(bb:flatbuffers.ByteBuffer, obj?:PartyMemberBotPlayer):PartyMemberBotPlayer {\r\n  return (obj || new PartyMemberBotPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PartyMemberBotPlayer= obj\r\n * @returns PartyMemberBotPlayer\r\n */\r\nstatic getSizePrefixedRootAsPartyMemberBotPlayer(bb:flatbuffers.ByteBuffer, obj?:PartyMemberBotPlayer):PartyMemberBotPlayer {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PartyMemberBotPlayer()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPartyMemberBotPlayer(builder:flatbuffers.Builder) {\r\n  builder.startObject(0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPartyMemberBotPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPartyMemberBotPlayer(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  PartyMemberBotPlayer.startPartyMemberBotPlayer(builder);\r\n  return PartyMemberBotPlayer.endPartyMemberBotPlayer(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * The car type, color, and other aspects of the player's appearance.\r\n * See https://github.com/RLBot/RLBot/wiki/Bot-Customization\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PlayerLoadout {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PlayerLoadout\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PlayerLoadout {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerLoadout= obj\r\n * @returns PlayerLoadout\r\n */\r\nstatic getRootAsPlayerLoadout(bb:flatbuffers.ByteBuffer, obj?:PlayerLoadout):PlayerLoadout {\r\n  return (obj || new PlayerLoadout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerLoadout= obj\r\n * @returns PlayerLoadout\r\n */\r\nstatic getSizePrefixedRootAsPlayerLoadout(bb:flatbuffers.ByteBuffer, obj?:PlayerLoadout):PlayerLoadout {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PlayerLoadout()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nteamColorId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ncustomColorId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ncarId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndecalId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nwheelsId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nboostId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nantennaId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhatId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\npaintFinishId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ncustomFinishId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nengineAudioId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntrailsId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngoalExplosionId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.LoadoutPaint= obj\r\n * @returns rlbot.flat.LoadoutPaint|null\r\n */\r\nloadoutPaint(obj?:rlbot.flat.LoadoutPaint):rlbot.flat.LoadoutPaint|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? (obj || new rlbot.flat.LoadoutPaint()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * Sets the primary color of the car to the swatch that most closely matches the provided\r\n * RGB color value. If set, this overrides teamColorId.\r\n *\r\n * @param rlbot.flat.Color= obj\r\n * @returns rlbot.flat.Color|null\r\n */\r\nprimaryColorLookup(obj?:rlbot.flat.Color):rlbot.flat.Color|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n  return offset ? (obj || new rlbot.flat.Color()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * Sets the secondary color of the car to the swatch that most closely matches the provided\r\n * RGB color value. If set, this overrides customColorId.\r\n *\r\n * @param rlbot.flat.Color= obj\r\n * @returns rlbot.flat.Color|null\r\n */\r\nsecondaryColorLookup(obj?:rlbot.flat.Color):rlbot.flat.Color|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 34);\r\n  return offset ? (obj || new rlbot.flat.Color()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPlayerLoadout(builder:flatbuffers.Builder) {\r\n  builder.startObject(16);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number teamColorId\r\n */\r\nstatic addTeamColorId(builder:flatbuffers.Builder, teamColorId:number) {\r\n  builder.addFieldInt32(0, teamColorId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number customColorId\r\n */\r\nstatic addCustomColorId(builder:flatbuffers.Builder, customColorId:number) {\r\n  builder.addFieldInt32(1, customColorId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number carId\r\n */\r\nstatic addCarId(builder:flatbuffers.Builder, carId:number) {\r\n  builder.addFieldInt32(2, carId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number decalId\r\n */\r\nstatic addDecalId(builder:flatbuffers.Builder, decalId:number) {\r\n  builder.addFieldInt32(3, decalId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number wheelsId\r\n */\r\nstatic addWheelsId(builder:flatbuffers.Builder, wheelsId:number) {\r\n  builder.addFieldInt32(4, wheelsId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number boostId\r\n */\r\nstatic addBoostId(builder:flatbuffers.Builder, boostId:number) {\r\n  builder.addFieldInt32(5, boostId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number antennaId\r\n */\r\nstatic addAntennaId(builder:flatbuffers.Builder, antennaId:number) {\r\n  builder.addFieldInt32(6, antennaId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number hatId\r\n */\r\nstatic addHatId(builder:flatbuffers.Builder, hatId:number) {\r\n  builder.addFieldInt32(7, hatId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number paintFinishId\r\n */\r\nstatic addPaintFinishId(builder:flatbuffers.Builder, paintFinishId:number) {\r\n  builder.addFieldInt32(8, paintFinishId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number customFinishId\r\n */\r\nstatic addCustomFinishId(builder:flatbuffers.Builder, customFinishId:number) {\r\n  builder.addFieldInt32(9, customFinishId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number engineAudioId\r\n */\r\nstatic addEngineAudioId(builder:flatbuffers.Builder, engineAudioId:number) {\r\n  builder.addFieldInt32(10, engineAudioId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number trailsId\r\n */\r\nstatic addTrailsId(builder:flatbuffers.Builder, trailsId:number) {\r\n  builder.addFieldInt32(11, trailsId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number goalExplosionId\r\n */\r\nstatic addGoalExplosionId(builder:flatbuffers.Builder, goalExplosionId:number) {\r\n  builder.addFieldInt32(12, goalExplosionId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset loadoutPaintOffset\r\n */\r\nstatic addLoadoutPaint(builder:flatbuffers.Builder, loadoutPaintOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(13, loadoutPaintOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset primaryColorLookupOffset\r\n */\r\nstatic addPrimaryColorLookup(builder:flatbuffers.Builder, primaryColorLookupOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(14, primaryColorLookupOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset secondaryColorLookupOffset\r\n */\r\nstatic addSecondaryColorLookup(builder:flatbuffers.Builder, secondaryColorLookupOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(15, secondaryColorLookupOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPlayerLoadout(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPlayerLoadout(builder:flatbuffers.Builder, teamColorId:number, customColorId:number, carId:number, decalId:number, wheelsId:number, boostId:number, antennaId:number, hatId:number, paintFinishId:number, customFinishId:number, engineAudioId:number, trailsId:number, goalExplosionId:number, loadoutPaintOffset:flatbuffers.Offset, primaryColorLookupOffset:flatbuffers.Offset, secondaryColorLookupOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  PlayerLoadout.startPlayerLoadout(builder);\r\n  PlayerLoadout.addTeamColorId(builder, teamColorId);\r\n  PlayerLoadout.addCustomColorId(builder, customColorId);\r\n  PlayerLoadout.addCarId(builder, carId);\r\n  PlayerLoadout.addDecalId(builder, decalId);\r\n  PlayerLoadout.addWheelsId(builder, wheelsId);\r\n  PlayerLoadout.addBoostId(builder, boostId);\r\n  PlayerLoadout.addAntennaId(builder, antennaId);\r\n  PlayerLoadout.addHatId(builder, hatId);\r\n  PlayerLoadout.addPaintFinishId(builder, paintFinishId);\r\n  PlayerLoadout.addCustomFinishId(builder, customFinishId);\r\n  PlayerLoadout.addEngineAudioId(builder, engineAudioId);\r\n  PlayerLoadout.addTrailsId(builder, trailsId);\r\n  PlayerLoadout.addGoalExplosionId(builder, goalExplosionId);\r\n  PlayerLoadout.addLoadoutPaint(builder, loadoutPaintOffset);\r\n  PlayerLoadout.addPrimaryColorLookup(builder, primaryColorLookupOffset);\r\n  PlayerLoadout.addSecondaryColorLookup(builder, secondaryColorLookupOffset);\r\n  return PlayerLoadout.endPlayerLoadout(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * Specification for 'painted' items. See https://github.com/RLBot/RLBot/wiki/Bot-Customization\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class LoadoutPaint {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns LoadoutPaint\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):LoadoutPaint {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param LoadoutPaint= obj\r\n * @returns LoadoutPaint\r\n */\r\nstatic getRootAsLoadoutPaint(bb:flatbuffers.ByteBuffer, obj?:LoadoutPaint):LoadoutPaint {\r\n  return (obj || new LoadoutPaint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param LoadoutPaint= obj\r\n * @returns LoadoutPaint\r\n */\r\nstatic getSizePrefixedRootAsLoadoutPaint(bb:flatbuffers.ByteBuffer, obj?:LoadoutPaint):LoadoutPaint {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new LoadoutPaint()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ncarPaintId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndecalPaintId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nwheelsPaintId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nboostPaintId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nantennaPaintId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nhatPaintId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ntrailsPaintId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngoalExplosionPaintId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startLoadoutPaint(builder:flatbuffers.Builder) {\r\n  builder.startObject(8);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number carPaintId\r\n */\r\nstatic addCarPaintId(builder:flatbuffers.Builder, carPaintId:number) {\r\n  builder.addFieldInt32(0, carPaintId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number decalPaintId\r\n */\r\nstatic addDecalPaintId(builder:flatbuffers.Builder, decalPaintId:number) {\r\n  builder.addFieldInt32(1, decalPaintId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number wheelsPaintId\r\n */\r\nstatic addWheelsPaintId(builder:flatbuffers.Builder, wheelsPaintId:number) {\r\n  builder.addFieldInt32(2, wheelsPaintId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number boostPaintId\r\n */\r\nstatic addBoostPaintId(builder:flatbuffers.Builder, boostPaintId:number) {\r\n  builder.addFieldInt32(3, boostPaintId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number antennaPaintId\r\n */\r\nstatic addAntennaPaintId(builder:flatbuffers.Builder, antennaPaintId:number) {\r\n  builder.addFieldInt32(4, antennaPaintId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number hatPaintId\r\n */\r\nstatic addHatPaintId(builder:flatbuffers.Builder, hatPaintId:number) {\r\n  builder.addFieldInt32(5, hatPaintId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number trailsPaintId\r\n */\r\nstatic addTrailsPaintId(builder:flatbuffers.Builder, trailsPaintId:number) {\r\n  builder.addFieldInt32(6, trailsPaintId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number goalExplosionPaintId\r\n */\r\nstatic addGoalExplosionPaintId(builder:flatbuffers.Builder, goalExplosionPaintId:number) {\r\n  builder.addFieldInt32(7, goalExplosionPaintId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endLoadoutPaint(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createLoadoutPaint(builder:flatbuffers.Builder, carPaintId:number, decalPaintId:number, wheelsPaintId:number, boostPaintId:number, antennaPaintId:number, hatPaintId:number, trailsPaintId:number, goalExplosionPaintId:number):flatbuffers.Offset {\r\n  LoadoutPaint.startLoadoutPaint(builder);\r\n  LoadoutPaint.addCarPaintId(builder, carPaintId);\r\n  LoadoutPaint.addDecalPaintId(builder, decalPaintId);\r\n  LoadoutPaint.addWheelsPaintId(builder, wheelsPaintId);\r\n  LoadoutPaint.addBoostPaintId(builder, boostPaintId);\r\n  LoadoutPaint.addAntennaPaintId(builder, antennaPaintId);\r\n  LoadoutPaint.addHatPaintId(builder, hatPaintId);\r\n  LoadoutPaint.addTrailsPaintId(builder, trailsPaintId);\r\n  LoadoutPaint.addGoalExplosionPaintId(builder, goalExplosionPaintId);\r\n  return LoadoutPaint.endLoadoutPaint(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PlayerConfiguration {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PlayerConfiguration\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PlayerConfiguration {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerConfiguration= obj\r\n * @returns PlayerConfiguration\r\n */\r\nstatic getRootAsPlayerConfiguration(bb:flatbuffers.ByteBuffer, obj?:PlayerConfiguration):PlayerConfiguration {\r\n  return (obj || new PlayerConfiguration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerConfiguration= obj\r\n * @returns PlayerConfiguration\r\n */\r\nstatic getSizePrefixedRootAsPlayerConfiguration(bb:flatbuffers.ByteBuffer, obj?:PlayerConfiguration):PlayerConfiguration {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PlayerConfiguration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.PlayerClass\r\n */\r\nvarietyType():rlbot.flat.PlayerClass {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : rlbot.flat.PlayerClass.NONE;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Table obj\r\n * @returns ?flatbuffers.Table\r\n */\r\nvariety<T extends flatbuffers.Table>(obj:T):T|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nname():string|null\r\nname(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nname(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nteam():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.PlayerLoadout= obj\r\n * @returns rlbot.flat.PlayerLoadout|null\r\n */\r\nloadout(obj?:rlbot.flat.PlayerLoadout):rlbot.flat.PlayerLoadout|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? (obj || new rlbot.flat.PlayerLoadout()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * In the case where the requested player index is not available, spawnId will help\r\n * the framework figure out what index was actually assigned to this player instead.\r\n *\r\n * @returns number\r\n */\r\nspawnId():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPlayerConfiguration(builder:flatbuffers.Builder) {\r\n  builder.startObject(6);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.PlayerClass varietyType\r\n */\r\nstatic addVarietyType(builder:flatbuffers.Builder, varietyType:rlbot.flat.PlayerClass) {\r\n  builder.addFieldInt8(0, varietyType, rlbot.flat.PlayerClass.NONE);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset varietyOffset\r\n */\r\nstatic addVariety(builder:flatbuffers.Builder, varietyOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, varietyOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset nameOffset\r\n */\r\nstatic addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(2, nameOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number team\r\n */\r\nstatic addTeam(builder:flatbuffers.Builder, team:number) {\r\n  builder.addFieldInt32(3, team, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset loadoutOffset\r\n */\r\nstatic addLoadout(builder:flatbuffers.Builder, loadoutOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(4, loadoutOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number spawnId\r\n */\r\nstatic addSpawnId(builder:flatbuffers.Builder, spawnId:number) {\r\n  builder.addFieldInt32(5, spawnId, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPlayerConfiguration(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPlayerConfiguration(builder:flatbuffers.Builder, varietyType:rlbot.flat.PlayerClass, varietyOffset:flatbuffers.Offset, nameOffset:flatbuffers.Offset, team:number, loadoutOffset:flatbuffers.Offset, spawnId:number):flatbuffers.Offset {\r\n  PlayerConfiguration.startPlayerConfiguration(builder);\r\n  PlayerConfiguration.addVarietyType(builder, varietyType);\r\n  PlayerConfiguration.addVariety(builder, varietyOffset);\r\n  PlayerConfiguration.addName(builder, nameOffset);\r\n  PlayerConfiguration.addTeam(builder, team);\r\n  PlayerConfiguration.addLoadout(builder, loadoutOffset);\r\n  PlayerConfiguration.addSpawnId(builder, spawnId);\r\n  return PlayerConfiguration.endPlayerConfiguration(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class MutatorSettings {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns MutatorSettings\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):MutatorSettings {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MutatorSettings= obj\r\n * @returns MutatorSettings\r\n */\r\nstatic getRootAsMutatorSettings(bb:flatbuffers.ByteBuffer, obj?:MutatorSettings):MutatorSettings {\r\n  return (obj || new MutatorSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MutatorSettings= obj\r\n * @returns MutatorSettings\r\n */\r\nstatic getSizePrefixedRootAsMutatorSettings(bb:flatbuffers.ByteBuffer, obj?:MutatorSettings):MutatorSettings {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new MutatorSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.MatchLength\r\n */\r\nmatchLength():rlbot.flat.MatchLength {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.MatchLength.Five_Minutes;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.MaxScore\r\n */\r\nmaxScore():rlbot.flat.MaxScore {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.MaxScore.Unlimited;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.OvertimeOption\r\n */\r\novertimeOption():rlbot.flat.OvertimeOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.OvertimeOption.Unlimited;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.SeriesLengthOption\r\n */\r\nseriesLengthOption():rlbot.flat.SeriesLengthOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.SeriesLengthOption.Unlimited;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.GameSpeedOption\r\n */\r\ngameSpeedOption():rlbot.flat.GameSpeedOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.GameSpeedOption.Default;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.BallMaxSpeedOption\r\n */\r\nballMaxSpeedOption():rlbot.flat.BallMaxSpeedOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.BallMaxSpeedOption.Default;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.BallTypeOption\r\n */\r\nballTypeOption():rlbot.flat.BallTypeOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.BallTypeOption.Default;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.BallWeightOption\r\n */\r\nballWeightOption():rlbot.flat.BallWeightOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.BallWeightOption.Default;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.BallSizeOption\r\n */\r\nballSizeOption():rlbot.flat.BallSizeOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.BallSizeOption.Default;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.BallBouncinessOption\r\n */\r\nballBouncinessOption():rlbot.flat.BallBouncinessOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.BallBouncinessOption.Default;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.BoostOption\r\n */\r\nboostOption():rlbot.flat.BoostOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.BoostOption.Normal_Boost;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.RumbleOption\r\n */\r\nrumbleOption():rlbot.flat.RumbleOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 26);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.RumbleOption.No_Rumble;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.BoostStrengthOption\r\n */\r\nboostStrengthOption():rlbot.flat.BoostStrengthOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 28);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.BoostStrengthOption.One;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.GravityOption\r\n */\r\ngravityOption():rlbot.flat.GravityOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 30);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.GravityOption.Default;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.DemolishOption\r\n */\r\ndemolishOption():rlbot.flat.DemolishOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 32);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.DemolishOption.Default;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.RespawnTimeOption\r\n */\r\nrespawnTimeOption():rlbot.flat.RespawnTimeOption {\r\n  var offset = this.bb!.__offset(this.bb_pos, 34);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.RespawnTimeOption.Three_Seconds;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startMutatorSettings(builder:flatbuffers.Builder) {\r\n  builder.startObject(16);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.MatchLength matchLength\r\n */\r\nstatic addMatchLength(builder:flatbuffers.Builder, matchLength:rlbot.flat.MatchLength) {\r\n  builder.addFieldInt8(0, matchLength, rlbot.flat.MatchLength.Five_Minutes);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.MaxScore maxScore\r\n */\r\nstatic addMaxScore(builder:flatbuffers.Builder, maxScore:rlbot.flat.MaxScore) {\r\n  builder.addFieldInt8(1, maxScore, rlbot.flat.MaxScore.Unlimited);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.OvertimeOption overtimeOption\r\n */\r\nstatic addOvertimeOption(builder:flatbuffers.Builder, overtimeOption:rlbot.flat.OvertimeOption) {\r\n  builder.addFieldInt8(2, overtimeOption, rlbot.flat.OvertimeOption.Unlimited);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.SeriesLengthOption seriesLengthOption\r\n */\r\nstatic addSeriesLengthOption(builder:flatbuffers.Builder, seriesLengthOption:rlbot.flat.SeriesLengthOption) {\r\n  builder.addFieldInt8(3, seriesLengthOption, rlbot.flat.SeriesLengthOption.Unlimited);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.GameSpeedOption gameSpeedOption\r\n */\r\nstatic addGameSpeedOption(builder:flatbuffers.Builder, gameSpeedOption:rlbot.flat.GameSpeedOption) {\r\n  builder.addFieldInt8(4, gameSpeedOption, rlbot.flat.GameSpeedOption.Default);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.BallMaxSpeedOption ballMaxSpeedOption\r\n */\r\nstatic addBallMaxSpeedOption(builder:flatbuffers.Builder, ballMaxSpeedOption:rlbot.flat.BallMaxSpeedOption) {\r\n  builder.addFieldInt8(5, ballMaxSpeedOption, rlbot.flat.BallMaxSpeedOption.Default);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.BallTypeOption ballTypeOption\r\n */\r\nstatic addBallTypeOption(builder:flatbuffers.Builder, ballTypeOption:rlbot.flat.BallTypeOption) {\r\n  builder.addFieldInt8(6, ballTypeOption, rlbot.flat.BallTypeOption.Default);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.BallWeightOption ballWeightOption\r\n */\r\nstatic addBallWeightOption(builder:flatbuffers.Builder, ballWeightOption:rlbot.flat.BallWeightOption) {\r\n  builder.addFieldInt8(7, ballWeightOption, rlbot.flat.BallWeightOption.Default);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.BallSizeOption ballSizeOption\r\n */\r\nstatic addBallSizeOption(builder:flatbuffers.Builder, ballSizeOption:rlbot.flat.BallSizeOption) {\r\n  builder.addFieldInt8(8, ballSizeOption, rlbot.flat.BallSizeOption.Default);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.BallBouncinessOption ballBouncinessOption\r\n */\r\nstatic addBallBouncinessOption(builder:flatbuffers.Builder, ballBouncinessOption:rlbot.flat.BallBouncinessOption) {\r\n  builder.addFieldInt8(9, ballBouncinessOption, rlbot.flat.BallBouncinessOption.Default);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.BoostOption boostOption\r\n */\r\nstatic addBoostOption(builder:flatbuffers.Builder, boostOption:rlbot.flat.BoostOption) {\r\n  builder.addFieldInt8(10, boostOption, rlbot.flat.BoostOption.Normal_Boost);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.RumbleOption rumbleOption\r\n */\r\nstatic addRumbleOption(builder:flatbuffers.Builder, rumbleOption:rlbot.flat.RumbleOption) {\r\n  builder.addFieldInt8(11, rumbleOption, rlbot.flat.RumbleOption.No_Rumble);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.BoostStrengthOption boostStrengthOption\r\n */\r\nstatic addBoostStrengthOption(builder:flatbuffers.Builder, boostStrengthOption:rlbot.flat.BoostStrengthOption) {\r\n  builder.addFieldInt8(12, boostStrengthOption, rlbot.flat.BoostStrengthOption.One);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.GravityOption gravityOption\r\n */\r\nstatic addGravityOption(builder:flatbuffers.Builder, gravityOption:rlbot.flat.GravityOption) {\r\n  builder.addFieldInt8(13, gravityOption, rlbot.flat.GravityOption.Default);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.DemolishOption demolishOption\r\n */\r\nstatic addDemolishOption(builder:flatbuffers.Builder, demolishOption:rlbot.flat.DemolishOption) {\r\n  builder.addFieldInt8(14, demolishOption, rlbot.flat.DemolishOption.Default);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.RespawnTimeOption respawnTimeOption\r\n */\r\nstatic addRespawnTimeOption(builder:flatbuffers.Builder, respawnTimeOption:rlbot.flat.RespawnTimeOption) {\r\n  builder.addFieldInt8(15, respawnTimeOption, rlbot.flat.RespawnTimeOption.Three_Seconds);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endMutatorSettings(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createMutatorSettings(builder:flatbuffers.Builder, matchLength:rlbot.flat.MatchLength, maxScore:rlbot.flat.MaxScore, overtimeOption:rlbot.flat.OvertimeOption, seriesLengthOption:rlbot.flat.SeriesLengthOption, gameSpeedOption:rlbot.flat.GameSpeedOption, ballMaxSpeedOption:rlbot.flat.BallMaxSpeedOption, ballTypeOption:rlbot.flat.BallTypeOption, ballWeightOption:rlbot.flat.BallWeightOption, ballSizeOption:rlbot.flat.BallSizeOption, ballBouncinessOption:rlbot.flat.BallBouncinessOption, boostOption:rlbot.flat.BoostOption, rumbleOption:rlbot.flat.RumbleOption, boostStrengthOption:rlbot.flat.BoostStrengthOption, gravityOption:rlbot.flat.GravityOption, demolishOption:rlbot.flat.DemolishOption, respawnTimeOption:rlbot.flat.RespawnTimeOption):flatbuffers.Offset {\r\n  MutatorSettings.startMutatorSettings(builder);\r\n  MutatorSettings.addMatchLength(builder, matchLength);\r\n  MutatorSettings.addMaxScore(builder, maxScore);\r\n  MutatorSettings.addOvertimeOption(builder, overtimeOption);\r\n  MutatorSettings.addSeriesLengthOption(builder, seriesLengthOption);\r\n  MutatorSettings.addGameSpeedOption(builder, gameSpeedOption);\r\n  MutatorSettings.addBallMaxSpeedOption(builder, ballMaxSpeedOption);\r\n  MutatorSettings.addBallTypeOption(builder, ballTypeOption);\r\n  MutatorSettings.addBallWeightOption(builder, ballWeightOption);\r\n  MutatorSettings.addBallSizeOption(builder, ballSizeOption);\r\n  MutatorSettings.addBallBouncinessOption(builder, ballBouncinessOption);\r\n  MutatorSettings.addBoostOption(builder, boostOption);\r\n  MutatorSettings.addRumbleOption(builder, rumbleOption);\r\n  MutatorSettings.addBoostStrengthOption(builder, boostStrengthOption);\r\n  MutatorSettings.addGravityOption(builder, gravityOption);\r\n  MutatorSettings.addDemolishOption(builder, demolishOption);\r\n  MutatorSettings.addRespawnTimeOption(builder, respawnTimeOption);\r\n  return MutatorSettings.endMutatorSettings(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class MatchSettings {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns MatchSettings\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):MatchSettings {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MatchSettings= obj\r\n * @returns MatchSettings\r\n */\r\nstatic getRootAsMatchSettings(bb:flatbuffers.ByteBuffer, obj?:MatchSettings):MatchSettings {\r\n  return (obj || new MatchSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MatchSettings= obj\r\n * @returns MatchSettings\r\n */\r\nstatic getSizePrefixedRootAsMatchSettings(bb:flatbuffers.ByteBuffer, obj?:MatchSettings):MatchSettings {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new MatchSettings()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.PlayerConfiguration= obj\r\n * @returns rlbot.flat.PlayerConfiguration\r\n */\r\nplayerConfigurations(index: number, obj?:rlbot.flat.PlayerConfiguration):rlbot.flat.PlayerConfiguration|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.PlayerConfiguration()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nplayerConfigurationsLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.GameMode\r\n */\r\ngameMode():rlbot.flat.GameMode {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.GameMode.Soccer;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.GameMap\r\n */\r\ngameMap():rlbot.flat.GameMap {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.GameMap.DFHStadium;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nskipReplays():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\ninstantStart():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 12);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.MutatorSettings= obj\r\n * @returns rlbot.flat.MutatorSettings|null\r\n */\r\nmutatorSettings(obj?:rlbot.flat.MutatorSettings):rlbot.flat.MutatorSettings|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 14);\r\n  return offset ? (obj || new rlbot.flat.MutatorSettings()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.ExistingMatchBehavior\r\n */\r\nexistingMatchBehavior():rlbot.flat.ExistingMatchBehavior {\r\n  var offset = this.bb!.__offset(this.bb_pos, 16);\r\n  return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) : rlbot.flat.ExistingMatchBehavior.Restart_If_Different;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nenableLockstep():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 18);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nenableRendering():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 20);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nenableStateSetting():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 22);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nautoSaveReplay():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 24);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startMatchSettings(builder:flatbuffers.Builder) {\r\n  builder.startObject(11);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset playerConfigurationsOffset\r\n */\r\nstatic addPlayerConfigurations(builder:flatbuffers.Builder, playerConfigurationsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, playerConfigurationsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createPlayerConfigurationsVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startPlayerConfigurationsVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.GameMode gameMode\r\n */\r\nstatic addGameMode(builder:flatbuffers.Builder, gameMode:rlbot.flat.GameMode) {\r\n  builder.addFieldInt8(1, gameMode, rlbot.flat.GameMode.Soccer);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.GameMap gameMap\r\n */\r\nstatic addGameMap(builder:flatbuffers.Builder, gameMap:rlbot.flat.GameMap) {\r\n  builder.addFieldInt8(2, gameMap, rlbot.flat.GameMap.DFHStadium);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean skipReplays\r\n */\r\nstatic addSkipReplays(builder:flatbuffers.Builder, skipReplays:boolean) {\r\n  builder.addFieldInt8(3, +skipReplays, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean instantStart\r\n */\r\nstatic addInstantStart(builder:flatbuffers.Builder, instantStart:boolean) {\r\n  builder.addFieldInt8(4, +instantStart, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset mutatorSettingsOffset\r\n */\r\nstatic addMutatorSettings(builder:flatbuffers.Builder, mutatorSettingsOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(5, mutatorSettingsOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.ExistingMatchBehavior existingMatchBehavior\r\n */\r\nstatic addExistingMatchBehavior(builder:flatbuffers.Builder, existingMatchBehavior:rlbot.flat.ExistingMatchBehavior) {\r\n  builder.addFieldInt8(6, existingMatchBehavior, rlbot.flat.ExistingMatchBehavior.Restart_If_Different);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean enableLockstep\r\n */\r\nstatic addEnableLockstep(builder:flatbuffers.Builder, enableLockstep:boolean) {\r\n  builder.addFieldInt8(7, +enableLockstep, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean enableRendering\r\n */\r\nstatic addEnableRendering(builder:flatbuffers.Builder, enableRendering:boolean) {\r\n  builder.addFieldInt8(8, +enableRendering, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean enableStateSetting\r\n */\r\nstatic addEnableStateSetting(builder:flatbuffers.Builder, enableStateSetting:boolean) {\r\n  builder.addFieldInt8(9, +enableStateSetting, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean autoSaveReplay\r\n */\r\nstatic addAutoSaveReplay(builder:flatbuffers.Builder, autoSaveReplay:boolean) {\r\n  builder.addFieldInt8(10, +autoSaveReplay, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endMatchSettings(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createMatchSettings(builder:flatbuffers.Builder, playerConfigurationsOffset:flatbuffers.Offset, gameMode:rlbot.flat.GameMode, gameMap:rlbot.flat.GameMap, skipReplays:boolean, instantStart:boolean, mutatorSettingsOffset:flatbuffers.Offset, existingMatchBehavior:rlbot.flat.ExistingMatchBehavior, enableLockstep:boolean, enableRendering:boolean, enableStateSetting:boolean, autoSaveReplay:boolean):flatbuffers.Offset {\r\n  MatchSettings.startMatchSettings(builder);\r\n  MatchSettings.addPlayerConfigurations(builder, playerConfigurationsOffset);\r\n  MatchSettings.addGameMode(builder, gameMode);\r\n  MatchSettings.addGameMap(builder, gameMap);\r\n  MatchSettings.addSkipReplays(builder, skipReplays);\r\n  MatchSettings.addInstantStart(builder, instantStart);\r\n  MatchSettings.addMutatorSettings(builder, mutatorSettingsOffset);\r\n  MatchSettings.addExistingMatchBehavior(builder, existingMatchBehavior);\r\n  MatchSettings.addEnableLockstep(builder, enableLockstep);\r\n  MatchSettings.addEnableRendering(builder, enableRendering);\r\n  MatchSettings.addEnableStateSetting(builder, enableStateSetting);\r\n  MatchSettings.addAutoSaveReplay(builder, autoSaveReplay);\r\n  return MatchSettings.endMatchSettings(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class QuickChatMessages {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns QuickChatMessages\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):QuickChatMessages {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param QuickChatMessages= obj\r\n * @returns QuickChatMessages\r\n */\r\nstatic getRootAsQuickChatMessages(bb:flatbuffers.ByteBuffer, obj?:QuickChatMessages):QuickChatMessages {\r\n  return (obj || new QuickChatMessages()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param QuickChatMessages= obj\r\n * @returns QuickChatMessages\r\n */\r\nstatic getSizePrefixedRootAsQuickChatMessages(bb:flatbuffers.ByteBuffer, obj?:QuickChatMessages):QuickChatMessages {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new QuickChatMessages()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.QuickChat= obj\r\n * @returns rlbot.flat.QuickChat\r\n */\r\nmessages(index: number, obj?:rlbot.flat.QuickChat):rlbot.flat.QuickChat|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.QuickChat()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nmessagesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startQuickChatMessages(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset messagesOffset\r\n */\r\nstatic addMessages(builder:flatbuffers.Builder, messagesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, messagesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createMessagesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startMessagesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endQuickChatMessages(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createQuickChatMessages(builder:flatbuffers.Builder, messagesOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  QuickChatMessages.startQuickChatMessages(builder);\r\n  QuickChatMessages.addMessages(builder, messagesOffset);\r\n  return QuickChatMessages.endQuickChatMessages(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * Sent when connecting to RLBot to indicate what type of messages are desired.\r\n * This could be sent by a bot, or a bot manager governing several bots, an\r\n * overlay, or any other utility that connects to the RLBot process.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class ReadyMessage {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns ReadyMessage\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):ReadyMessage {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ReadyMessage= obj\r\n * @returns ReadyMessage\r\n */\r\nstatic getRootAsReadyMessage(bb:flatbuffers.ByteBuffer, obj?:ReadyMessage):ReadyMessage {\r\n  return (obj || new ReadyMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param ReadyMessage= obj\r\n * @returns ReadyMessage\r\n */\r\nstatic getSizePrefixedRootAsReadyMessage(bb:flatbuffers.ByteBuffer, obj?:ReadyMessage):ReadyMessage {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new ReadyMessage()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nwantsBallPredictions():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nwantsQuickChat():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @returns boolean\r\n */\r\nwantsGameMessages():boolean {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startReadyMessage(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean wantsBallPredictions\r\n */\r\nstatic addWantsBallPredictions(builder:flatbuffers.Builder, wantsBallPredictions:boolean) {\r\n  builder.addFieldInt8(0, +wantsBallPredictions, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean wantsQuickChat\r\n */\r\nstatic addWantsQuickChat(builder:flatbuffers.Builder, wantsQuickChat:boolean) {\r\n  builder.addFieldInt8(1, +wantsQuickChat, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param boolean wantsGameMessages\r\n */\r\nstatic addWantsGameMessages(builder:flatbuffers.Builder, wantsGameMessages:boolean) {\r\n  builder.addFieldInt8(2, +wantsGameMessages, +false);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endReadyMessage(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createReadyMessage(builder:flatbuffers.Builder, wantsBallPredictions:boolean, wantsQuickChat:boolean, wantsGameMessages:boolean):flatbuffers.Offset {\r\n  ReadyMessage.startReadyMessage(builder);\r\n  ReadyMessage.addWantsBallPredictions(builder, wantsBallPredictions);\r\n  ReadyMessage.addWantsQuickChat(builder, wantsQuickChat);\r\n  ReadyMessage.addWantsGameMessages(builder, wantsGameMessages);\r\n  return ReadyMessage.endReadyMessage(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * Notification that a player triggers some in-game event, such as:\r\n *\t\tWin, Loss, TimePlayed;\r\n *\t\tShot, Assist, Center, Clear, PoolShot;\r\n *\t\tGoal, AerialGoal, BicycleGoal, BulletGoal, BackwardsGoal, LongGoal, OvertimeGoal, TurtleGoal;\r\n *\t\tAerialHit, BicycleHit, BulletHit, !BackwardsHit, JuggleHit, FirstTouch, BallHit;\r\n *\t\tSave, EpicSave, FreezeSave;\r\n *\t\tHatTrick, Savior, Playmaker, MVP;\r\n *\t\tFastestGoal, SlowestGoal, FurthestGoal, OwnGoal;\r\n *\t\tMostBallTouches, FewestBallTouches, MostBoostPickups, FewestBoostPickups, BoostPickups;\r\n *\t\tCarTouches, Demolition, Demolish;\r\n *\t\tLowFive, HighFive;\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PlayerStatEvent {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PlayerStatEvent\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PlayerStatEvent {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerStatEvent= obj\r\n * @returns PlayerStatEvent\r\n */\r\nstatic getRootAsPlayerStatEvent(bb:flatbuffers.ByteBuffer, obj?:PlayerStatEvent):PlayerStatEvent {\r\n  return (obj || new PlayerStatEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerStatEvent= obj\r\n * @returns PlayerStatEvent\r\n */\r\nstatic getSizePrefixedRootAsPlayerStatEvent(bb:flatbuffers.ByteBuffer, obj?:PlayerStatEvent):PlayerStatEvent {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PlayerStatEvent()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * index of the player associated with the event\r\n *\r\n * @returns number\r\n */\r\nplayerIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * Event type\r\n *\r\n * @param flatbuffers.Encoding= optionalEncoding\r\n * @returns string|Uint8Array|null\r\n */\r\nstatType():string|null\r\nstatType(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null\r\nstatType(optionalEncoding?:any):string|Uint8Array|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPlayerStatEvent(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number playerIndex\r\n */\r\nstatic addPlayerIndex(builder:flatbuffers.Builder, playerIndex:number) {\r\n  builder.addFieldInt32(0, playerIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset statTypeOffset\r\n */\r\nstatic addStatType(builder:flatbuffers.Builder, statTypeOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, statTypeOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPlayerStatEvent(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPlayerStatEvent(builder:flatbuffers.Builder, playerIndex:number, statTypeOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  PlayerStatEvent.startPlayerStatEvent(builder);\r\n  PlayerStatEvent.addPlayerIndex(builder, playerIndex);\r\n  PlayerStatEvent.addStatType(builder, statTypeOffset);\r\n  return PlayerStatEvent.endPlayerStatEvent(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * Notification when the local player is spectating another player.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PlayerSpectate {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PlayerSpectate\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PlayerSpectate {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerSpectate= obj\r\n * @returns PlayerSpectate\r\n */\r\nstatic getRootAsPlayerSpectate(bb:flatbuffers.ByteBuffer, obj?:PlayerSpectate):PlayerSpectate {\r\n  return (obj || new PlayerSpectate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerSpectate= obj\r\n * @returns PlayerSpectate\r\n */\r\nstatic getSizePrefixedRootAsPlayerSpectate(bb:flatbuffers.ByteBuffer, obj?:PlayerSpectate):PlayerSpectate {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PlayerSpectate()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * index of the player that is being spectated. Will be -1 if not spectating anyone.\r\n *\r\n * @returns number\r\n */\r\nplayerIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPlayerSpectate(builder:flatbuffers.Builder) {\r\n  builder.startObject(1);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number playerIndex\r\n */\r\nstatic addPlayerIndex(builder:flatbuffers.Builder, playerIndex:number) {\r\n  builder.addFieldInt32(0, playerIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPlayerSpectate(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPlayerSpectate(builder:flatbuffers.Builder, playerIndex:number):flatbuffers.Offset {\r\n  PlayerSpectate.startPlayerSpectate(builder);\r\n  PlayerSpectate.addPlayerIndex(builder, playerIndex);\r\n  return PlayerSpectate.endPlayerSpectate(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * Rocket League is notifying us that some player has moved their controller. This is an *output*\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class PlayerInputChange {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns PlayerInputChange\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):PlayerInputChange {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerInputChange= obj\r\n * @returns PlayerInputChange\r\n */\r\nstatic getRootAsPlayerInputChange(bb:flatbuffers.ByteBuffer, obj?:PlayerInputChange):PlayerInputChange {\r\n  return (obj || new PlayerInputChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param PlayerInputChange= obj\r\n * @returns PlayerInputChange\r\n */\r\nstatic getSizePrefixedRootAsPlayerInputChange(bb:flatbuffers.ByteBuffer, obj?:PlayerInputChange):PlayerInputChange {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new PlayerInputChange()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nplayerIndex():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param rlbot.flat.ControllerState= obj\r\n * @returns rlbot.flat.ControllerState|null\r\n */\r\ncontrollerState(obj?:rlbot.flat.ControllerState):rlbot.flat.ControllerState|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? (obj || new rlbot.flat.ControllerState()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndodgeForward():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ndodgeRight():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 10);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startPlayerInputChange(builder:flatbuffers.Builder) {\r\n  builder.startObject(4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number playerIndex\r\n */\r\nstatic addPlayerIndex(builder:flatbuffers.Builder, playerIndex:number) {\r\n  builder.addFieldInt32(0, playerIndex, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset controllerStateOffset\r\n */\r\nstatic addControllerState(builder:flatbuffers.Builder, controllerStateOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, controllerStateOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number dodgeForward\r\n */\r\nstatic addDodgeForward(builder:flatbuffers.Builder, dodgeForward:number) {\r\n  builder.addFieldFloat32(2, dodgeForward, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number dodgeRight\r\n */\r\nstatic addDodgeRight(builder:flatbuffers.Builder, dodgeRight:number) {\r\n  builder.addFieldFloat32(3, dodgeRight, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endPlayerInputChange(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createPlayerInputChange(builder:flatbuffers.Builder, playerIndex:number, controllerStateOffset:flatbuffers.Offset, dodgeForward:number, dodgeRight:number):flatbuffers.Offset {\r\n  PlayerInputChange.startPlayerInputChange(builder);\r\n  PlayerInputChange.addPlayerIndex(builder, playerIndex);\r\n  PlayerInputChange.addControllerState(builder, controllerStateOffset);\r\n  PlayerInputChange.addDodgeForward(builder, dodgeForward);\r\n  PlayerInputChange.addDodgeRight(builder, dodgeRight);\r\n  return PlayerInputChange.endPlayerInputChange(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class GameMessageWrapper {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns GameMessageWrapper\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):GameMessageWrapper {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GameMessageWrapper= obj\r\n * @returns GameMessageWrapper\r\n */\r\nstatic getRootAsGameMessageWrapper(bb:flatbuffers.ByteBuffer, obj?:GameMessageWrapper):GameMessageWrapper {\r\n  return (obj || new GameMessageWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param GameMessageWrapper= obj\r\n * @returns GameMessageWrapper\r\n */\r\nstatic getSizePrefixedRootAsGameMessageWrapper(bb:flatbuffers.ByteBuffer, obj?:GameMessageWrapper):GameMessageWrapper {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new GameMessageWrapper()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @returns rlbot.flat.GameMessage\r\n */\r\nMessageType():rlbot.flat.GameMessage {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) : rlbot.flat.GameMessage.NONE;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Table obj\r\n * @returns ?flatbuffers.Table\r\n */\r\nMessage<T extends flatbuffers.Table>(obj:T):T|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startGameMessageWrapper(builder:flatbuffers.Builder) {\r\n  builder.startObject(2);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param rlbot.flat.GameMessage MessageType\r\n */\r\nstatic addMessageType(builder:flatbuffers.Builder, MessageType:rlbot.flat.GameMessage) {\r\n  builder.addFieldInt8(0, MessageType, rlbot.flat.GameMessage.NONE);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset MessageOffset\r\n */\r\nstatic addMessage(builder:flatbuffers.Builder, MessageOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(1, MessageOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endGameMessageWrapper(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createGameMessageWrapper(builder:flatbuffers.Builder, MessageType:rlbot.flat.GameMessage, MessageOffset:flatbuffers.Offset):flatbuffers.Offset {\r\n  GameMessageWrapper.startGameMessageWrapper(builder);\r\n  GameMessageWrapper.addMessageType(builder, MessageType);\r\n  GameMessageWrapper.addMessage(builder, MessageOffset);\r\n  return GameMessageWrapper.endGameMessageWrapper(builder);\r\n}\r\n}\r\n}\r\n/**\r\n * We have some very small messages that are only a few bytes but potentially sent at high frequency.\r\n * Bundle them into a packet to reduce the overhead of sending data over TCP.\r\n *\r\n * @constructor\r\n */\r\nexport namespace rlbot.flat{\r\nexport class MessagePacket {\r\n  bb: flatbuffers.ByteBuffer|null = null;\r\n\r\n  bb_pos:number = 0;\r\n/**\r\n * @param number i\r\n * @param flatbuffers.ByteBuffer bb\r\n * @returns MessagePacket\r\n */\r\n__init(i:number, bb:flatbuffers.ByteBuffer):MessagePacket {\r\n  this.bb_pos = i;\r\n  this.bb = bb;\r\n  return this;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MessagePacket= obj\r\n * @returns MessagePacket\r\n */\r\nstatic getRootAsMessagePacket(bb:flatbuffers.ByteBuffer, obj?:MessagePacket):MessagePacket {\r\n  return (obj || new MessagePacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.ByteBuffer bb\r\n * @param MessagePacket= obj\r\n * @returns MessagePacket\r\n */\r\nstatic getSizePrefixedRootAsMessagePacket(bb:flatbuffers.ByteBuffer, obj?:MessagePacket):MessagePacket {\r\n  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\r\n  return (obj || new MessagePacket()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\r\n};\r\n\r\n/**\r\n * @param number index\r\n * @param rlbot.flat.GameMessageWrapper= obj\r\n * @returns rlbot.flat.GameMessageWrapper\r\n */\r\nmessages(index: number, obj?:rlbot.flat.GameMessageWrapper):rlbot.flat.GameMessageWrapper|null {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? (obj || new rlbot.flat.GameMessageWrapper()).__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) : null;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nmessagesLength():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 4);\r\n  return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\ngameSeconds():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 6);\r\n  return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\r\n};\r\n\r\n/**\r\n * @returns number\r\n */\r\nframeNum():number {\r\n  var offset = this.bb!.__offset(this.bb_pos, 8);\r\n  return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n */\r\nstatic startMessagePacket(builder:flatbuffers.Builder) {\r\n  builder.startObject(3);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param flatbuffers.Offset messagesOffset\r\n */\r\nstatic addMessages(builder:flatbuffers.Builder, messagesOffset:flatbuffers.Offset) {\r\n  builder.addFieldOffset(0, messagesOffset, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param Array.<flatbuffers.Offset> data\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic createMessagesVector(builder:flatbuffers.Builder, data:flatbuffers.Offset[]):flatbuffers.Offset {\r\n  builder.startVector(4, data.length, 4);\r\n  for (var i = data.length - 1; i >= 0; i--) {\r\n    builder.addOffset(data[i]);\r\n  }\r\n  return builder.endVector();\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number numElems\r\n */\r\nstatic startMessagesVector(builder:flatbuffers.Builder, numElems:number) {\r\n  builder.startVector(4, numElems, 4);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number gameSeconds\r\n */\r\nstatic addGameSeconds(builder:flatbuffers.Builder, gameSeconds:number) {\r\n  builder.addFieldFloat32(1, gameSeconds, 0.0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @param number frameNum\r\n */\r\nstatic addFrameNum(builder:flatbuffers.Builder, frameNum:number) {\r\n  builder.addFieldInt32(2, frameNum, 0);\r\n};\r\n\r\n/**\r\n * @param flatbuffers.Builder builder\r\n * @returns flatbuffers.Offset\r\n */\r\nstatic endMessagePacket(builder:flatbuffers.Builder):flatbuffers.Offset {\r\n  var offset = builder.endObject();\r\n  return offset;\r\n};\r\n\r\nstatic createMessagePacket(builder:flatbuffers.Builder, messagesOffset:flatbuffers.Offset, gameSeconds:number, frameNum:number):flatbuffers.Offset {\r\n  MessagePacket.startMessagePacket(builder);\r\n  MessagePacket.addMessages(builder, messagesOffset);\r\n  MessagePacket.addGameSeconds(builder, gameSeconds);\r\n  MessagePacket.addFrameNum(builder, frameNum);\r\n  return MessagePacket.endMessagePacket(builder);\r\n}\r\n}\r\n}\r\n", "import { BotClient } from \"./BotClient\";\r\nimport { rlbot } from \"./flat/rlbot_generated\";\r\nimport { flatbuffers } from \"flatbuffers\";\r\nimport * as utils from \"./utils\";\r\n\r\nclass Controller {\r\n  throttle: number;\r\n  steer: number;\r\n  pitch: number;\r\n  roll: number;\r\n  yaw: number;\r\n  boost: boolean;\r\n  jump: boolean;\r\n  handbrake: boolean;\r\n  useItem: boolean;\r\n  constructor() {\r\n    this.throttle = 0;\r\n    this.steer = 0;\r\n    this.pitch = 0;\r\n    this.roll = 0;\r\n    this.yaw = 0;\r\n    this.boost = false;\r\n    this.jump = false;\r\n    this.handbrake = false;\r\n    this.useItem = false;\r\n  }\r\n}\r\n\r\nclass ControllerManager {\r\n  client: BotClient;\r\n  constructor(client: BotClient) {\r\n    this.client = client;\r\n  }\r\n  sendInput(controller: Controller) {\r\n    let controllerState = rlbot.flat.ControllerState;\r\n    let playerInput = rlbot.flat.PlayerInput;\r\n\r\n    let builder = new flatbuffers.Builder(1024);\r\n\r\n    controllerState.startControllerState(builder);\r\n    controllerState.addThrottle(builder, controller.throttle);\r\n    controllerState.addSteer(builder, controller.steer);\r\n    controllerState.addPitch(builder, controller.pitch);\r\n    controllerState.addYaw(builder, controller.yaw);\r\n    controllerState.addRoll(builder, controller.roll);\r\n    controllerState.addBoost(builder, controller.boost);\r\n    controllerState.addJump(builder, controller.jump);\r\n    controllerState.addHandbrake(builder, controller.handbrake);\r\n    controllerState.addUseItem(builder, controller.useItem);\r\n\r\n    let finishedControllerState = controllerState.endControllerState(builder);\r\n\r\n    playerInput.startPlayerInput(builder);\r\n    playerInput.addPlayerIndex(builder, this.client.botIndex);\r\n    playerInput.addControllerState(builder, finishedControllerState);\r\n\r\n    let finishedPlayerInput = controllerState.endControllerState(builder);\r\n\r\n    builder.finish(finishedPlayerInput);\r\n\r\n    let buf = builder.asUint8Array();\r\n\r\n    if (this.client.ws == null) return;\r\n    this.client.ws.write(utils.encodeFlat(4, buf));\r\n  }\r\n}\r\n\r\nexport { Controller, ControllerManager };\r\n", "import \"colors\";\r\nimport { rlbot } from \"./flat/rlbot_generated\";\r\nimport { flatbuffers } from \"flatbuffers\";\r\nimport * as flatstructs from \"./flat/flatstructs\";\r\n\r\nclass Logger {\r\n  name: string;\r\n  enabled: boolean = true;\r\n  constructor(name: string) {\r\n    this.name = name;\r\n  }\r\n  log(...args: string[]) {\r\n    if (!this.enabled) return;\r\n    let cats = args.splice(0, args.length - 1);\r\n    let message = args[0];\r\n    cats.unshift(\"\");\r\n    let catstring = cats.reduce((total, next) => {\r\n      return total + \"[\" + next.cyan + \"] \";\r\n    });\r\n    console.log(\r\n      `[${(\"Easy\".green + \"RLBot\".blue).bold}] [${\r\n        this.name.magenta\r\n      }] ${catstring}${message.white}`\r\n    );\r\n  }\r\n}\r\n\r\nfunction Uint8ArrayToString(bytes: Uint8Array): string {\r\n  return bytes.reduce(\r\n    (str: any, byte: any) => str + byte.toString(2).padStart(8, \"0\"),\r\n    \"\"\r\n  );\r\n}\r\nfunction Uint16to8Array(array16: Uint16Array) {\r\n  let result = new Uint8Array(\r\n    array16.buffer,\r\n    array16.byteOffset,\r\n    array16.byteLength\r\n  );\r\n\r\n  return result;\r\n}\r\nfunction encodeFlat(messageTypeInt: number, flatArray: Uint8Array): Uint8Array {\r\n  let messageType = new Uint16Array(1);\r\n  messageType.set([messageTypeInt]);\r\n  let messageLen = new Uint16Array(1);\r\n  messageLen.set([flatArray.length]);\r\n\r\n  var mergedArray = new Uint8Array(4 + flatArray.length);\r\n  mergedArray.set(Uint16to8Array(messageType).reverse(), 0);\r\n  mergedArray.set(Uint16to8Array(messageLen).reverse(), 2);\r\n  mergedArray.set(flatArray, 4);\r\n  return mergedArray;\r\n}\r\nfunction decodeFlat(bytes: Uint8Array) {\r\n  let rawBytes = bytes.subarray(4);\r\n  let rawDataType = Uint8Array.from(bytes).subarray(0, 2);\r\n  let dataType = ((rawDataType[0] & 0xff) << 8) | (rawDataType[1] & 0xff);\r\n  let buf = new flatbuffers.ByteBuffer(rawBytes);\r\n  let root;\r\n  try {\r\n    switch (dataType) {\r\n      case 1:\r\n        root = rlbot.flat.GameTickPacket.getRootAsGameTickPacket(buf);\r\n        break;\r\n      case 2:\r\n        root = rlbot.flat.FieldInfo.getRootAsFieldInfo(buf);\r\n        break;\r\n      case 3:\r\n        root = rlbot.flat.MatchSettings.getRootAsMatchSettings(buf);\r\n        break;\r\n      case 4:\r\n        throw \"Invalid type for decoding '4'\";\r\n        break;\r\n      case 5:\r\n        throw \"Invalid type for decoding '5'\";\r\n        break;\r\n      case 6:\r\n        throw \"Invalid type for decoding '6'\";\r\n        break;\r\n      case 7:\r\n        throw \"Invalid type for decoding '7'\";\r\n        break;\r\n      case 8:\r\n        throw \"Invalid type for decoding '8'\";\r\n        break;\r\n      case 9:\r\n        root = rlbot.flat.QuickChat.getRootAsQuickChat(buf);\r\n        break;\r\n      case 10:\r\n        root = rlbot.flat.BallPrediction.getRootAsBallPrediction(buf);\r\n        break;\r\n      case 11:\r\n        throw \"Invalid type for decoding '11'\";\r\n        break;\r\n      case 12:\r\n        root = rlbot.flat.MessagePacket.getRootAsMessagePacket(buf);\r\n        break;\r\n    }\r\n  } catch (e) {\r\n    throw \"\";\r\n  }\r\n\r\n  return { root, type: dataType };\r\n}\r\n\r\nfunction chunkSplitter(bigChunk/*us*/: Uint8Array): Uint8Array[] {\r\n  let chunks: Uint8Array[] = [];\r\n  for (let i = 0; i < bigChunk.length;) {\r\n    let chunkLeft = bigChunk.subarray(i);\r\n    // let rawDataType = Uint8Array.from(chunkLeft).subarray(0, 2);\r\n    // let dataType = ((rawDataType[0] & 0xff) << 8) | (rawDataType[1] & 0xff);\r\n    let rawDataSize = Uint8Array.from(chunkLeft).subarray(2, 4);\r\n    let dataSize = ((rawDataSize[0] & 0xff) << 8) | (rawDataSize[1] & 0xff);\r\n    chunks.push(chunkLeft.subarray(0, 4 + dataSize));\r\n    i+=4+dataSize;\r\n  }\r\n  return chunks\r\n}\r\n\r\nexport {\r\n  Uint16to8Array,\r\n  Uint8ArrayToString,\r\n  Logger,\r\n  encodeFlat,\r\n  decodeFlat,\r\n  chunkSplitter,\r\n  flatstructs,\r\n};\r\n", "// Credit to SuperVK for huge parts of this file\r\nexport * from \"../GameState\";\r\nimport {\r\n  Vector3,\r\n  Rotator,\r\n  Physics,\r\n  BallState,\r\n  BoostState,\r\n  GameInfoState,\r\n  CarState,\r\n  GameState,\r\n} from \"../GameState\";\r\n\r\n// These are now imported from GameState to not duplicate classes\r\n// class Vector3 {\r\n//   x: any;\r\n//   y: any;\r\n//   z: any;\r\n//   constructor(flat: any) {\r\n//     this.x = flat.x();\r\n//     this.y = flat.y();\r\n//     this.z = flat.z();\r\n//   }\r\n// }\r\n\r\n// class Rotator {\r\n//   pitch: any;\r\n//   yaw: any;\r\n//   roll: any;\r\n//   constructor(flat: any) {\r\n//     this.pitch = flat.pitch();\r\n//     this.yaw = flat.yaw();\r\n//     this.roll = flat.roll();\r\n//   }\r\n// }\r\n\r\n// class Physics {\r\n//   location: Vector3;\r\n//   rotation: any;\r\n//   velocity: any;\r\n//   angularVelocity: any;\r\n//   constructor(flat: any) {\r\n//     this.location = new Vector3(flat.location());\r\n//     this.rotation = flat.rotation() ? new Rotator(flat.rotation()) : null;\r\n//     this.velocity = new Vector3(flat.velocity());\r\n//     this.angularVelocity = new Vector3(flat.angularVelocity());\r\n//   }\r\n// }\r\n\r\nclass Touch {\r\n  playerName: any;\r\n  gameSeconds: any;\r\n  location: any;\r\n  normal: any;\r\n  team: any;\r\n  playerIndex: any;\r\n  constructor(flat: any) {\r\n    this.playerName = flat.playerName();\r\n    this.gameSeconds = flat.gameSeconds();\r\n    this.location = new Vector3().fromFlat(flat.location());\r\n    this.normal = new Vector3().fromFlat(flat.normal());\r\n    this.team = flat.team();\r\n    this.playerIndex = flat.playerIndex();\r\n  }\r\n}\r\n\r\nclass DropShotBallInfo {\r\n  absorbedForce: any;\r\n  damageIndex: any;\r\n  forceAccumRecent: any;\r\n  constructor(flat: any) {\r\n    this.absorbedForce = flat.absorbedForce();\r\n    this.damageIndex = flat.damageIndex();\r\n    this.forceAccumRecent = flat.forceAccumRecent();\r\n  }\r\n}\r\n\r\nclass BallInfo {\r\n  physics: any;\r\n  latestTouch: any;\r\n  dropShotInfo: any;\r\n  constructor(flat: any) {\r\n    this.physics = new Physics().fromFlat(flat.physics());\r\n    this.latestTouch = flat.latestTouch()\r\n      ? new Touch(flat.latestTouch())\r\n      : null;\r\n    this.dropShotInfo = new DropShotBallInfo(flat.dropShotInfo());\r\n  }\r\n}\r\n\r\nclass GameInfo {\r\n  secondsElapsed: any;\r\n  gameTimeRemaining: any;\r\n  isOvertime: any;\r\n  isRoundActive: any;\r\n  isKickoffPause: any;\r\n  isMatchEnded: any;\r\n  worldGravityZ: any;\r\n  gameSpeed: any;\r\n  frameNum: any;\r\n  constructor(flat: any) {\r\n    this.secondsElapsed = flat.secondsElapsed();\r\n    this.gameTimeRemaining = flat.gameTimeRemaining();\r\n    this.isOvertime = flat.isOvertime();\r\n    this.isRoundActive = flat.isRoundActive();\r\n    this.isKickoffPause = flat.isKickoffPause();\r\n    this.isMatchEnded = flat.isMatchEnded();\r\n    this.worldGravityZ = flat.worldGravityZ();\r\n    this.gameSpeed = flat.gameSpeed();\r\n    this.frameNum = flat.frameNum();\r\n  }\r\n}\r\n\r\nclass ScoreInfo {\r\n  score: any;\r\n  goals: any;\r\n  ownGoals: any;\r\n  assists: any;\r\n  saves: any;\r\n  shots: any;\r\n  demolitions: any;\r\n  constructor(flat: any) {\r\n    this.score = flat.score();\r\n    this.goals = flat.goals();\r\n    this.ownGoals = flat.ownGoals();\r\n    this.assists = flat.assists();\r\n    this.saves = flat.saves();\r\n    this.shots = flat.shots();\r\n    this.demolitions = flat.demolitions();\r\n  }\r\n}\r\n\r\nclass PlayerInfo {\r\n  physics: Physics;\r\n  scoreInfo: ScoreInfo;\r\n  isDemolished: any;\r\n  hasWheelContact: any;\r\n  isSupersonic: any;\r\n  isBot: any;\r\n  jumped: any;\r\n  doubleJumped: any;\r\n  name: any;\r\n  boost: any;\r\n  team: any;\r\n  constructor(flat: any) {\r\n    this.physics = new Physics().fromFlat(flat.physics());\r\n    this.scoreInfo = new ScoreInfo(flat.scoreInfo());\r\n    this.isDemolished = flat.isDemolished();\r\n    this.hasWheelContact = flat.hasWheelContact();\r\n    this.isSupersonic = flat.isSupersonic();\r\n    this.isBot = flat.isBot();\r\n    this.jumped = flat.jumped();\r\n    this.doubleJumped = flat.doubleJumped();\r\n    this.name = flat.name();\r\n    this.boost = flat.boost();\r\n    this.team = flat.team();\r\n  }\r\n}\r\n\r\nclass BoostPadState {\r\n  isActive: any;\r\n  timer: any;\r\n  constructor(flat: any) {\r\n    this.isActive = flat.isActive();\r\n    this.timer = flat.timer();\r\n  }\r\n}\r\n\r\nclass TeamInfo {\r\n  teamIndex: any;\r\n  score: any;\r\n  constructor(flat: any) {\r\n    this.teamIndex = flat.teamIndex();\r\n    this.score = flat.score();\r\n  }\r\n}\r\n\r\nclass DropshotTile {\r\n  tileState: any;\r\n  constructor(flat: any) {\r\n    this.tileState = flat.tileState();\r\n  }\r\n}\r\n\r\nclass GameTickPacket {\r\n  players: PlayerInfo[];\r\n  boostPadStates: BoostPadState[];\r\n  ball: BallInfo | null;\r\n  gameInfo: GameInfo | null;\r\n  tileInformation: DropshotTile[];\r\n  teams: TeamInfo[];\r\n  constructor(flat: any) {\r\n    this.players = [];\r\n    for (let p = 0; p < flat.playersLength(); p++) {\r\n      this.players.push(new PlayerInfo(flat.players(p)));\r\n    }\r\n    this.boostPadStates = [];\r\n    for (let b = 0; b < flat.boostPadStatesLength(); b++) {\r\n      this.boostPadStates.push(new BoostPadState(flat.boostPadStates(b)));\r\n    }\r\n    this.ball = flat.ball() ? new BallInfo(flat.ball()) : null;\r\n    this.gameInfo = flat.gameInfo()\r\n      ? new GameInfo(flat.gameInfo(flat.gameInfo()))\r\n      : null;\r\n    this.tileInformation = [];\r\n    for (let t = 0; t < flat.tileInformationLength(); t++) {\r\n      this.tileInformation.push(new DropshotTile(flat.tileInformation(t)));\r\n    }\r\n    this.teams = [];\r\n    for (let t = 0; t < flat.teamsLength(); t++) {\r\n      this.teams.push(new TeamInfo(flat.teams(t)));\r\n    }\r\n  }\r\n}\r\n\r\nclass PredictionSlice {\r\n  gameSeconds: any;\r\n  physics: Physics;\r\n  constructor(flat: any) {\r\n    this.gameSeconds = flat.gameSeconds();\r\n    this.physics = new Physics().fromFlat(flat.physics());\r\n  }\r\n}\r\n\r\nclass BallPrediction {\r\n  slices: PredictionSlice[];\r\n  constructor(flat: any) {\r\n    this.slices = [];\r\n    for (let s = 0; s < flat.slicesLength(); s++) {\r\n      this.slices.push(new PredictionSlice(flat.slices(s)));\r\n    }\r\n  }\r\n}\r\n\r\nclass BoostPad {\r\n  location: Vector3;\r\n  isFullBoost: any;\r\n  constructor(flat: any) {\r\n    this.location = new Vector3().fromFlat(flat.location());\r\n    this.isFullBoost = flat.isFullBoost();\r\n  }\r\n}\r\n\r\nclass GoalInfo {\r\n  teamNum: any;\r\n  location: Vector3;\r\n  direction: Vector3;\r\n  constructor(flat: any) {\r\n    this.teamNum = flat.teamNum();\r\n    this.location = new Vector3().fromFlat(flat.location());\r\n    this.direction = new Vector3().fromFlat(flat.direction());\r\n  }\r\n}\r\n\r\nclass FieldInfo {\r\n  boostPads: BoostPad[];\r\n  goals: GoalInfo[];\r\n  constructor(flat: any) {\r\n    this.boostPads = [];\r\n    for (let b = 0; b < flat.boostPadsLength(); b++) {\r\n      this.boostPads.push(new BoostPad(flat.boostPads(b)));\r\n    }\r\n    this.goals = [];\r\n    for (let g = 0; g < flat.goalsLength(); g++) {\r\n      this.goals.push(new GoalInfo(flat.goals(g)));\r\n    }\r\n  }\r\n}\r\n\r\nclass RLBotPlayer {}\r\n\r\nclass HumanPlayer {}\r\n\r\nclass PsyonixBotPlayer {\r\n  botSkill: number;\r\n  constructor(flat: any) {\r\n    this.botSkill = flat.botSkill();\r\n  }\r\n}\r\n\r\nclass PartyMemberBotPlayer {}\r\n\r\nclass PlayerClass extends PsyonixBotPlayer {\r\n  constructor(flat: any) {\r\n    super(flat);\r\n  }\r\n}\r\n\r\nclass LoadoutPaint {\r\n  carPaintId: number;\r\n  decalPaintId: number;\r\n  wheelsPaintId: number;\r\n  boostPaintId: number;\r\n  antennaPaintId: number;\r\n  hatPaintId: number;\r\n  trailsPaintId: number;\r\n  goalExplosionPaintId: number;\r\n  constructor(flat: any) {\r\n    this.carPaintId = flat.carPaintId();\r\n    this.decalPaintId = flat.decalPaintId();\r\n    this.wheelsPaintId = flat.wheelsPaintId();\r\n    this.boostPaintId = flat.boostPaintId();\r\n    this.antennaPaintId = flat.antennaPaintId();\r\n    this.hatPaintId = flat.hatPaintId();\r\n    this.trailsPaintId = flat.trailsPaintId();\r\n    this.goalExplosionPaintId = flat.goalExplosionPaintId();\r\n  }\r\n}\r\n\r\nclass Color {\r\n  a: number;\r\n  r: number;\r\n  g: number;\r\n  b: number;\r\n  constructor(flat: any) {\r\n    this.a = flat.a();\r\n    this.r = flat.b();\r\n    (this.g = flat.g()), (this.b = flat.b());\r\n  }\r\n}\r\n\r\nclass PlayerLoadout {\r\n  teamColorId: number;\r\n  customColorId: number;\r\n  carId: number;\r\n  decalId: number;\r\n  wheelsId: number;\r\n  boostId: number;\r\n  antennaId: number;\r\n  hatId: number;\r\n  paintFinishId: number;\r\n  customFinishId: number;\r\n  engineAudioId: number;\r\n  trailsId: number;\r\n  goalExplosionId: number;\r\n  loadoutPaint: LoadoutPaint;\r\n  primaryColorLookup: Color;\r\n  secondaryColorLookup: Color;\r\n  constructor(flat: any) {\r\n    this.teamColorId = flat.teamColorId();\r\n    this.customColorId = flat.customColorId();\r\n    this.carId = flat.carId();\r\n    this.decalId = flat.decalId();\r\n    this.wheelsId = flat.wheelsId();\r\n    this.boostId = flat.boostId();\r\n    this.antennaId = flat.antennaId();\r\n    this.hatId = flat.hatId();\r\n    this.paintFinishId = flat.paintFinishedId();\r\n    this.customFinishId = flat.customFinishId();\r\n    this.engineAudioId = flat.engineAudioId();\r\n    this.trailsId = flat.trailsId();\r\n    this.goalExplosionId = flat.goalExplosionId();\r\n    this.loadoutPaint = new LoadoutPaint(flat.loadoutPaint());\r\n    this.primaryColorLookup = new Color(flat.primaryColorLookup());\r\n    this.secondaryColorLookup = new Color(flat.secondaryColorLookup());\r\n  }\r\n}\r\n\r\nclass PlayerConfiguration {\r\n  variety: PlayerClass;\r\n  name: string;\r\n  team: number;\r\n  loadout: PlayerLoadout;\r\n  spawnId: number;\r\n  constructor(flat: any) {\r\n    this.variety = new PlayerClass(flat.variety());\r\n    this.name = flat.name();\r\n    this.team = flat.team();\r\n    this.loadout = new PlayerLoadout(flat.loadout());\r\n    this.spawnId = flat.spawnId();\r\n  }\r\n}\r\n\r\nenum GameMode {\r\n  Soccer,\r\n  Hoops,\r\n  Dropshot,\r\n  Hockey,\r\n  Rumble,\r\n  Heatseeker,\r\n}\r\n\r\nenum GameMap {\r\n  DFHStadium,\r\n  Mannfield,\r\n  ChampionsField,\r\n  UrbanCentral,\r\n  BeckwithPark,\r\n  UtopiaColiseum,\r\n  Wasteland,\r\n  NeoTokyo,\r\n  AquaDome,\r\n  StarbaseArc,\r\n  Farmstead,\r\n  SaltyShores,\r\n  DFHStadium_Stormy,\r\n  DFHStadium_Day,\r\n  Mannfield_Stormy,\r\n  Mannfield_Night,\r\n  ChampionsField_Day,\r\n  BeckwithPark_Stormy,\r\n  BeckwithPark_Midnight,\r\n  UrbanCentral_Night,\r\n  UrbanCentral_Dawn,\r\n  UtopiaColiseum_Dusk,\r\n  DFHStadium_Snowy,\r\n  Mannfield_Snowy,\r\n  UtopiaColiseum_Snowy,\r\n  Badlands,\r\n  Badlands_Night,\r\n  TokyoUnderpass,\r\n  Arctagon,\r\n  Pillars,\r\n  Cosmic,\r\n  DoubleGoal,\r\n  Octagon,\r\n  Underpass,\r\n  UtopiaRetro,\r\n  Hoops_DunkHouse,\r\n  DropShot_Core707,\r\n  ThrowbackStadium,\r\n  ForbiddenTemple,\r\n  RivalsArena,\r\n  Farmstead_Night,\r\n  SaltyShores_Night,\r\n}\r\n\r\nenum MatchLength {\r\n  Five_Minutes,\r\n  Ten_Minutes,\r\n  Twenty_Minutes,\r\n  Unlimited,\r\n}\r\n\r\nenum MaxScore {\r\n  Unlimited,\r\n  One_Goal,\r\n  Three_Goals,\r\n  Five_Goals,\r\n}\r\n\r\nenum OvertimeOption {\r\n  Unlimited,\r\n  Five_Max_First_Score,\r\n  Five_Max_Random_Team,\r\n}\r\n\r\nenum SeriesLengthOption {\r\n  Unlimited,\r\n  Three_Games,\r\n  Five_Games,\r\n  Seven_Games,\r\n}\r\n\r\nenum GameSpeedOption {\r\n  Default,\r\n  Slo_Mo,\r\n  Time_Warp,\r\n}\r\n\r\nenum BallMaxSpeedOption {\r\n  Default,\r\n  Slow,\r\n  Fast,\r\n  Super_Fast,\r\n}\r\n\r\nenum BallTypeOption {\r\n  Default,\r\n  Cube,\r\n  Puck,\r\n  Basketball,\r\n}\r\n\r\nenum BallWeightOption {\r\n  Default,\r\n  Light,\r\n  Heavy,\r\n  Super_Light,\r\n}\r\n\r\nenum BallSizeOption {\r\n  Default,\r\n  Small,\r\n  Large,\r\n  Gigantic,\r\n}\r\n\r\nenum BallBouncinessOption {\r\n  Default,\r\n  Low,\r\n  High,\r\n  Super_High,\r\n}\r\n\r\nenum BoostOption {\r\n  Normal_Boost,\r\n  Unlimited_Boost,\r\n  Slow_Recharge,\r\n  Rapid_Recharge,\r\n  No_Boost,\r\n}\r\n\r\nenum RumbleOption {\r\n  No_Rumble, // Cannot be named None because that breaks Python.\r\n  Default,\r\n  Slow,\r\n  Civilized,\r\n  Destruction_Derby,\r\n  Spring_Loaded,\r\n  Spikes_Only,\r\n  Spike_Rush,\r\n}\r\n\r\nenum BoostStrengthOption {\r\n  One,\r\n  OneAndAHalf,\r\n  Two,\r\n  Ten,\r\n}\r\n\r\nenum GravityOption {\r\n  Default,\r\n  Low,\r\n  High,\r\n  Super_High,\r\n}\r\n\r\nenum DemolishOption {\r\n  Default,\r\n  Disabled,\r\n  Friendly_Fire,\r\n  On_Contact,\r\n  On_Contact_FF,\r\n}\r\n\r\nenum RespawnTimeOption {\r\n  Three_Seconds,\r\n  Two_Seconds,\r\n  One_Seconds,\r\n  Disable_Goal_Reset,\r\n}\r\n\r\nclass MutatorSettings {\r\n  matchLength: MatchLength;\r\n  maxScore: MaxScore;\r\n  overtimeOption: OvertimeOption;\r\n  seriesLengthOption: SeriesLengthOption;\r\n  gameSpeedOption: GameSpeedOption;\r\n  ballMaxSpeedOption: BallMaxSpeedOption;\r\n  ballTypeOption: BallTypeOption;\r\n  ballWeightOption: BallWeightOption;\r\n  ballSizeOption: BallSizeOption;\r\n  ballBouncinessOption: BallBouncinessOption;\r\n  boostOption: BoostOption;\r\n  rumbleOption: RumbleOption;\r\n  boostStrengthOption: BoostStrengthOption;\r\n  gravityOption: GravityOption;\r\n  demolishOption: DemolishOption;\r\n  respawnTimeOption: RespawnTimeOption;\r\n  constructor(flat: any) {\r\n    this.matchLength = flat.matchLength();\r\n    this.maxScore = flat.maxScore();\r\n    this.overtimeOption = flat.overtimeOption();\r\n    this.seriesLengthOption = flat.seriesLengthOption();\r\n    this.gameSpeedOption = flat.gameSpeedOption();\r\n    this.ballMaxSpeedOption = flat.ballMaxSpeedOption();\r\n    this.ballTypeOption = flat.ballTypeOption();\r\n    this.ballWeightOption = flat.ballWeightOption();\r\n    this.ballSizeOption = flat.ballSizeOption();\r\n    this.ballBouncinessOption = flat.ballBouncinessOption();\r\n    this.boostOption = flat.boostOption();\r\n    this.rumbleOption = flat.rumbleOption();\r\n    this.boostStrengthOption = flat.boostStrengthOption();\r\n    this.gravityOption = flat.gravityOption();\r\n    this.demolishOption = flat.demolishOption();\r\n    this.respawnTimeOption = flat.respawnTimeOption();\r\n  }\r\n}\r\n\r\nenum ExistingMatchBehavior {\r\n  /// Restart the match if any match settings differ. This is the default because old RLBot always worked this way.\r\n  Restart_If_Different,\r\n\r\n  /// Always restart the match, even if config is identical\r\n  Restart,\r\n\r\n  /// Never restart an existing match, just try to remove or spawn cars to match the configuration.\r\n  /// If we are not in the middle of a match, a match will be started. Handy for LAN matches.\r\n  Continue_And_Spawn,\r\n}\r\n\r\nclass MatchSettings {\r\n  playerConfigurations: PlayerConfiguration[];\r\n  gameMode: GameMode;\r\n  gameMap: GameMap;\r\n  skipReplays: boolean;\r\n  instantStart: boolean;\r\n  mutatorSettings: MutatorSettings;\r\n  existingMatchBehavior: ExistingMatchBehavior;\r\n  enableLockstep: boolean;\r\n  enableRendering: boolean;\r\n  enableStateSetting: boolean;\r\n  autoSaveReplay: boolean;\r\n  constructor(flat: any) {\r\n    this.playerConfigurations = [];\r\n    for (let pc of flat.playerConfigurations()) {\r\n      this.playerConfigurations.push(new PlayerConfiguration(pc));\r\n    }\r\n    this.gameMode = flat.gameMode();\r\n    this.gameMap = flat.gameMap();\r\n    this.skipReplays = flat.skipReplays();\r\n    this.instantStart = flat.instantStart();\r\n    this.mutatorSettings = new MutatorSettings(flat.mutatorSettings());\r\n    this.existingMatchBehavior = flat.existingMatchBehavior();\r\n    this.enableLockstep = flat.enableLockstep();\r\n    this.enableRendering = flat.enableRendering();\r\n    this.enableStateSetting = flat.enableStateSetting();\r\n    this.autoSaveReplay = flat.autoSaveReplay();\r\n  }\r\n}\r\n\r\nenum QuickChatSelection {\r\n  Information_IGotIt = 0,\r\n  Information_NeedBoost = 1,\r\n  Information_TakeTheShot = 2,\r\n  Information_Defending = 3,\r\n  Information_GoForIt = 4,\r\n  Information_Centering = 5,\r\n  Information_AllYours = 6,\r\n  Information_InPosition = 7,\r\n  Information_Incoming = 8,\r\n  Compliments_NiceShot = 9,\r\n  Compliments_GreatPass = 10,\r\n  Compliments_Thanks = 11,\r\n  Compliments_WhatASave = 12,\r\n  Compliments_NiceOne = 13,\r\n  Compliments_WhatAPlay = 14,\r\n  Compliments_GreatClear = 15,\r\n  Compliments_NiceBlock = 16,\r\n  Reactions_OMG = 17,\r\n  Reactions_Noooo = 18,\r\n  Reactions_Wow = 19,\r\n  Reactions_CloseOne = 20,\r\n  Reactions_NoWay = 21,\r\n  Reactions_HolyCow = 22,\r\n  Reactions_Whew = 23,\r\n  Reactions_Siiiick = 24,\r\n  Reactions_Calculated = 25,\r\n  Reactions_Savage = 26,\r\n  Reactions_Okay = 27,\r\n  Apologies_Cursing = 28,\r\n  Apologies_NoProblem = 29,\r\n  Apologies_Whoops = 30,\r\n  Apologies_Sorry = 31,\r\n  Apologies_MyBad = 32,\r\n  Apologies_Oops = 33,\r\n  Apologies_MyFault = 34,\r\n  PostGame_Gg = 35,\r\n  PostGame_WellPlayed = 36,\r\n  PostGame_ThatWasFun = 37,\r\n  PostGame_Rematch = 38,\r\n  PostGame_OneMoreGame = 39,\r\n  PostGame_WhatAGame = 40,\r\n  PostGame_NiceMoves = 41,\r\n  PostGame_EverybodyDance = 42,\r\n  /// Custom text chats made by bot makers\r\n  MaxPysonixQuickChatPresets = 43,\r\n  /// Waste of CPU cycles\r\n  Custom_Toxic_WasteCPU = 44,\r\n  /// Git gud*\r\n  Custom_Toxic_GitGut = 45,\r\n  /// De-Allocate Yourself\r\n  Custom_Toxic_DeAlloc = 46,\r\n  /// 404: Your skill not found\r\n  Custom_Toxic_404NoSkill = 47,\r\n  /// Get a virus\r\n  Custom_Toxic_CatchVirus = 48,\r\n  /// Passing!\r\n  Custom_Useful_Passing = 49,\r\n  /// Faking!\r\n  Custom_Useful_Faking = 50,\r\n  /// Demoing!\r\n  Custom_Useful_Demoing = 51,\r\n  /// BOOPING\r\n  Custom_Useful_Bumping = 52,\r\n  /// The chances of that was 47525 to 1*\r\n  Custom_Compliments_TinyChances = 53,\r\n  /// Who upped your skill level?\r\n  Custom_Compliments_SkillLevel = 54,\r\n  /// Your programmer should be proud\r\n  Custom_Compliments_proud = 55,\r\n  /// You're the GC of Bots\r\n  Custom_Compliments_GC = 56,\r\n  /// Are you <Insert Pro>Bot? *\r\n  Custom_Compliments_Pro = 57,\r\n  /// Lag\r\n  Custom_Excuses_Lag = 58,\r\n  /// Ghost inputs\r\n  Custom_Excuses_GhostInputs = 59,\r\n  /// RIGGED\r\n  Custom_Excuses_Rigged = 60,\r\n  /// Mafia plays!\r\n  Custom_Toxic_MafiaPlays = 61,\r\n  /// Yeet!\r\n  Custom_Exclamation_Yeet = 62,\r\n}\r\n\r\nclass QuickChat {\r\n  quickChatSelection: QuickChatSelection;\r\n  playerIndex: number;\r\n  teamOnly: boolean;\r\n  messageIndex: number;\r\n  timeStamp: number;\r\n  constructor(flat: any) {\r\n    this.quickChatSelection = flat.quickChatSelection();\r\n    this.playerIndex = flat.playerIndex();\r\n    this.teamOnly = flat.teamOnly();\r\n    this.messageIndex = flat.messageIndex();\r\n    this.timeStamp = flat.timeStamp();\r\n  }\r\n}\r\n\r\nexport {\r\n  // Vector3,\r\n  // Rotator,\r\n  // Physics,\r\n  Touch,\r\n  BallInfo,\r\n  GameInfo,\r\n  PlayerInfo,\r\n  BoostPadState,\r\n  TeamInfo,\r\n  GameTickPacket,\r\n  BallPrediction,\r\n  BoostPad,\r\n  GoalInfo,\r\n  FieldInfo,\r\n  MatchSettings,\r\n  PlayerConfiguration,\r\n  GameMode,\r\n  GameMap,\r\n  MutatorSettings,\r\n  ExistingMatchBehavior,\r\n  MatchLength,\r\n  MaxScore,\r\n  OvertimeOption,\r\n  SeriesLengthOption,\r\n  GameSpeedOption,\r\n  BallMaxSpeedOption,\r\n  BallTypeOption,\r\n  BallWeightOption,\r\n  BallSizeOption,\r\n  BallBouncinessOption,\r\n  BoostOption,\r\n  RumbleOption,\r\n  BoostStrengthOption,\r\n  GravityOption,\r\n  DemolishOption,\r\n  RespawnTimeOption,\r\n  PlayerClass,\r\n  PlayerLoadout,\r\n  // Color,\r\n  LoadoutPaint,\r\n  QuickChat,\r\n  QuickChatSelection,\r\n};\r\n", "// Credit to SuperVK for big parts of this file\r\n\r\nimport { flatbuffers } from \"flatbuffers\";\r\nimport { rlbot } from \"./flat/rlbot_generated\";\r\nconst flat = rlbot.flat;\r\nconst {\r\n  RotatorPartial,\r\n  DesiredPhysics,\r\n  DesiredBallState,\r\n  DesiredCarState,\r\n  DesiredBoostState,\r\n  DesiredGameInfoState,\r\n  DesiredGameState,\r\n  Float,\r\n  Vector3Partial,\r\n} = flat;\r\n\r\nclass Vector3 {\r\n  x: number;\r\n  y: number;\r\n  z: number;\r\n  constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.z = z;\r\n  }\r\n  fromFlat(flat: any) {\r\n    this.x = flat.x();\r\n    this.y = flat.y();\r\n    this.z = flat.z();\r\n    return this;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    if (this.x == null && this.y == null && this.z == null) return null;\r\n    return flat.Vector3.createVector3(builder, this.x, this.y, this.z);\r\n  }\r\n  convertToFlatPartial(builder: flatbuffers.Builder) {\r\n    if (this.x == null && this.y == null && this.z == null) return null;\r\n    Vector3Partial.startVector3Partial(builder);\r\n    if (this.x != null)\r\n      Vector3Partial.addX(builder, Float.createFloat(builder, this.x));\r\n    if (this.y != null)\r\n      Vector3Partial.addY(builder, Float.createFloat(builder, this.y));\r\n    if (this.z != null)\r\n      Vector3Partial.addZ(builder, Float.createFloat(builder, this.z));\r\n    return Vector3Partial.endVector3Partial(builder);\r\n  }\r\n}\r\n\r\nclass Rotator {\r\n  pitch: number;\r\n  yaw: number;\r\n  roll: number;\r\n  constructor(pitch: number = 0, yaw: number = 0, roll: number = 0) {\r\n    this.pitch = pitch;\r\n    this.yaw = yaw;\r\n    this.roll = roll;\r\n  }\r\n  fromFlat(flat: any) {\r\n    if (flat == null) return this;\r\n    this.pitch = flat.pitch();\r\n    this.yaw = flat.yaw();\r\n    this.roll = flat.roll();\r\n    return this;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    if (this.pitch == null && this.yaw == null && this.roll == null)\r\n      return null;\r\n    RotatorPartial.startRotatorPartial(builder);\r\n    if (this.pitch != null)\r\n      RotatorPartial.addPitch(builder, Float.createFloat(builder, this.pitch));\r\n    if (this.yaw != null)\r\n      RotatorPartial.addYaw(builder, Float.createFloat(builder, this.yaw));\r\n    if (this.roll != null)\r\n      RotatorPartial.addRoll(builder, Float.createFloat(builder, this.roll));\r\n    return RotatorPartial.endRotatorPartial(builder);\r\n  }\r\n}\r\n\r\nclass Physics {\r\n  location: Vector3;\r\n  rotation: Rotator;\r\n  velocity: Vector3;\r\n  angularVelocity: Vector3;\r\n  constructor(\r\n    location: Vector3 = new Vector3(),\r\n    rotation: Rotator = new Rotator(),\r\n    velocity: Vector3 = new Vector3(),\r\n    angularVelocity: Vector3 = new Vector3()\r\n  ) {\r\n    this.location = location;\r\n    this.rotation = rotation;\r\n    this.velocity = velocity;\r\n    this.angularVelocity = angularVelocity;\r\n  }\r\n  fromFlat(flat: any) {\r\n    this.location = new Vector3().fromFlat(flat.location());\r\n    this.rotation = new Rotator().fromFlat(flat.rotation());\r\n    this.velocity = new Vector3().fromFlat(flat.velocity());\r\n    this.angularVelocity = new Vector3().fromFlat(flat.angularVelocity());\r\n    return this;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    let locationFlat = this.location\r\n      ? this.location.convertToFlatPartial(builder)\r\n      : null;\r\n    let rotationFlat = this.rotation\r\n      ? this.rotation.convertToFlat(builder)\r\n      : null;\r\n    let velocityFlat = this.velocity\r\n      ? this.velocity.convertToFlatPartial(builder)\r\n      : null;\r\n    let angularVelocityFlat = this.angularVelocity\r\n      ? this.angularVelocity.convertToFlatPartial(builder)\r\n      : null;\r\n    if (\r\n      locationFlat == null &&\r\n      rotationFlat == null &&\r\n      velocityFlat == null &&\r\n      angularVelocityFlat == null\r\n    )\r\n      return null;\r\n    DesiredPhysics.startDesiredPhysics(builder);\r\n    if (locationFlat != null) DesiredPhysics.addLocation(builder, locationFlat);\r\n    if (rotationFlat != null) DesiredPhysics.addRotation(builder, rotationFlat);\r\n    if (velocityFlat != null) DesiredPhysics.addVelocity(builder, velocityFlat);\r\n    if (angularVelocityFlat != null)\r\n      DesiredPhysics.addAngularVelocity(builder, angularVelocityFlat);\r\n    return DesiredPhysics.endDesiredPhysics(builder);\r\n  }\r\n}\r\n\r\nclass BallState {\r\n  physics: Physics;\r\n  constructor(physics: Physics) {\r\n    this.physics = physics;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    let physicsFlat = this.physics ? this.physics.convertToFlat(builder) : null;\r\n    if (physicsFlat == null) return null;\r\n    else {\r\n      DesiredBallState.startDesiredBallState(builder);\r\n      DesiredBallState.addPhysics(builder, physicsFlat);\r\n      return DesiredBallState.endDesiredBallState(builder);\r\n    }\r\n  }\r\n}\r\n\r\nclass CarState {\r\n  physics: Physics;\r\n  boostAmount: number;\r\n  jumped: boolean;\r\n  doubleJumped: boolean;\r\n  constructor(\r\n    physics: Physics,\r\n    boostAmount: number,\r\n    jumped: boolean,\r\n    doubleJumped: boolean\r\n  ) {\r\n    this.physics = physics;\r\n    this.boostAmount = boostAmount;\r\n    this.jumped = jumped;\r\n    this.doubleJumped = doubleJumped;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    let physicsFlat = this.physics ? this.physics.convertToFlat(builder) : null;\r\n    DesiredCarState.startDesiredCarState(builder);\r\n    if (physicsFlat != null) DesiredCarState.addPhysics(builder, physicsFlat);\r\n    if (this.boostAmount != null)\r\n      DesiredCarState.addBoostAmount(builder, this.boostAmount);\r\n    if (this.jumped != null)\r\n      DesiredCarState.addJumped(builder, Number(this.jumped));\r\n    if (this.doubleJumped != null)\r\n      DesiredCarState.addDoubleJumped(builder, Number(this.doubleJumped));\r\n    return DesiredCarState.endDesiredCarState(builder);\r\n  }\r\n}\r\n\r\nclass BoostState {\r\n  respawnTime: number;\r\n  constructor(respawnTime: number) {\r\n    this.respawnTime = respawnTime;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    DesiredBoostState.startDesiredBoostState(builder);\r\n    if (this.respawnTime != null)\r\n      DesiredBoostState.addRespawnTime(builder, this.respawnTime);\r\n    return DesiredBoostState.endDesiredBoostState(builder);\r\n  }\r\n}\r\n\r\nclass GameInfoState {\r\n  worldGravityZ: number;\r\n  gameSpeed: number;\r\n  constructor(worldGravityZ: number, gameSpeed: number) {\r\n    this.worldGravityZ = worldGravityZ;\r\n    this.gameSpeed = gameSpeed;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    DesiredGameInfoState.startDesiredGameInfoState(builder);\r\n    if (this.worldGravityZ != null)\r\n      DesiredGameInfoState.addWorldGravityZ(builder, this.worldGravityZ);\r\n    if (this.gameSpeed != null)\r\n      DesiredGameInfoState.addGameSpeed(builder, this.gameSpeed);\r\n    return DesiredGameInfoState.endDesiredGameInfoState(builder);\r\n  }\r\n}\r\n\r\nclass GameState {\r\n  ballState: BallState;\r\n  carStates: (CarState | any)[];\r\n  boostStates: (BoostState | any)[];\r\n  gameInfoState: GameInfoState;\r\n  constructor(\r\n    ballState: BallState,\r\n    carStates: (CarState | any)[],\r\n    boostStates: (BoostState | any)[],\r\n    gameInfoState: GameInfoState\r\n  ) {\r\n    this.ballState = ballState;\r\n    this.carStates = carStates;\r\n    this.boostStates = boostStates;\r\n    this.gameInfoState = gameInfoState;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    if (builder == null) builder = new flatbuffers.Builder(0);\r\n    let ballStateFlat = this.ballState\r\n      ? this.ballState.convertToFlat(builder)\r\n      : null;\r\n    let carStates: any = this.carStates ? [] : null;\r\n    if (carStates != null) {\r\n      for (let carState of this.carStates) {\r\n        carStates.push(carState ? carState.convertToFlat(builder) : null);\r\n      }\r\n    }\r\n    let carStatesFlat = carStates\r\n      ? DesiredGameState.createCarStatesVector(builder, carStates)\r\n      : null;\r\n    let boostStates: any = this.boostStates ? [] : null;\r\n    if (boostStates != null) {\r\n      for (let boostState of this.boostStates) {\r\n        boostStates.push(boostState ? boostState.convertToFlat(builder) : null);\r\n      }\r\n    }\r\n    let boostStatesFlat = boostStates\r\n      ? DesiredGameState.createBoostStatesVector(builder, boostStates)\r\n      : null;\r\n    let gameInfoStateFlat = this.gameInfoState\r\n      ? this.gameInfoState.convertToFlat(builder)\r\n      : null;\r\n\r\n    DesiredGameState.startDesiredGameState(builder);\r\n    if (ballStateFlat != null)\r\n      DesiredGameState.addBallState(builder, ballStateFlat);\r\n    if (carStatesFlat != null)\r\n      DesiredGameState.addCarStates(builder, carStatesFlat);\r\n    if (boostStatesFlat != null)\r\n      DesiredGameState.addBoostStates(builder, boostStatesFlat);\r\n    if (gameInfoStateFlat != null)\r\n      DesiredGameState.addGameInfoState(builder, gameInfoStateFlat);\r\n    return DesiredGameState.endDesiredGameState(builder);\r\n  }\r\n}\r\n\r\nexport {\r\n  Vector3,\r\n  Rotator,\r\n  Physics,\r\n  BallState,\r\n  BoostState,\r\n  GameInfoState,\r\n  CarState,\r\n  GameState,\r\n};\r\n", "// Credit to SuperVK for big parts of this file\r\n\r\nimport * as crypto from \"crypto\";\r\nimport { flatbuffers } from \"flatbuffers\";\r\nimport { BotClient } from \"./BotClient\";\r\nimport * as utils from \"./utils\";\r\nimport { rlbot } from \"./flat/rlbot_generated\";\r\nimport { Vector3 } from \"./GameState\";\r\nconst flat = rlbot.flat;\r\nconst { RenderMessage, RenderType, RenderGroup } = flat;\r\nconst defaultGroupId = \"default\";\r\nconst maxInt = 1337;\r\n\r\nclass Color {\r\n  alpha: number;\r\n  red: number;\r\n  green: number;\r\n  blue: number;\r\n  constructor(alpha: number, red: number, green: number, blue: number) {\r\n    this.alpha = alpha;\r\n    this.red = red;\r\n    this.green = green;\r\n    this.blue = blue;\r\n  }\r\n  convertToFlat(builder: flatbuffers.Builder) {\r\n    flat.Color.startColor(builder);\r\n    flat.Color.addA(builder, this.alpha);\r\n    flat.Color.addR(builder, this.red);\r\n    flat.Color.addG(builder, this.green);\r\n    flat.Color.addB(builder, this.blue);\r\n    return flat.Color.endColor(builder);\r\n  }\r\n}\r\n\r\nclass RenderManager {\r\n  client: BotClient;\r\n  builder: flatbuffers.Builder | null;\r\n  index: number;\r\n  Color: typeof Color;\r\n  renderList: flatbuffers.Offset[];\r\n  groupID: string;\r\n  constructor(botClient: BotClient) {\r\n    this.client = botClient;\r\n    this.builder = null;\r\n    this.index = this.client.botIndex;\r\n    this.Color = Color;\r\n    this.renderList = [];\r\n    this.groupID = \"\";\r\n  }\r\n  beginRendering(groupID: string) {\r\n    this.builder = new flatbuffers.Builder(0);\r\n    this.renderList = [];\r\n    if (groupID) this.groupID = groupID;\r\n  }\r\n\r\n  endRendering() {\r\n    if (this.groupID == undefined) this.groupID = \"default\";\r\n    const hash = crypto.createHash(\"sha256\");\r\n    hash.update(this.groupID + this.client.botIndex);\r\n    let groupIDHashed = parseInt(hash.digest(\"hex\"), 16) % maxInt;\r\n\r\n    if (this.builder == null) return;\r\n\r\n    let messages = RenderGroup.createRenderMessagesVector(\r\n      this.builder,\r\n      this.renderList\r\n    );\r\n\r\n    RenderGroup.startRenderGroup(this.builder);\r\n    RenderGroup.addId(this.builder, groupIDHashed);\r\n    RenderGroup.addRenderMessages(this.builder, messages);\r\n\r\n    let result = RenderGroup.endRenderGroup(this.builder);\r\n\r\n    this.builder.finish(result);\r\n\r\n    let buf = this.builder.asUint8Array();\r\n\r\n    if (this.client.ws == null) return;\r\n    this.client.ws.write(utils.encodeFlat(8, buf));\r\n  }\r\n  drawString2D(\r\n    x: number,\r\n    y: number,\r\n    scaleX: number,\r\n    scaleY: number,\r\n    text: string,\r\n    color: Color\r\n  ) {\r\n    if (this.builder == null) return;\r\n    let textFlat = this.builder.createString(text);\r\n    let colorFlat = color.convertToFlat(this.builder);\r\n\r\n    RenderMessage.startRenderMessage(this.builder);\r\n    RenderMessage.addRenderType(this.builder, RenderType.DrawString2D);\r\n    RenderMessage.addColor(this.builder, colorFlat);\r\n    RenderMessage.addStart(\r\n      this.builder,\r\n      flat.Vector3.createVector3(this.builder, x, y, 0)\r\n    );\r\n    RenderMessage.addScaleX(this.builder, scaleX);\r\n    RenderMessage.addScaleY(this.builder, scaleY);\r\n    RenderMessage.addText(this.builder, textFlat);\r\n\r\n    this.renderList.push(RenderMessage.endRenderMessage(this.builder));\r\n  }\r\n  drawString3D(\r\n    vector: Vector3,\r\n    scaleX: number,\r\n    scaleY: number,\r\n    text: string,\r\n    color: Color\r\n  ) {\r\n    if (this.builder == null) return;\r\n    let textFlat = this.builder.createString(text);\r\n    let colorFlat = color.convertToFlat(this.builder);\r\n\r\n    RenderMessage.startRenderMessage(this.builder);\r\n    RenderMessage.addRenderType(this.builder, RenderType.DrawString3D);\r\n    RenderMessage.addColor(this.builder, colorFlat);\r\n    RenderMessage.addStart(\r\n      this.builder,\r\n      vector.convertToFlat(this.builder) ?? 0\r\n    );\r\n    RenderMessage.addScaleX(this.builder, scaleX);\r\n    RenderMessage.addScaleY(this.builder, scaleY);\r\n    RenderMessage.addText(this.builder, textFlat);\r\n\r\n    this.renderList.push(RenderMessage.endRenderMessage(this.builder));\r\n  }\r\n  drawLine2D_3D(x: number, y: number, end: Vector3, color: Color) {\r\n    if (this.builder == null) return;\r\n    let colorFlat = color.convertToFlat(this.builder);\r\n    RenderMessage.startRenderMessage(this.builder);\r\n    RenderMessage.addRenderType(this.builder, RenderType.DrawLine2D_3D);\r\n    RenderMessage.addStart(\r\n      this.builder,\r\n      flat.Vector3.createVector3(this.builder, x, y, 0)\r\n    );\r\n    RenderMessage.addEnd(this.builder, end.convertToFlat(this.builder) ?? 0);\r\n    RenderMessage.addColor(this.builder, colorFlat ?? 0);\r\n    this.renderList.push(RenderMessage.endRenderMessage(this.builder));\r\n  }\r\n  drawLine2D(\r\n    startX: number,\r\n    startY: number,\r\n    endX: number,\r\n    endY: number,\r\n    color: Color\r\n  ) {\r\n    if (this.builder == null) return;\r\n    let colorFlat = color.convertToFlat(this.builder);\r\n    RenderMessage.startRenderMessage(this.builder);\r\n    RenderMessage.addRenderType(this.builder, RenderType.DrawLine2D);\r\n    RenderMessage.addStart(\r\n      this.builder,\r\n      new Vector3(startX, startY, 0).convertToFlat(this.builder) ?? 0\r\n    );\r\n    RenderMessage.addEnd(\r\n      this.builder,\r\n      new Vector3(endX, endY, 0).convertToFlat(this.builder) ?? 0\r\n    );\r\n    RenderMessage.addColor(this.builder, colorFlat);\r\n    this.renderList.push(RenderMessage.endRenderMessage(this.builder));\r\n  }\r\n  drawLine3D(start: Vector3, end: Vector3, color: Color) {\r\n    if (this.builder == null) return;\r\n    let colorFlat = color.convertToFlat(this.builder);\r\n    RenderMessage.startRenderMessage(this.builder);\r\n    RenderMessage.addRenderType(this.builder, RenderType.DrawLine3D);\r\n    RenderMessage.addStart(\r\n      this.builder,\r\n      start.convertToFlat(this.builder) ?? 0\r\n    );\r\n    RenderMessage.addEnd(this.builder, end.convertToFlat(this.builder) ?? 0);\r\n    RenderMessage.addColor(this.builder, colorFlat);\r\n    this.renderList.push(RenderMessage.endRenderMessage(this.builder));\r\n  }\r\n  drawRect2D(\r\n    x: number,\r\n    y: number,\r\n    width: number,\r\n    height: number,\r\n    // filled: boolean, Remove due to it being a legacy feature\r\n    color: Color\r\n  ) {\r\n    if (this.builder == null) return;\r\n    let colorFlat = color.convertToFlat(this.builder);\r\n    RenderMessage.startRenderMessage(this.builder);\r\n    RenderMessage.addRenderType(this.builder, RenderType.DrawRect2D);\r\n    RenderMessage.addStart(\r\n      this.builder,\r\n      flat.Vector3.createVector3(this.builder, x, y, 0)\r\n    );\r\n    RenderMessage.addScaleX(this.builder, width);\r\n    RenderMessage.addScaleY(this.builder, height);\r\n    // RenderMessage.addIsFilled(this.builder, filled);\r\n    RenderMessage.addColor(this.builder, colorFlat);\r\n    this.renderList.push(RenderMessage.endRenderMessage(this.builder));\r\n  }\r\n  drawRect3D(\r\n    vector: Vector3,\r\n    width: number,\r\n    height: number,\r\n    // filled: boolean, Remove due to it being a legacy feature\r\n    color: Color,\r\n    centered: Boolean\r\n  ) {\r\n    if (this.builder == null) return;\r\n    let colorFlat = color.convertToFlat(this.builder);\r\n    RenderMessage.startRenderMessage(this.builder);\r\n    RenderMessage.addRenderType(\r\n      this.builder,\r\n      centered ? RenderType.DrawCenteredRect3D : RenderType.DrawRect3D\r\n    );\r\n    RenderMessage.addStart(\r\n      this.builder,\r\n      vector.convertToFlat(this.builder) ?? 0\r\n    );\r\n    RenderMessage.addScaleX(this.builder, width);\r\n    RenderMessage.addScaleY(this.builder, height);\r\n    // RenderMessage.addIsFilled(this.builder, filled);\r\n    RenderMessage.addColor(this.builder, colorFlat);\r\n    this.renderList.push(RenderMessage.endRenderMessage(this.builder));\r\n  }\r\n\r\n  black() {\r\n    return new this.Color(255, 0, 0, 0);\r\n  }\r\n\r\n  white() {\r\n    return new this.Color(255, 255, 255, 255);\r\n  }\r\n\r\n  gray() {\r\n    return new this.Color(255, 128, 128, 128);\r\n  }\r\n\r\n  blue() {\r\n    return new this.Color(255, 0, 0, 255);\r\n  }\r\n\r\n  red() {\r\n    return new this.Color(255, 255, 0, 0);\r\n  }\r\n\r\n  green() {\r\n    return new this.Color(255, 0, 128, 0);\r\n  }\r\n\r\n  lime() {\r\n    return new this.Color(255, 0, 255, 0);\r\n  }\r\n\r\n  yellow() {\r\n    return new this.Color(255, 255, 255, 0);\r\n  }\r\n\r\n  orange() {\r\n    return new this.Color(255, 225, 128, 0);\r\n  }\r\n\r\n  cyan() {\r\n    return new this.Color(255, 0, 255, 255);\r\n  }\r\n\r\n  pink() {\r\n    return new this.Color(255, 255, 0, 255);\r\n  }\r\n\r\n  purple() {\r\n    return new this.Color(255, 128, 0, 128);\r\n  }\r\n\r\n  teal() {\r\n    return new this.Color(255, 0, 128, 128);\r\n  }\r\n}\r\n\r\nexport { RenderManager, Color };\r\n", "import \"colors\";\r\nimport * as Net from \"net\";\r\nimport { BotClient } from \"./BotClient\";\r\nimport * as utils from \"./utils\";\r\n\r\ninterface BotContainer {\r\n  [botIndex: string]: any;\r\n}\r\n\r\nclass BotManager {\r\n  ws: Net.Socket;\r\n  bots: BotContainer;\r\n  Bot: any;\r\n  agentPort: number;\r\n  agentIP: string;\r\n  logger: utils.Logger = new utils.Logger(\"Manager\");\r\n\r\n  constructor(BotClass: any, agentPort: number) {\r\n    this.Bot = BotClass;\r\n    this.bots = {};\r\n\r\n    this.agentPort = agentPort;\r\n    this.agentIP = \"localhost\";\r\n\r\n    const port = 23234;\r\n    const host = \"localhost\";\r\n\r\n    this.ws = new Net.Socket();\r\n\r\n    this.logger.log(\"Socket\", \"Connecting...\".yellow);\r\n    this.ws.connect({ port, host }, () => {\r\n      this.logger.log(\"Socket\", \"Connected\".green);\r\n      this.start();\r\n    });\r\n    this.ws.on(\"error\", () => {\r\n      this.logger.log(\r\n        \"Socket\",\r\n        \"Error when connecting to RLBot, make sure RLBot is running.\".red\r\n      );\r\n      process.exit(0);\r\n    });\r\n  }\r\n\r\n  private async start() {\r\n    let server = Net.createServer((socket) => {\r\n      socket.setEncoding(\"ascii\");\r\n      socket.on(\"data\", (data) => {\r\n        let message = data.toString().split(\"\\n\");\r\n        let type = message[0];\r\n        let index: string = message[1];\r\n        switch (type) {\r\n          case \"add\":\r\n            if (this.bots[index] != undefined) return;\r\n            this.bots[index] = new this.Bot(Number(index), this.ws);\r\n            this.bots[index].logger.enabled = false;\r\n\r\n            this.logger.log(\r\n              \"AgentConnection\",\r\n              (\"Added bot with index \" + index).green\r\n            );\r\n            break;\r\n\r\n          case \"remove\":\r\n            if (!this.bots[index]) return;\r\n            this.bots[index].kill();\r\n            delete this.bots[index];\r\n            this.logger.log(\r\n              \"AgentConnection\",\r\n              (\"Removed bot with index \" + index).red\r\n            );\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n    });\r\n\r\n    let logger = this.logger;\r\n\r\n    server.listen(this.agentPort, this.agentIP, function () {\r\n      logger.log(\"AgentConnection\", \"Listening to data from Agent\");\r\n\r\n      server.on(\"close\", function () {\r\n        logger.log(\"AgentConnection\", \"Connection closed\");\r\n      });\r\n\r\n      server.on(\"error\", function (error) {\r\n        logger.log(\"AgentConnection\", \"Error: \" + error);\r\n      });\r\n    });\r\n\r\n    server.on(\"error\", (e: any) => {\r\n      if (e.code == \"EADDRINUSE\") {\r\n        this.logger.log(\r\n          \"AgentConnection\",\r\n          \"Connection closed, port already in use\"\r\n        );\r\n        throw new Error(`Port is already in use: ${this.agentIP}`);\r\n      }\r\n    });\r\n  }\r\n}\r\nexport { BotManager };\r\n", "// Credit to SuperVK for big parts of this file\r\n\r\nexport default {\r\n  information: {\r\n    IGotIt: 0,\r\n    NeedBoost: 1,\r\n    TakeTheShot: 2,\r\n    Defending: 3,\r\n    GoForIt: 4,\r\n    Centering: 5,\r\n    AllYours: 6,\r\n    InPosition: 7,\r\n    Incoming: 8,\r\n    NiceShot: 9,\r\n    GreatPass: 10,\r\n    Thanks: 11,\r\n    WhatASave: 12,\r\n    NiceOne: 13,\r\n    WhatAPlay: 14,\r\n    GreatClear: 15,\r\n    NiceBlock: 16,\r\n  },\r\n  compliments: {\r\n    NiceShot: 9,\r\n    GreatPass: 10,\r\n    Thanks: 11,\r\n    WhatASave: 12,\r\n    NiceOne: 13,\r\n    WhatAPlay: 14,\r\n    GreatClear: 15,\r\n    NiceBlock: 16,\r\n  },\r\n  reactions: {\r\n    OMG: 17,\r\n    Noooo: 18,\r\n    Wow: 19,\r\n    CloseOne: 20,\r\n    NoWay: 21,\r\n    HolyCow: 22,\r\n    Whew: 23,\r\n    Siiiick: 24,\r\n    Calculated: 25,\r\n    Savage: 26,\r\n    Okay: 27,\r\n  },\r\n  apologies: {\r\n    Cursing: 28,\r\n    NoProblem: 29,\r\n    Whoops: 30,\r\n    Sorry: 31,\r\n    MyBad: 32,\r\n    Oops: 33,\r\n    MyFault: 34,\r\n  },\r\n  postGame: {\r\n    Gg: 35,\r\n    WellPlayed: 36,\r\n    ThatWasFun: 37,\r\n    Rematch: 38,\r\n    OneMoreGame: 39,\r\n    WhatAGame: 40,\r\n    NiceMoves: 41,\r\n    EverybodyDance: 42,\r\n  },\r\n  custom: {\r\n    /// Waste of CPU cycles\r\n    Toxic_WasteCPU: 44,\r\n    /// Git gud*\r\n    Toxic_GitGut: 45,\r\n    /// De-Allocate Yourself\r\n    Toxic_DeAlloc: 46,\r\n    /// 404: Your skill not found\r\n    Toxic_404NoSkill: 47,\r\n    /// Get a virus\r\n    Toxic_CatchVirus: 48,\r\n    /// Passing!\r\n    Useful_Passing: 49,\r\n    /// Faking!\r\n    Useful_Faking: 50,\r\n    /// Demoing!\r\n    Useful_Demoing: 51,\r\n    /// BOOPING\r\n    Useful_Bumping: 52,\r\n    /// The chances of that was 47525 to 1*\r\n    Compliments_TinyChances: 53,\r\n    /// Who upped your skill level?\r\n    Compliments_SkillLevel: 54,\r\n    /// Your programmer should be proud\r\n    Compliments_proud: 55,\r\n    /// You're the GC of Bots\r\n    Compliments_GC: 56,\r\n    /// Are you <Insert Pro>Bot? *\r\n    Compliments_Pro: 57,\r\n    /// Lag\r\n    Custom_Excuses_Lag: 58,\r\n    /// Ghost inputs\r\n    Custom_Excuses_GhostInputs: 59,\r\n    /// RIGGED\r\n    Custom_Excuses_Rigged: 60,\r\n    /// Mafia plays!\r\n    Custom_Toxic_MafiaPlays: 61,\r\n    /// Yeet!\r\n    Custom_Exclamation_Yeet: 62,\r\n  },\r\n};\r\n"],
  "mappings": "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",
  "names": ["module", "module", "module", "module", "module", "text", "options", "module", "module", "module", "module", "module", "stylize", "builder", "colors", "style", "sequencer", "map", "module", "module", "flatbuffers", "Color", "import_colors", "import_flatbuffers", "rlbot", "flat", "CollisionShape", "rlbot", "flat", "TileState", "rlbot", "flat", "RenderType", "rlbot", "flat", "QuickChatSelection", "rlbot", "flat", "PlayerClass", "rlbot", "flat", "GameMode", "rlbot", "flat", "GameMap", "rlbot", "flat", "MatchLength", "rlbot", "flat", "MaxScore", "rlbot", "flat", "OvertimeOption", "rlbot", "flat", "SeriesLengthOption", "rlbot", "flat", "GameSpeedOption", "rlbot", "flat", "BallMaxSpeedOption", "rlbot", "flat", "BallTypeOption", "rlbot", "flat", "BallWeightOption", "rlbot", "flat", "BallSizeOption", "rlbot", "flat", "BallBouncinessOption", "rlbot", "flat", "BoostOption", "rlbot", "flat", "RumbleOption", "rlbot", "flat", "BoostStrengthOption", "rlbot", "flat", "GravityOption", "rlbot", "flat", "DemolishOption", "rlbot", "flat", "RespawnTimeOption", "rlbot", "flat", "ExistingMatchBehavior", "rlbot", "flat", "GameMessage", "rlbot", "flat", "Vector3", "Rotator", "Touch", "ScoreInfo", "Physics", "PlayerInfo", "DropShotBallInfo", "BallInfo", "BoostPadState", "DropshotTile", "GameInfo", "TeamInfo", "GameTickPacket", "GoalInfo", "BoostPad", "FieldInfo", "Float", "Vector3Partial", "RotatorPartial", "DesiredPhysics", "DesiredBallState", "DesiredCarState", "DesiredBoostState", "DesiredGameInfoState", "DesiredGameState", "Color", "RenderMessage", "RenderGroup", "QuickChat", "PredictionSlice", "BallPrediction", "PsyonixBotPlayer", "PlayerLoadout", "LoadoutPaint", "PlayerConfiguration", "MutatorSettings", "MatchSettings", "import_flatbuffers", "import_flatbuffers", "import_flatbuffers", "flat", "flat", "flat", "flat", "GameMode", "GameMap", "MatchLength", "MaxScore", "OvertimeOption", "SeriesLengthOption", "GameSpeedOption", "BallMaxSpeedOption", "BallTypeOption", "BallWeightOption", "BallSizeOption", "BallBouncinessOption", "BoostOption", "RumbleOption", "BoostStrengthOption", "GravityOption", "DemolishOption", "RespawnTimeOption", "ExistingMatchBehavior", "QuickChatSelection", "import_flatbuffers", "flat", "Color", "flat", "QuickChatSelection", "import_colors", "Net"]
}
