import * as flatbuffers from 'flatbuffers';
import { BallBouncinessOption } from '../../rlbot/flat/ball-bounciness-option';
import { BallMaxSpeedOption } from '../../rlbot/flat/ball-max-speed-option';
import { BallSizeOption } from '../../rlbot/flat/ball-size-option';
import { BallTypeOption } from '../../rlbot/flat/ball-type-option';
import { BallWeightOption } from '../../rlbot/flat/ball-weight-option';
import { BoostOption } from '../../rlbot/flat/boost-option';
import { BoostStrengthOption } from '../../rlbot/flat/boost-strength-option';
import { DemolishOption } from '../../rlbot/flat/demolish-option';
import { GameSpeedOption } from '../../rlbot/flat/game-speed-option';
import { GravityOption } from '../../rlbot/flat/gravity-option';
import { MatchLength } from '../../rlbot/flat/match-length';
import { MaxScore } from '../../rlbot/flat/max-score';
import { OvertimeOption } from '../../rlbot/flat/overtime-option';
import { RespawnTimeOption } from '../../rlbot/flat/respawn-time-option';
import { RumbleOption } from '../../rlbot/flat/rumble-option';
import { SeriesLengthOption } from '../../rlbot/flat/series-length-option';
export declare class MutatorSettings {
    bb: flatbuffers.ByteBuffer | null;
    bb_pos: number;
    __init(i: number, bb: flatbuffers.ByteBuffer): MutatorSettings;
    static getRootAsMutatorSettings(bb: flatbuffers.ByteBuffer, obj?: MutatorSettings): MutatorSettings;
    static getSizePrefixedRootAsMutatorSettings(bb: flatbuffers.ByteBuffer, obj?: MutatorSettings): MutatorSettings;
    matchLength(): MatchLength;
    maxScore(): MaxScore;
    overtimeOption(): OvertimeOption;
    seriesLengthOption(): SeriesLengthOption;
    gameSpeedOption(): GameSpeedOption;
    ballMaxSpeedOption(): BallMaxSpeedOption;
    ballTypeOption(): BallTypeOption;
    ballWeightOption(): BallWeightOption;
    ballSizeOption(): BallSizeOption;
    ballBouncinessOption(): BallBouncinessOption;
    boostOption(): BoostOption;
    rumbleOption(): RumbleOption;
    boostStrengthOption(): BoostStrengthOption;
    gravityOption(): GravityOption;
    demolishOption(): DemolishOption;
    respawnTimeOption(): RespawnTimeOption;
    static startMutatorSettings(builder: flatbuffers.Builder): void;
    static addMatchLength(builder: flatbuffers.Builder, matchLength: MatchLength): void;
    static addMaxScore(builder: flatbuffers.Builder, maxScore: MaxScore): void;
    static addOvertimeOption(builder: flatbuffers.Builder, overtimeOption: OvertimeOption): void;
    static addSeriesLengthOption(builder: flatbuffers.Builder, seriesLengthOption: SeriesLengthOption): void;
    static addGameSpeedOption(builder: flatbuffers.Builder, gameSpeedOption: GameSpeedOption): void;
    static addBallMaxSpeedOption(builder: flatbuffers.Builder, ballMaxSpeedOption: BallMaxSpeedOption): void;
    static addBallTypeOption(builder: flatbuffers.Builder, ballTypeOption: BallTypeOption): void;
    static addBallWeightOption(builder: flatbuffers.Builder, ballWeightOption: BallWeightOption): void;
    static addBallSizeOption(builder: flatbuffers.Builder, ballSizeOption: BallSizeOption): void;
    static addBallBouncinessOption(builder: flatbuffers.Builder, ballBouncinessOption: BallBouncinessOption): void;
    static addBoostOption(builder: flatbuffers.Builder, boostOption: BoostOption): void;
    static addRumbleOption(builder: flatbuffers.Builder, rumbleOption: RumbleOption): void;
    static addBoostStrengthOption(builder: flatbuffers.Builder, boostStrengthOption: BoostStrengthOption): void;
    static addGravityOption(builder: flatbuffers.Builder, gravityOption: GravityOption): void;
    static addDemolishOption(builder: flatbuffers.Builder, demolishOption: DemolishOption): void;
    static addRespawnTimeOption(builder: flatbuffers.Builder, respawnTimeOption: RespawnTimeOption): void;
    static endMutatorSettings(builder: flatbuffers.Builder): flatbuffers.Offset;
    static createMutatorSettings(builder: flatbuffers.Builder, matchLength: MatchLength, maxScore: MaxScore, overtimeOption: OvertimeOption, seriesLengthOption: SeriesLengthOption, gameSpeedOption: GameSpeedOption, ballMaxSpeedOption: BallMaxSpeedOption, ballTypeOption: BallTypeOption, ballWeightOption: BallWeightOption, ballSizeOption: BallSizeOption, ballBouncinessOption: BallBouncinessOption, boostOption: BoostOption, rumbleOption: RumbleOption, boostStrengthOption: BoostStrengthOption, gravityOption: GravityOption, demolishOption: DemolishOption, respawnTimeOption: RespawnTimeOption): flatbuffers.Offset;
    unpack(): MutatorSettingsT;
    unpackTo(_o: MutatorSettingsT): void;
}
export declare class MutatorSettingsT {
    matchLength: MatchLength;
    maxScore: MaxScore;
    overtimeOption: OvertimeOption;
    seriesLengthOption: SeriesLengthOption;
    gameSpeedOption: GameSpeedOption;
    ballMaxSpeedOption: BallMaxSpeedOption;
    ballTypeOption: BallTypeOption;
    ballWeightOption: BallWeightOption;
    ballSizeOption: BallSizeOption;
    ballBouncinessOption: BallBouncinessOption;
    boostOption: BoostOption;
    rumbleOption: RumbleOption;
    boostStrengthOption: BoostStrengthOption;
    gravityOption: GravityOption;
    demolishOption: DemolishOption;
    respawnTimeOption: RespawnTimeOption;
    constructor(matchLength?: MatchLength, maxScore?: MaxScore, overtimeOption?: OvertimeOption, seriesLengthOption?: SeriesLengthOption, gameSpeedOption?: GameSpeedOption, ballMaxSpeedOption?: BallMaxSpeedOption, ballTypeOption?: BallTypeOption, ballWeightOption?: BallWeightOption, ballSizeOption?: BallSizeOption, ballBouncinessOption?: BallBouncinessOption, boostOption?: BoostOption, rumbleOption?: RumbleOption, boostStrengthOption?: BoostStrengthOption, gravityOption?: GravityOption, demolishOption?: DemolishOption, respawnTimeOption?: RespawnTimeOption);
    pack(builder: flatbuffers.Builder): flatbuffers.Offset;
}
